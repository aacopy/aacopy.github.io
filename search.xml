<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MongoDB-事务</title>
      <link href="/MongoDB/MongoDB-%E4%BA%8B%E5%8A%A1/"/>
      <url>/MongoDB/MongoDB-%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>mongoDB 执行事务，需要mongodb的集群模式，需要搭建一个mongo集群</p><h2 id="1-docker搭建伪集群"><a href="#1-docker搭建伪集群" class="headerlink" title="1. docker搭建伪集群"></a>1. docker搭建伪集群</h2><p>如果需要支持mongo的事务，需要集群模式，这里搭建一个简单的伪集群做事务测试</p><ul><li>编写配置文件</li><li><code>vim /dockerData/mongo/config/mongod.conf</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for documentation of all options, see:</span></span><br><span class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/db</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#  engine:</span></span><br><span class="line"><span class="comment">#  mmapv1:</span></span><br><span class="line"><span class="comment">#  wiredTiger:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line"><span class="comment">#  bindIp: 127.0.0.1</span></span><br><span class="line">  <span class="attr">bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">timeZoneInfo:</span> <span class="string">/usr/share/zoneinfo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#security:</span></span><br><span class="line"><span class="comment">#  authorization: enabled</span></span><br><span class="line"><span class="comment">#  keyFile: /etc/mongo/keyFilers0.key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">itdeve-mongodb</span></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">  <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Enterprise-Only Options:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auditLog:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#snmp:</span></span><br></pre></td></tr></table></figure><ul><li>执行docker命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mongo -p 27017:27017 \</span><br><span class="line">-v /dockerData/mongo/data/db:/data/db \</span><br><span class="line">-v /dockerData/mongo/config/mongod.conf:/etc/mongo/mongod.conf \</span><br><span class="line">mongo:4.4.5 --config /etc/mongo/mongod.conf</span><br></pre></td></tr></table></figure><ul><li><p>进去容器：<code>docker exec -it mongo /bin/bash</code></p></li><li><p>打开mongo命令行 <code>mongo</code></p></li><li><p>依次执行命令</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">rs.initiate()</span><br><span class="line">rs.conf()</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ul><li>伪集群搭建完成，可以测试事务</li></ul><h2 id="2-添加事务支持"><a href="#2-添加事务支持" class="headerlink" title="2. 添加事务支持"></a>2. 添加事务支持</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MongoTransactionManager <span class="title">mongoTransactionManager</span><span class="params">(MongoDatabaseFactory mongoDatabaseFactory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MongoTransactionManager(mongoDatabaseFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接下来只需要再service方法上添加<code>@Transactional</code>注解即可</li></ul><h2 id="3-mysql与mongo事务冲突"><a href="#3-mysql与mongo事务冲突" class="headerlink" title="3. mysql与mongo事务冲突"></a>3. mysql与mongo事务冲突</h2><p>如果项目中同时使用了mysql和mongo，并且都使用的事务，会导致mysql的事务失效，无法回滚。因为都实现了PlatformTransactionManager，springboot容器只会加载一个，所需如果需要同时加载两个PlatformTransactionManager的bean。需要对bean从命名，并且保证mysql事务方式不变，指定mysql事务为主</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.mongo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.MongoDatabaseFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.MongoTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.support.JdbcTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/11/20 0:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;mongoTransactionManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MongoTransactionManager <span class="title">mongoTransactionManager</span><span class="params">(MongoDatabaseFactory mongoDatabaseFactory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MongoTransactionManager(mongoDatabaseFactory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;jdbcTransactionManager&quot;)</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTransactionManager <span class="title">jdbcTransactionManager</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JdbcTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>mysql的事务还是保持原来的使用方式</li><li>mongodb在添加<code>@Transactional</code>注解时，需要指定PlatformTransactionManager 的具体bean名称</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAServiceImpl</span> <span class="keyword">implements</span> <span class="title">TestAService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TestARepository testARepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(&quot;mongoTransactionManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TestADO <span class="title">saveTestA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TestADO testADO = <span class="keyword">new</span> TestADO();</span><br><span class="line">        testADO.setName(<span class="string">&quot;嘎嘎&quot;</span>);</span><br><span class="line">        testARepository.save(testADO);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> testADO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这样就解决了同时支持mysql和mongo事务的问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB-入门</title>
      <link href="/MongoDB/MongoDB-%E5%85%A5%E9%97%A8/"/>
      <url>/MongoDB/MongoDB-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>mongoDB是非关系型数据库，存储类似json格式数据</p><h2 id="2-docker安装"><a href="#2-docker安装" class="headerlink" title="2. docker安装"></a>2. docker安装</h2><h3 id="2-1-docker搭建单节点"><a href="#2-1-docker搭建单节点" class="headerlink" title="2.1 docker搭建单节点"></a>2.1 docker搭建单节点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mongo \</span><br><span class="line">  -p 27017:27017 \</span><br><span class="line">  -v /dockerData/mongo/data:/data/db \</span><br><span class="line">  -v /dockerData/mongo/backup:/data/backup \</span><br><span class="line">  -v /dockerData/mongo/conf:/data/configdb \</span><br><span class="line">  -e MONGO_INITDB_ROOT_USERNAME=root \</span><br><span class="line">  -e MONGO_INITDB_ROOT_PASSWORD=aacopy.cn \</span><br><span class="line">  mongo --auth</span><br></pre></td></tr></table></figure><h3 id="2-2-docker搭建伪集群"><a href="#2-2-docker搭建伪集群" class="headerlink" title="2.2 docker搭建伪集群"></a>2.2 docker搭建伪集群</h3><p>如果需要支持mongo的事务，需要集群模式，这里搭建一个简单的伪集群做事务测试</p><ul><li>编写配置文件</li><li><code>vim /dockerData/mongo/config/mongod.conf</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for documentation of all options, see:</span></span><br><span class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/data/db</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#  engine:</span></span><br><span class="line"><span class="comment">#  mmapv1:</span></span><br><span class="line"><span class="comment">#  wiredTiger:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line"><span class="comment">#  bindIp: 127.0.0.1</span></span><br><span class="line">  <span class="attr">bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how the process runs</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">timeZoneInfo:</span> <span class="string">/usr/share/zoneinfo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#security:</span></span><br><span class="line"><span class="comment">#  authorization: enabled</span></span><br><span class="line"><span class="comment">#  keyFile: /etc/mongo/keyFilers0.key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">oplogSizeMB:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">itdeve-mongodb</span></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line">  <span class="attr">clusterRole:</span> <span class="string">shardsvr</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Enterprise-Only Options:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#auditLog:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#snmp:</span></span><br></pre></td></tr></table></figure><ul><li>执行docker命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mongo -p 27017:27017 \</span><br><span class="line">-v /dockerData/mongo/data/db:/data/db \</span><br><span class="line">-v /dockerData/mongo/config/mongod.conf:/etc/mongo/mongod.conf \</span><br><span class="line">mongo:4.4.5 --config /etc/mongo/mongod.conf</span><br></pre></td></tr></table></figure><ul><li><p>进去容器：<code>docker exec -it mongo /bin/bash</code></p></li><li><p>打开mongo命令行 <code>mongo</code></p></li><li><p>依次执行命令</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">rs.initiate()</span><br><span class="line">rs.conf()</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ul><li>伪集群搭建完成，可以测试事务</li></ul>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-plus-乐观锁</title>
      <link href="/Mybatis/Mybatis-plus-%E4%B9%90%E8%A7%82%E9%94%81/"/>
      <url>/Mybatis/Mybatis-plus-%E4%B9%90%E8%A7%82%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h2 id="1-设计思路"><a href="#1-设计思路" class="headerlink" title="1. 设计思路"></a>1. 设计思路</h2><ul><li>获取需要更新的记录</li><li>获取当前记录的版本号</li><li>更新时带上历史版本号作为条件，当原始版本没变时，才能更新成功</li><li>更新时，同时对历史版本号+1</li><li>如果版本已经变过了，就不会更新成功</li></ul><h2 id="2-代码示例"><a href="#2-代码示例" class="headerlink" title="2. 代码示例"></a>2. 代码示例</h2><h3 id="2-1-数据库新建一个测试表"><a href="#2-1-数据库新建一个测试表" class="headerlink" title="2.1 数据库新建一个测试表"></a>2.1 数据库新建一个测试表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `goods` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `num` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `version` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">9</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h3 id="2-2-创建一个springboot项目"><a href="#2-2-创建一个springboot项目" class="headerlink" title="2.2 创建一个springboot项目"></a>2.2 创建一个springboot项目</h3><h3 id="2-3-导入maven依赖"><a href="#2-3-导入maven依赖" class="headerlink" title="2.3 导入maven依赖"></a>2.3 导入maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.learn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4-设置数据库连接配置"><a href="#2-4-设置数据库连接配置" class="headerlink" title="2.4 设置数据库连接配置"></a>2.4 设置数据库连接配置</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://192.168.25.216:3306/aacopy</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">aacopy.cn</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-5-添加mybatisPlus-乐观锁插件"><a href="#2-5-添加mybatisPlus-乐观锁插件" class="headerlink" title="2.5 添加mybatisPlus 乐观锁插件"></a>2.5 添加mybatisPlus 乐观锁插件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.mybatisplus.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/11/2 20:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">mybatisPlusInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor();</span><br><span class="line">        <span class="comment">// 添加乐观锁插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> OptimisticLockerInnerInterceptor());</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>同时需要添加mapper扫描路径</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;cn.aacopy.learn.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusLearnApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisplusLearnApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-通过代码生成工具生成service和mapper"><a href="#2-6-通过代码生成工具生成service和mapper" class="headerlink" title="2.6 通过代码生成工具生成service和mapper"></a>2.6 通过代码生成工具生成service和mapper</h3><p><img src="/images/Mybatis-plus-%E4%B9%90%E8%A7%82%E9%94%81/image-20221102233850924.png" alt="image-20221102233850924"></p><h3 id="2-7-编写测试代码"><a href="#2-7-编写测试代码" class="headerlink" title="2.7 编写测试代码"></a>2.7 编写测试代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.domain.GoodsDO;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.service.GoodsService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MybatisplusLearnApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsService goodsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testMybatisPlusOptimisticLocker</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;测试乐观锁======start&quot;</span>);</span><br><span class="line">        GoodsDO goodsDO = <span class="keyword">new</span> GoodsDO();</span><br><span class="line">        goodsDO.setName(<span class="string">&quot;物品1&quot;</span>);</span><br><span class="line">        goodsDO.setNum(<span class="number">100L</span>);</span><br><span class="line">        goodsService.save(goodsDO);</span><br><span class="line">        Long id = goodsDO.getId();</span><br><span class="line">        <span class="comment">//线程1：获取当前记录，睡眠1秒，再执行更新num为50</span></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            GoodsDO goodsDO1 = goodsService.getById(id);</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;, 保存物品成功，goodsDO=&#123;&#125;&quot;</span>, Thread.currentThread().getName(), goodsDO1);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000L</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            goodsDO1.setNum(<span class="number">50L</span>);</span><br><span class="line">            goodsService.updateById(goodsDO1);</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="comment">//线程2：获取当前记录，睡眠2秒，再执行更新num为200</span></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            GoodsDO goodsDO1 = goodsService.getById(id);</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;, 保存物品成功，goodsDO=&#123;&#125;&quot;</span>, Thread.currentThread().getName(), goodsDO1);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000L</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            goodsDO1.setNum(<span class="number">200L</span>);</span><br><span class="line">            goodsService.updateById(goodsDO1);</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000L</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;更新物品数量成功，goodsDO=&#123;&#125;&quot;</span>, goodsService.getById(id));</span><br><span class="line">        log.info(<span class="string">&quot;测试乐观锁======end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-8-执行测试"><a href="#2-8-执行测试" class="headerlink" title="2.8 执行测试"></a>2.8 执行测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">2022-11-02 23:22:44.378  INFO 20540 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 测试乐观锁======start</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79518e00] was not registered for synchronization because synchronization is not active</span><br><span class="line">2022-11-02 23:22:44.434  INFO 20540 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...</span><br><span class="line">2022-11-02 23:22:45.119  INFO 20540 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.</span><br><span class="line">JDBC Connection [HikariProxyConnection@970900790 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: INSERT INTO goods ( name, num ) VALUES ( ?, ? )</span><br><span class="line">==&gt; Parameters: 物品1(String), 100(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79518e00]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b1f1c0] was not registered for synchronization because synchronization is not active</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584e9813] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@596671943 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">==&gt; Parameters: 8(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 8, 物品1, 100, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17b1f1c0]</span><br><span class="line">JDBC Connection [HikariProxyConnection@999750580 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">2022-11-02 23:22:45.218  INFO 20540 --- [       Thread-2] c.a.l.m.MybatisplusLearnApplicationTests : Thread-2, 保存物品成功，goodsDO=GoodsDO(id=8, name=物品1, num=100, version=1)</span><br><span class="line">==&gt; Parameters: 8(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 8, 物品1, 100, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584e9813]</span><br><span class="line">2022-11-02 23:22:45.221  INFO 20540 --- [       Thread-3] c.a.l.m.MybatisplusLearnApplicationTests : Thread-3, 保存物品成功，goodsDO=GoodsDO(id=8, name=物品1, num=100, version=1)</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50aa8c9b] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@908498390 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: UPDATE goods SET name=?, num=?, version=? WHERE id=?</span><br><span class="line">==&gt; Parameters: 物品1(String), 50(Long), 1(Integer), 8(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50aa8c9b]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@432171d4] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@2006681630 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: UPDATE goods SET name=?, num=?, version=? WHERE id=?</span><br><span class="line">==&gt; Parameters: 物品1(String), 200(Long), 1(Integer), 8(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@432171d4]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49433c98] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@190605872 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a1a256d] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">==&gt; Parameters: 8(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 8, 物品1, 200, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49433c98]</span><br><span class="line">2022-11-02 23:22:48.214  INFO 20540 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 更新物品数量成功，goodsDO=GoodsDO(id=8, name=物品1, num=200, version=1)</span><br><span class="line">2022-11-02 23:22:48.214  INFO 20540 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 测试乐观锁======end</span><br><span class="line">2022-11-02 23:22:48.231  INFO 20540 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...</span><br><span class="line">2022-11-02 23:22:48.237  INFO 20540 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>执行结果发现，在模拟2个并发同时操作更新同一条数据时，两条SQL都执行成功了</li><li>更新sql为 <code>SELECT id,name,num,version FROM goods WHERE id=?</code></li><li>执行最终结果为200</li><li>更新后记录的version版本号为1</li></ul><h3 id="2-9-添加乐观锁配置"><a href="#2-9-添加乐观锁配置" class="headerlink" title="2.9 添加乐观锁配置"></a>2.9 添加乐观锁配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.mybatisplus.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableName(value =&quot;goods&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDO</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long num;</span><br><span class="line">    <span class="comment">// 开启乐观锁</span></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在version字段上添加了@Version注解，用于开启乐观锁</p><h3 id="2-10-有乐观锁的执行结果"><a href="#2-10-有乐观锁的执行结果" class="headerlink" title="2.10 有乐观锁的执行结果"></a>2.10 有乐观锁的执行结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">2022-11-02 23:45:44.194  INFO 7112 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 测试乐观锁======start</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d70638] was not registered for synchronization because synchronization is not active</span><br><span class="line">2022-11-02 23:45:44.251  INFO 7112 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...</span><br><span class="line">2022-11-02 23:45:44.869  INFO 7112 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.</span><br><span class="line">JDBC Connection [HikariProxyConnection@1287215032 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: INSERT INTO goods ( name, num ) VALUES ( ?, ? )</span><br><span class="line">==&gt; Parameters: 物品1(String), 100(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d70638]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4881fa] was not registered for synchronization because synchronization is not active</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5595d] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@1796948188 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">==&gt; Parameters: 9(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 9, 物品1, 100, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4881fa]</span><br><span class="line">JDBC Connection [HikariProxyConnection@82868218 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">2022-11-02 23:45:44.950  INFO 7112 --- [       Thread-2] c.a.l.m.MybatisplusLearnApplicationTests : Thread-2, 保存物品成功，goodsDO=GoodsDO(id=9, name=物品1, num=100, version=1)</span><br><span class="line">==&gt; Parameters: 9(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 9, 物品1, 100, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5595d]</span><br><span class="line">2022-11-02 23:45:44.952  INFO 7112 --- [       Thread-3] c.a.l.m.MybatisplusLearnApplicationTests : Thread-3, 保存物品成功，goodsDO=GoodsDO(id=9, name=物品1, num=100, version=1)</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7240f4] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@1513447050 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: UPDATE goods SET name=?, num=?, version=? WHERE id=? AND version=?</span><br><span class="line">==&gt; Parameters: 物品1(String), 50(Long), 2(Integer), 9(Long), 1(Integer)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7240f4]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55205d07] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@829715892 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: UPDATE goods SET name=?, num=?, version=? WHERE id=? AND version=?</span><br><span class="line">==&gt; Parameters: 物品1(String), 200(Long), 2(Integer), 9(Long), 1(Integer)</span><br><span class="line">&lt;==    Updates: 0</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55205d07]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bfae028] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@393594087 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdc7b09] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods WHERE id=?</span><br><span class="line">==&gt; Parameters: 9(Long)</span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 9, 物品1, 50, 2</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bfae028]</span><br><span class="line">2022-11-02 23:45:47.946  INFO 7112 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 更新物品数量成功，goodsDO=GoodsDO(id=9, name=物品1, num=50, version=2)</span><br><span class="line">2022-11-02 23:45:47.946  INFO 7112 --- [           main] c.a.l.m.MybatisplusLearnApplicationTests : 测试乐观锁======end</span><br><span class="line">2022-11-02 23:45:47.960  INFO 7112 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...</span><br><span class="line">2022-11-02 23:45:47.964  INFO 7112 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>执行结果发现，在模拟2个并发同时操作更新同一条数据时，只有第一天更新50的成功了，更新200的SQL因为version不匹配更新失败</li><li>更新sql为 <code>UPDATE goods SET name=?, num=?, version=? WHERE id=? AND version=?</code></li><li>执行最终结果为50</li><li>更新后记录的version版本号为2</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>在更新的对象里version字段不能为NULL，必须要有值，不然不生效</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ClickHouse-入门</title>
      <link href="/ClickHouse/ClickHouse-%E5%85%A5%E9%97%A8/"/>
      <url>/ClickHouse/ClickHouse-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="行存储与列式存储"><a href="#行存储与列式存储" class="headerlink" title="行存储与列式存储"></a>行存储与列式存储</h2><ul><li>行存储<ul><li>传统的关系性数据库都是行存储</li><li>一行数据在存储介质中的连续的</li><li>适合随机增删改查操作</li><li>查询全部记录的某些字段时，需要查全量数据，查询效率低</li></ul></li><li>列式存储<ul><li>在存储数据时，存储介质中的数据以列的方式来组织的</li><li>存储完需要操作的所有记录的第一个字段后，再存储第二个字段，等等</li><li>查询只查询涉及到的字段，不需要全表扫描，可以减少磁盘io</li><li>列式存储在聚合统计方面性能更优</li><li>存储的列是同一种数据结构，数据压缩率更高，更省空间</li><li>更新数据成本高，一般只适合读多写少的场景</li></ul></li></ul><h2 id="ClickHouse简介"><a href="#ClickHouse简介" class="headerlink" title="ClickHouse简介"></a>ClickHouse简介</h2><p>俄罗斯Yandex在2016年开源，使用C++编写的列式存储数据库，近几年在OLAP领域大范围应用</p><p>官网：<a href="https://clickhouse.com/">https://clickhouse.com/</a></p><p>特点：</p><ul><li>不依赖Hadoop 生态、安装和维护简单</li><li>擅长对列的聚合、计数等统计操作性能强劲</li><li>对列存储和压缩的采用更好的算法，更好节省成本</li><li>拓展性强，在生产中经过实战测试，从单服务器部署到具有数千个节点的集群的线性水平可扩展性</li><li>具有企业级安全功能和故障安全机制，可防止数据因应用程序错误和人为错误而损坏</li><li>支持主流的大部分SQL语法和函数</li><li>吞吐能力强，官方测试支持，支持多种存储引擎，满足多数业务场景</li><li>广泛应用：互联网电商、在线教育、金融等领域，用户行为数据记录和分析，搭建数据可视化平台</li><li>需要Linux或者Mac OS系统</li></ul><h2 id="docker安装ClickHouse"><a href="#docker安装ClickHouse" class="headerlink" title="docker安装ClickHouse"></a>docker安装ClickHouse</h2><ul><li>启动脚本</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> -d --name clickhouse --<span class="built_in">ulimit</span> nofile=262144:262144 \</span></span><br><span class="line"><span class="bash">-p 8123:8123 -p 9000:9000 -p 9009:9009 --privileged=<span class="literal">true</span> \</span></span><br><span class="line"><span class="bash">-v /home/dockerdata/clickhouse/<span class="built_in">log</span>:/var/<span class="built_in">log</span>/clickhouse-server \</span></span><br><span class="line"><span class="bash">-v /home/dockerdata/clickhouse/data:/var/lib/clickhouse clickhouse/clickhouse-server:22.2.3.5</span></span><br></pre></td></tr></table></figure><ul><li>端口：<ul><li>8123：Http端口</li><li>9000：tcp端口</li><li>9009：同步端口</li></ul></li><li>可视化界面</li></ul><h2 id="数据库客户端"><a href="#数据库客户端" class="headerlink" title="数据库客户端"></a>数据库客户端</h2><p>可以使用DBeaver连接clickHouse，下载地址：<a href="https://dbeaver.io/download/">https://dbeaver.io/download/</a></p>]]></content>
      
      
      <categories>
          
          <category> ClickHouse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ClickHouse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-自定义插件</title>
      <link href="/SkyWalking/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6/"/>
      <url>/SkyWalking/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>当现有skywalking无法满足现有统计需求时，需要自定义统计维度，或者对自研中间件进行监控，可以通过添加skywalking的插件来实现无侵入的添加功能</p><p>执行步骤：</p><ul><li>创建一个自定义插件项目</li><li>pom文件继承apm-sdk-plugin</li><li>继承ClassInstanceMethodsEnhancePluginDefine，用于设置需要拦截的类</li><li>实现InstanceMethodsAroundInterceptor，用于对拦截的类进行额外功能扩展</li><li>添加skywalking-plugin.def，指定插件拦截类路径，skywalking启动时会加载该类</li><li>maven打包，并把打好的包放在agent\plugins目录下面</li><li>重启服务</li></ul><p><img src="/images/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6/image-20221027172409170.png" alt="image-20221027172409170"></p><p>（1）maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-sdk-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.skywalking.plugin.plus<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>skywalking-plugin-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">checkstyle.skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">checkstyle.skip</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）拦截类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.skywalking.plugin.plus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.description.method.MethodDescription;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.matcher.ElementMatcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.ConstructorInterceptPoint;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.InstanceMethodsInterceptPoint;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.ClassInstanceMethodsEnhancePluginDefine;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.match.ClassMatch;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.match.PrefixMatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> net.bytebuddy.matcher.ElementMatchers.nameStartsWith;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 14:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountTestHandlerInstrumentation</span> <span class="keyword">extends</span> <span class="title">ClassInstanceMethodsEnhancePluginDefine</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String METHOD_INTERCEPTOR_CLASS = <span class="string">&quot;cn.aacopy.skywalking.plugin.plus.CountTestHandlerMethodInterceptor&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ClassMatch <span class="title">enhanceClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需要对哪些类做增强</span></span><br><span class="line">        <span class="keyword">return</span> PrefixMatch.nameStartsWith(<span class="string">&quot;cn.aacopy.test.simpleboot&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ConstructorInterceptPoint[] getConstructorsInterceptPoints() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ConstructorInterceptPoint[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> InstanceMethodsInterceptPoint[] getInstanceMethodsInterceptPoints() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> InstanceMethodsInterceptPoint[] &#123;</span><br><span class="line">                <span class="keyword">new</span> InstanceMethodsInterceptPoint() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> ElementMatcher&lt;MethodDescription&gt; <span class="title">getMethodsMatcher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> nameStartsWith(<span class="string">&quot;fun&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> String <span class="title">getMethodsInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> METHOD_INTERCEPTOR_CLASS;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isOverrideArgs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（3）拦截处理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.skywalking.plugin.plus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.context.ContextManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.context.tag.StringTag;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.context.tag.Tags;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.context.trace.AbstractSpan;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.context.trace.SpanLayer;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.EnhancedInstance;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstanceMethodsAroundInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.MethodInterceptResult;</span><br><span class="line"><span class="keyword">import</span> org.apache.skywalking.apm.network.trace.component.ComponentsDefine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 14:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountTestHandlerMethodInterceptor</span> <span class="keyword">implements</span> <span class="title">InstanceMethodsAroundInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Long&gt; count = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeMethod</span><span class="params">(EnhancedInstance enhancedInstance, Method method, Object[] objects, Class&lt;?&gt;[] classes, MethodInterceptResult methodInterceptResult)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(count.containsKey(method.getName())) &#123;</span><br><span class="line">            count.put(method.getName(), count.get(method.getName()) + <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            count.put(method.getName(), <span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        AbstractSpan span = ContextManager.createLocalSpan(<span class="string">&quot;CountTest:&quot;</span>+method.getName());</span><br><span class="line">        span.setComponent(ComponentsDefine.TOMCAT);</span><br><span class="line">        span.tag(<span class="keyword">new</span> StringTag(<span class="number">1000</span>, <span class="string">&quot;params&quot;</span>), objects[<span class="number">0</span>].toString());</span><br><span class="line">        span.setLayer(SpanLayer.CACHE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">afterMethod</span><span class="params">(EnhancedInstance enhancedInstance, Method method, Object[] objects, Class&lt;?&gt;[] classes, Object o)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(method.getName() + <span class="string">&quot;方法调用次数===========&quot;</span> + count.get(method.getName()));</span><br><span class="line">        AbstractSpan span = ContextManager.activeSpan();</span><br><span class="line">        Tags.STATUS_CODE.set(span, String.valueOf(count.get(method.getName())));</span><br><span class="line">        ContextManager.stopSpan();</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMethodException</span><span class="params">(EnhancedInstance enhancedInstance, Method method, Object[] objects, Class&lt;?&gt;[] classes, Throwable throwable)</span> </span>&#123;</span><br><span class="line">        ContextManager.activeSpan().log(throwable);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（4）skywalking-plugin.def</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count-test-plugin=cn.aacopy.skywalking.plugin.plus.CountTestHandlerInstrumentation</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>随便写一个springboot工程,启动加入skywalkingagent包，访问接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.test.simpleboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 11:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1Haha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hahaha&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hahah&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2Haha</span><span class="params">(<span class="meta">@RequestParam</span> String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hahaha2sssssssss&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">300</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hihei&quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test3&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test3Haha1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hihei123123213&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">300</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hihei1232312322&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问效果：后台</p><p><img src="/images/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6/image-20221027172706435.png" alt="image-20221027172706435"></p><p>skywalking控制台</p><p><img src="/images/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6/image-20221027172805707.png" alt="image-20221027172805707"></p>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-JavaAgent</title>
      <link href="/SkyWalking/SkyWalking-JavaAgent/"/>
      <url>/SkyWalking/SkyWalking-JavaAgent/</url>
      
        <content type="html"><![CDATA[<h3 id="Skywalking实现"><a href="#Skywalking实现" class="headerlink" title="Skywalking实现"></a>Skywalking实现</h3><p>如果需要我们对每个方法的执行添加打印执行时间，一般可以通过AOP的方式来实现，对每个方法做环绕通知的切面，这种方式有一个问题就是，如果后续还有一些其他需求需要在方法执行前做统计，比如打印HTTPRequest中的请求地址，请求参数等信息，就需要重新编写aop，编译部署上线。</p><p>skywalking使用0侵入的方式来扩展Java程序的功能，具体实现就是使用了Java插桩技术。</p><h2 id="字节码插桩"><a href="#字节码插桩" class="headerlink" title="字节码插桩"></a>字节码插桩</h2><p>字节码插桩实际就是在代码运行期间对字节码进行修改，比如动态代理，或者java Agent</p><p>skywalking就是通过javaAgent实现的字节码增强，启动方式：</p><p>启动jar包时，需要添加额外的运行参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:D:\tool\apache-skywalking-apm-bin-es7\agent\skywalking-agent.jar -Dskywalking.agent.service_name=skywalking-learn -Dskywalking.collector.backend_service=<span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span>:<span class="number">11800</span></span><br></pre></td></tr></table></figure><p>skywalking-agent.jar就是修改字节码的具体实现的包</p><h3 id="JavaAgent"><a href="#JavaAgent" class="headerlink" title="JavaAgent"></a>JavaAgent</h3><p>jdk1.5引入的新特性，在加载class前进行拦截，我们可以对拦截的class做一些修改操作，然后再加载这个class。</p><p>agent的启动方式</p><ul><li>静态启动<ul><li>使用-javaagent的方式，在应用启动时挂载agent</li><li>主方法入口：premain()</li><li>对字节码操作自由度高，只要符合字节码规范，JVM可以验证通过，可以对字节码做任何修改</li><li>SkyWalking</li></ul></li><li>动态附加<ul><li>在应用运行过程中通过attach API挂载Agent</li><li>主方法入口：agentmain()</li><li>对字节码操作自由度低，不能创建父类，接口，字段…</li><li>Arthas</li></ul></li></ul><p>javaAgent探针包要求在META-INF/MANIFEST.MF文件中，要有一个包含premain方法的入口类</p><p>public static void premain(String agentArgs, Instrumentation inst) </p><p>agentArgs：挂载agent是设置的参数</p><p>Instrumentation ：可以获取一些类信息</p><ul><li>addTransformer()/removeTransformer() ：注册/注销一个 ClassFileTransformer 类的实例，该 Transformer 会在类加载的时候被调用，可用于修改类定义（修改类的字节码）。</li><li>redefineClasses() ：重新定义传入已经加载的类。</li><li>getAllLoadedClasses()：返回 JVM 已加载的所有类。</li><li>getInitiatedClasses() ：返回 JVM 已经初始化的类。</li><li>getObjectSize()：获取参数指定的对象的大小。</li></ul><h3 id="字节码操作工具"><a href="#字节码操作工具" class="headerlink" title="字节码操作工具"></a>字节码操作工具</h3><p>JavaAgent就是一个插桩入口，主要是做代理拦截的，真正做字节码修改的，是有一套操作字节码的工具，目前主要有：</p><p>asm，javassist，bytebuddy</p><ul><li>asm<ul><li>支持任意字节码插入，功能强大，比较偏底层，学习难度大</li></ul></li><li>javassist<ul><li>java原始语法，支持jdk1.5的语法，后面的一些其他语法比如泛型等不支持</li></ul></li><li>bytebuddy<ul><li>基于asm实现，通过一些API操作class，支持java任意版本，性能比javassist高</li><li>skywalking就是使用bytebuddy来实现的修改字节码</li></ul></li></ul><h2 id="bytebuddy"><a href="#bytebuddy" class="headerlink" title="bytebuddy"></a>bytebuddy</h2><p>定义一个最简单的探针包主要分为如下几个步骤</p><ul><li>创建一个探针maven项目</li><li>编写探针入口类：public static void premain(String agentArgs, Instrumentation inst)</li><li>编写拦截配置，需要拦截哪些类，可以根据全类名前缀，后缀，标记的注解等等</li><li>编写拦截后的处理类</li><li>处理类的方法参数中可以获取当前执行类的method，参数，调用类，父类对象等等</li><li>在方法中编写需要增强的代码</li><li>使用maven插件，生成MANIFEST.MF文件，打包</li></ul><p>DEMO实例：</p><p><img src="/images/SkyWalking-JavaAgent/image-20221027134214704.png" alt="image-20221027134214704"></p><p>（1）引入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.learn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>agent-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.bytebuddy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>byte-buddy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.12.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">archive</span>&gt;</span> <span class="comment">&lt;!--自动添加META-INF/MANIFEST.MF --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- 添加 mplementation-*和Specification-*配置项--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">addDefaultImplementationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultImplementationEntries</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">addDefaultSpecificationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultSpecificationEntries</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--指定premain方法所在的类--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Premain-Class</span>&gt;</span>cn.aacopy.learn.agent.AgentMainTest<span class="tag">&lt;/<span class="name">Premain-Class</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Can-Redefine-Classes</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Can-Redefine-Classes</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">Can-Retransform-Classes</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Can-Retransform-Classes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）创建探针入口premain方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.agent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.agent.builder.AgentBuilder;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.MethodDelegation;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.matcher.ElementMatchers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.instrument.Instrumentation;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 9:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgentMainTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">premain</span><span class="params">(String agentArgs, Instrumentation inst)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行agent拦截，参数：&quot;</span> + agentArgs);</span><br><span class="line">        <span class="comment">//使用bytebuddy的AgentBuilder构建Agent</span></span><br><span class="line">        AgentBuilder.Identified.Extendable agentBuilder = <span class="keyword">new</span> AgentBuilder</span><br><span class="line">                <span class="comment">//使用默认agent实例</span></span><br><span class="line">                .Default()</span><br><span class="line">                <span class="comment">//拦截配置方式设置</span></span><br><span class="line">                .type(ElementMatchers.nameStartsWith(agentArgs))</span><br><span class="line">                <span class="comment">//拦截到的class的处理方式</span></span><br><span class="line">                .transform((builder, typeDescription, classLoader, javaModule) -&gt;</span><br><span class="line">                        <span class="comment">// 设置拦截规则，哪些方法会被拦截</span></span><br><span class="line">                        builder.method(ElementMatchers.isPublic().and(ElementMatchers.nameEndsWith(<span class="string">&quot;Haha&quot;</span>)))</span><br><span class="line">                                <span class="comment">// 拦截后交给 SpringControllerInterceptor 处理</span></span><br><span class="line">                                .intercept(MethodDelegation.to(TimeInterceptor.class)));</span><br><span class="line">        <span class="comment">// 装载到 instrumentation 上</span></span><br><span class="line">        agentBuilder.installOn(inst);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）编写一个拦截后的方法处理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.agent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.AllArguments;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.Origin;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.RuntimeType;</span><br><span class="line"><span class="keyword">import</span> net.bytebuddy.implementation.bind.annotation.SuperCall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 10:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@RuntimeType：不进行严格的参数类型检测，在参数匹配失败时，尝试使用类型转换方式（runtime type casting）进行类型转换，匹配相应方法。</span></span><br><span class="line">    <span class="comment">//@Origin：注入正在执行的方法Method 对象</span></span><br><span class="line">    <span class="comment">//@AllArguments：获取入参列表</span></span><br><span class="line">    <span class="comment">//@SuperCall:方法的调用者对象,可以用于对原始方法的调用</span></span><br><span class="line">    <span class="meta">@RuntimeType</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">intercept</span><span class="params">(<span class="meta">@Origin</span> Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   <span class="meta">@AllArguments</span> Object[] args,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   <span class="meta">@SuperCall</span> Callable&lt;?&gt; callable)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> l1 = System.currentTimeMillis();</span><br><span class="line">        <span class="comment">// 执行原函数</span></span><br><span class="line">        Object result = callable.call();</span><br><span class="line">        System.out.println(method.getName() + <span class="string">&quot;:执行耗时&quot;</span> + (System.currentTimeMillis() - l1) + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;参数列表：&quot;</span>+Arrays.toString(args));</span><br><span class="line">        System.out.println(<span class="string">&quot;返回类型：&quot;</span>+method.getReturnType());</span><br><span class="line">        System.out.println(<span class="string">&quot;返回值：&quot;</span>+result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（4）随便写一个应用程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.test.simpleboot.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/27 11:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1Haha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hahaha&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hahah&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test2Haha</span><span class="params">(<span class="meta">@RequestParam</span> String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hahaha2sssssssss&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">300</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hihei&quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test3&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test3Haha1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hihei123123213&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">300</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hihei1232312322&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（5）修改启动jvm配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:D:\code\mine\agent-learn\target\agent-learn-<span class="number">1.0</span>-SNAPSHOT-jar-with-dependencies.jar=cn.aacopy.test.simpleboot.controller</span><br></pre></td></tr></table></figure><p>（6）启动服务，调用接口</p><p>启动服务前会打印日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行agent拦截，参数：cn.aacopy.test.simpleboot.controller</span><br></pre></td></tr></table></figure><p>调用接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hihei123123213</span><br><span class="line"></span><br><span class="line">hahaha</span><br><span class="line">test1Haha:执行耗时100ms</span><br><span class="line">参数列表：[]</span><br><span class="line">返回类型：class java.lang.String</span><br><span class="line">返回值：hahah</span><br><span class="line"></span><br><span class="line">hahaha2sssssssss</span><br><span class="line">test2Haha:执行耗时306ms</span><br><span class="line">参数列表：[wwwww]</span><br><span class="line">返回类型：class java.lang.String</span><br><span class="line">返回值：hiheiwwwww</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Skywalking的插桩实现，静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassEnhancePluginDefine</span> <span class="keyword">extends</span> <span class="title">AbstractClassEnhancePluginDefine</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Enhance a class to intercept class static methods.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> typeDescription target class description</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newClassBuilder byte-buddy&#x27;s builder to manipulate class bytecode.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> new byte-buddy&#x27;s builder for further manipulation.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> DynamicType.Builder&lt;?&gt; enhanceClass(TypeDescription typeDescription, DynamicType.Builder&lt;?&gt; newClassBuilder,</span><br><span class="line">        ClassLoader classLoader) <span class="keyword">throws</span> PluginException &#123;</span><br><span class="line">        StaticMethodsInterceptPoint[] staticMethodsInterceptPoints = getStaticMethodsInterceptPoints();</span><br><span class="line">        String enhanceOriginClassName = typeDescription.getTypeName();</span><br><span class="line">        <span class="keyword">if</span> (staticMethodsInterceptPoints == <span class="keyword">null</span> || staticMethodsInterceptPoints.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> newClassBuilder;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (StaticMethodsInterceptPoint staticMethodsInterceptPoint : staticMethodsInterceptPoints) &#123;</span><br><span class="line">            String interceptor = staticMethodsInterceptPoint.getMethodsInterceptor();</span><br><span class="line">            <span class="keyword">if</span> (StringUtil.isEmpty(interceptor)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> EnhanceException(<span class="string">&quot;no StaticMethodsAroundInterceptor define to enhance class &quot;</span> + enhanceOriginClassName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (staticMethodsInterceptPoint.isOverrideArgs()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isBootstrapInstrumentation()) &#123;</span><br><span class="line">                    newClassBuilder = newClassBuilder.method(isStatic().and(staticMethodsInterceptPoint.getMethodsMatcher()))</span><br><span class="line">                                                     .intercept(MethodDelegation.withDefaultConfiguration()</span><br><span class="line">                                                                                .withBinders(Morph.Binder.install(OverrideCallable.class))</span><br><span class="line">                                                                                .to(BootstrapInstrumentBoost.forInternalDelegateClass(interceptor)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    newClassBuilder = newClassBuilder.method(isStatic().and(staticMethodsInterceptPoint.getMethodsMatcher()))</span><br><span class="line">                                                     .intercept(MethodDelegation.withDefaultConfiguration()</span><br><span class="line">                                                                                .withBinders(Morph.Binder.install(OverrideCallable.class))</span><br><span class="line">                                                                                .to(<span class="keyword">new</span> StaticMethodsInterWithOverrideArgs(interceptor)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (isBootstrapInstrumentation()) &#123;</span><br><span class="line">                    newClassBuilder = newClassBuilder.method(isStatic().and(staticMethodsInterceptPoint.getMethodsMatcher()))</span><br><span class="line">                                                     .intercept(MethodDelegation.withDefaultConfiguration()</span><br><span class="line">                                                                                .to(BootstrapInstrumentBoost.forInternalDelegateClass(interceptor)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    newClassBuilder = newClassBuilder.method(isStatic().and(staticMethodsInterceptPoint.getMethodsMatcher()))</span><br><span class="line">                                                     .intercept(MethodDelegation.withDefaultConfiguration()</span><br><span class="line">                                                                                .to(<span class="keyword">new</span> StaticMethodsInter(interceptor)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> newClassBuilder;</span><br><span class="line">    &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（增强类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticMethodsInter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ILog LOGGER = LogManager.getLogger(StaticMethodsInter.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * A class full name, and instanceof &#123;<span class="doctag">@link</span> StaticMethodsAroundInterceptor&#125; This name should only stay in &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">     * String&#125;, the real &#123;<span class="doctag">@link</span> Class&#125; type will trigger classloader failure. If you want to know more, please check on</span></span><br><span class="line"><span class="comment">     * books about Classloader or Classloader appointment mechanism.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String staticMethodsAroundInterceptorClassName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Set the name of &#123;<span class="doctag">@link</span> StaticMethodsInter#staticMethodsAroundInterceptorClassName&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> staticMethodsAroundInterceptorClassName class full name.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StaticMethodsInter</span><span class="params">(String staticMethodsAroundInterceptorClassName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.staticMethodsAroundInterceptorClassName = staticMethodsAroundInterceptorClassName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Intercept the target static method.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz        target class 要修改字节码的目标类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allArguments all method arguments 原方法所有的入参</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method       method description. 原方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> zuper        the origin call ref. 原方法的调用 zuper.call()代表调用原方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the return value of target static method.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception only throw exception because of zuper.call() or unexpected exception in sky-walking ( This is a</span></span><br><span class="line"><span class="comment">     *                   bug, if anything triggers this condition ).</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RuntimeType</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(<span class="meta">@Origin</span> Class&lt;?&gt; clazz, <span class="meta">@AllArguments</span> Object[] allArguments, <span class="meta">@Origin</span> Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="meta">@SuperCall</span> Callable&lt;?&gt; zuper)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        StaticMethodsAroundInterceptor interceptor = InterceptorInstanceLoader.load(staticMethodsAroundInterceptorClassName, clazz</span><br><span class="line">            .getClassLoader());</span><br><span class="line"></span><br><span class="line">        MethodInterceptResult result = <span class="keyword">new</span> MethodInterceptResult();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            interceptor.beforeMethod(clazz, method, allArguments, method.getParameterTypes(), result);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            LOGGER.error(t, <span class="string">&quot;class[&#123;&#125;] before static method[&#123;&#125;] intercept failure&quot;</span>, clazz, method.getName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Object ret = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!result.isContinue()) &#123;</span><br><span class="line">                ret = result._ret();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//调用原方法</span></span><br><span class="line">                ret = zuper.call();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                interceptor.handleMethodException(clazz, method, allArguments, method.getParameterTypes(), t);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable t2) &#123;</span><br><span class="line">                LOGGER.error(t2, <span class="string">&quot;class[&#123;&#125;] handle static method[&#123;&#125;] exception failure&quot;</span>, clazz, method.getName(), t2.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> t;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ret = interceptor.afterMethod(clazz, method, allArguments, method.getParameterTypes(), ret);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">                LOGGER.error(t, <span class="string">&quot;class[&#123;&#125;] after static method[&#123;&#125;] intercept failure:&#123;&#125;&quot;</span>, clazz, method.getName(), t.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-Event</title>
      <link href="/Spring/Spring-Event/"/>
      <url>/Spring/Spring-Event/</url>
      
        <content type="html"><![CDATA[<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><h3 id="定义事件"><a href="#定义事件" class="headerlink" title="定义事件"></a>定义事件</h3><p>定义事件可以是一个简单的POJO对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AacopyTestEvent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写监听事件处理类"><a href="#编写监听事件处理类" class="headerlink" title="编写监听事件处理类"></a>编写监听事件处理类</h3><p>监听事件需要</p><ul><li>在处理方法上添加<code>@EventListener</code>注解，</li><li>在方法入参里加上对应的事件对象</li><li>将方法所在类加入到spring容器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AacopyTestEventListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleAacopyTestEvent</span><span class="params">(AacopyTestEvent aacopyTestEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;接收到事件...&quot;</span>);</span><br><span class="line">        System.out.println(aacopyTestEvent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写发布事件测试类"><a href="#编写发布事件测试类" class="headerlink" title="编写发布事件测试类"></a>编写发布事件测试类</h3><p>发布事件需要用<code>ApplicationEventPublisher</code>对象，或者<code>ApplicationContext</code>,ApplicationContext继承了ApplicationEventPublisher</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EventPublisherTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationEventPublisher applicationEventPublisher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">testPublish</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;发送事件...&quot;</span>);</span><br><span class="line">        applicationEventPublisher.publishEvent(AacopyTestEvent.builder().name(<span class="string">&quot;aacopy&quot;</span>).description(<span class="string">&quot;aacopy.cn&quot;</span>).build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行结果</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">发送事件...</span><br><span class="line">接收到事件...</span><br><span class="line">AacopyTestEvent(name=aacopy, description=aacopy.cn)</span><br></pre></td></tr></table></figure><h2 id="异步执行事件"><a href="#异步执行事件" class="headerlink" title="异步执行事件"></a>异步执行事件</h2><p>发布事件和监听事件默认情况下是同步执行的，如果需要异步执行，只需要在监听方法上添加@Async</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-EL</title>
      <link href="/Spring/Spring-EL/"/>
      <url>/Spring/Spring-EL/</url>
      
        <content type="html"><![CDATA[<h2 id="SpringEL实现规则表达式判断"><a href="#SpringEL实现规则表达式判断" class="headerlink" title="SpringEL实现规则表达式判断"></a>SpringEL实现规则表达式判断</h2><p>Spring 表达式语言（简称“SpEL”）是一种强大的表达式语言</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    Expression exp = parser.parseExpression(<span class="string">&quot;&#x27;1 + 1 = &#x27; + (1 + 1)&quot;</span>);</span><br><span class="line">    String message = exp.getValue(String.class);</span><br><span class="line">    System.out.println(message); <span class="comment">//1 + 1 = 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="项目中动态计算表达式值的过程"><a href="#项目中动态计算表达式值的过程" class="headerlink" title="项目中动态计算表达式值的过程"></a>项目中动态计算表达式值的过程</h2><ul><li><p>从页面上配置表单式，左值选择表单中的属性或者接口返回对象属性，中间选择比较符号，右值选择枚举或者输入字符串</p><p><img src="/images/Spring-EL/image-20220705110312380.png" alt="image-20220705110312380"></p></li><li><p>使用时，生成完整表达式，并获取计算表达式需要的所有的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(#fun1([formModules][MD_OC], &quot;[status]==&#x27;1&#x27;&quot;) &amp;&amp; [formModules][MD_PROJECT][projectStatusId]==&#x27;13123b02-74a6-4ec4-8978-77ec446d4e29&#x27;) || (#fun1([formModules][MD_OC], &quot;[status]==&#x27;1&#x27;&quot;) &amp;&amp; [formModules][MD_PROJECT][projectStatusId]==&#x27;3619a136-7988-440a-84d1-ccf8a7e2cb06&#x27;)</span><br></pre></td></tr></table></figure><p><img src="/images/Spring-EL/image-20220705110836953.png" alt="image-20220705110836953"></p></li><li><p>通过SpringEL模板引擎计算结果</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据表达式和资源数据，计算表达式的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> express</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sourceData</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">doCompute</span><span class="params">(String express, Map&lt;String, Object&gt; sourceData)</span> </span>&#123;</span><br><span class="line">    EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(sourceData);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Method fun1Method = RuleComponent.class.getDeclaredMethod(<span class="string">&quot;fun1&quot;</span>, List.class, String.class);</span><br><span class="line">        evaluationContext.setVariable(<span class="string">&quot;fun1&quot;</span>, fun1Method);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Object value = parser.parseExpression(express).getValue(evaluationContext);</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;计算表达式值出错：&#123;&#125;&quot;</span>, e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引用的方法主要处理一些内置表达式无法完成的规则计算，这里是为了计算接口返回的集合中的每一条数据是否都满足条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">fun1</span><span class="params">(List&lt;Object&gt; arr, String exp)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(CollUtil.isEmpty(arr)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    Expression expression = parser.parseExpression(exp);</span><br><span class="line">    <span class="keyword">for</span> (Object jsonNode : arr) &#123;</span><br><span class="line">        Map&lt;String, Object&gt; param = objectMapper.convertValue(jsonNode, <span class="keyword">new</span> TypeReference&lt;Map&lt;String, Object&gt;&gt;() &#123;&#125;);</span><br><span class="line">        EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(param);</span><br><span class="line">        Boolean value = expression.getValue(evaluationContext, Boolean.class);</span><br><span class="line">        <span class="keyword">if</span>(value == <span class="keyword">null</span> || !value) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SpEL支持的功能"><a href="#SpEL支持的功能" class="headerlink" title="SpEL支持的功能"></a>SpEL支持的功能</h2><h3 id="从对象，集合，Map中获取数据"><a href="#从对象，集合，Map中获取数据" class="headerlink" title="从对象，集合，Map中获取数据"></a>从对象，集合，Map中获取数据</h3><ul><li><p>从对象获取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(user);</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    Expression exp = parser.parseExpression(<span class="string">&quot;#root.name&quot;</span>);</span><br><span class="line">    String message = exp.getValue(evaluationContext, String.class);</span><br><span class="line">    System.out.println(message); <span class="comment">//张三</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从集合获取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; users = Arrays.asList(<span class="keyword">new</span> User(<span class="string">&quot;张三&quot;</span>), <span class="keyword">new</span> User(<span class="string">&quot;李四&quot;</span>), <span class="keyword">new</span> User(<span class="string">&quot;王五&quot;</span>));</span><br><span class="line">    EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(users);</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    Expression exp = parser.parseExpression(<span class="string">&quot;#root[2].name&quot;</span>);</span><br><span class="line">    String message = exp.getValue(evaluationContext, String.class);</span><br><span class="line">    System.out.println(message); <span class="comment">//王五</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从Map获取对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line">    Map&lt;String, Object&gt; detail = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    detail.put(<span class="string">&quot;address&quot;</span>, <span class="string">&quot;合肥&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;detail&quot;</span>, detail);</span><br><span class="line">  </span><br><span class="line">    EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(map);</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    String express = <span class="string">&quot;&#x27;姓名：&#x27; + [name] + &#x27;，年龄：&#x27; + [age] + &#x27;，地址：&#x27; + [detail][address]&quot;</span>;</span><br><span class="line">    Expression exp = parser.parseExpression(express);</span><br><span class="line">    String message = exp.getValue(evaluationContext, String.class);</span><br><span class="line">    System.out.println(message); <span class="comment">//姓名：张三，年龄：18，地址：合肥</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="判空处理"><a href="#判空处理" class="headerlink" title="判空处理"></a>判空处理</h3><ul><li><p>Map的判空操作</p><ul><li><p>如果在StandardEvaluationContext中设置的对象是一个map，在判空获取值时，不能使用[xxx]这种方式，需要使用get方式</p></li><li><p>例如：从approve中获取summary参数值，approve有可能为null，summary也有可能为空</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;摘要：&#x27;</span>+(#root.get(<span class="string">&#x27;approve&#x27;</span>)?.get(<span class="string">&#x27;summary&#x27;</span>)?:<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="计算符号"><a href="#计算符号" class="headerlink" title="计算符号"></a>计算符号</h3><ul><li><p>支持基本的运算符，括号内和符号是等价的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">lt( &lt; ), gt( &gt; ), le( &lt;= ), ge( &gt;= ), eq( == ), ne( != ), div( / ), mod( % ), not( ! )</span><br><span class="line"></span><br><span class="line">and( &amp;&amp; ), or( || ), not( ! )</span><br><span class="line"></span><br><span class="line">+, -, *, /, %, ^</span><br><span class="line"></span><br><span class="line"><span class="keyword">instanceof</span> </span><br><span class="line">parser.parseExpression(<span class="string">&quot;&#x27;xyz&#x27; instanceof T(Integer)&quot;</span>).getValue(Boolean.class);</span><br><span class="line"></span><br><span class="line">matches</span><br><span class="line">parser.parseExpression(<span class="string">&quot;&#x27;5.00&#x27; matches &#x27;^-?\\d+(\\.\\d&#123;2&#125;)?$&#x27;&quot;</span>).getValue(Boolean.class);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><p>可以调用java的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">    Expression exp = parser.parseExpression(<span class="string">&quot;&#x27;abc&#x27;.substring(1, 3)&quot;</span>);</span><br><span class="line">    String message = exp.getValue(String.class);</span><br><span class="line">    System.out.println(message); <span class="comment">//bc</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h3><p>当基本的运算符和方法无法满足表达式计算时，可以自定义函数，在表达式中调用自定义函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ELExpress</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        EvaluationContext evaluationContext = <span class="keyword">new</span> StandardEvaluationContext(user);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Method funMethod = ELExpress.class.getDeclaredMethod(<span class="string">&quot;check&quot;</span>, String.class);</span><br><span class="line">            evaluationContext.setVariable(<span class="string">&quot;check&quot;</span>, funMethod);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        ExpressionParser parser = <span class="keyword">new</span> SpelExpressionParser();</span><br><span class="line">        Expression exp = parser.parseExpression(<span class="string">&quot;#check(#root.name)&quot;</span>);</span><br><span class="line">        Boolean message = exp.getValue(evaluationContext, Boolean.class);</span><br><span class="line">        System.out.println(message); <span class="comment">//true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;处理复杂逻辑...&quot;</span> + str); <span class="comment">//处理复杂逻辑...张三</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>语法可以参考官方文档：<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#expressions-language-ref">https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#expressions-language-ref</a></p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-AOP</title>
      <link href="/Spring/Spring-AOP/"/>
      <url>/Spring/Spring-AOP/</url>
      
        <content type="html"><![CDATA[<p>AOP面向切面编程</p><p>切面的逻辑和业务逻辑进行隔离，降低耦合度，提高代码可重用性</p><h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><p>AOP通过动态代理来实现，分为两种代理方式，（1）JDK动态代理，（2）CGLIB动态代理</p><h3 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h3><p>有接口通过JDK动态代理，通过实现接口来创建代理对象</p><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><ul><li><p>定义一个接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TestService</span> </span>&#123;</span><br><span class="line">    <span class="function">Integer <span class="title">add</span><span class="params">(String str)</span></span>;</span><br><span class="line">    <span class="function">Boolean <span class="title">delete</span><span class="params">(String str)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestServiceImpl</span> <span class="keyword">implements</span> <span class="title">TestService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行add方法：&quot;</span> + str);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">delete</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行删除方法：&quot;</span> + str);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建代理类并执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TestService testService = <span class="keyword">new</span> TestServiceImpl();</span><br><span class="line">    TestService testServiceProxy = (TestService) Proxy.newProxyInstance(JdkProxyTest.class.getClassLoader(), <span class="keyword">new</span> Class[]&#123;TestService.class&#125;, (proxy, method, args1) -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行前执行：&quot;</span> + method.getName());</span><br><span class="line">        Object result = method.invoke(testService, args1);</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行后执行：&quot;</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;);</span><br><span class="line">    testServiceProxy.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;---------------------------&quot;</span>);</span><br><span class="line">    testServiceProxy.delete(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过Proxy.newProxyInstance来创建代理类，第一个参数为类加载器，第二个参数为需要代理的接口，第三个参数为代理方法，需要自己实现InvocationHandler接口。</li></ul></li><li><p>执行结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方法执行前执行：add</span><br><span class="line">执行add方法：hello</span><br><span class="line">方法执行后执行：1</span><br><span class="line">---------------------------</span><br><span class="line">方法执行前执行：delete</span><br><span class="line">执行删除方法：world</span><br><span class="line">方法执行后执行：true</span><br></pre></td></tr></table></figure></li></ul><h3 id="CGLIB动态代理"><a href="#CGLIB动态代理" class="headerlink" title="CGLIB动态代理"></a>CGLIB动态代理</h3><p>没有接口时，需要使用CGLIB动态代理，通过创建被代理类的子类作为代理对象</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li><p>连接点</p><ul><li>可以被增强的方法</li></ul></li><li><p>切入点</p><ul><li>实际被增强的方法</li></ul></li><li><p>通知</p><ul><li>增强的逻辑就是通知</li><li>通知的类型<ul><li>前置通知</li><li>后置通知，正常执行完通知</li><li>异常通知</li><li>环绕通知</li><li>方法执行完的最终通知，不管有没有异常</li></ul></li></ul></li><li><p>切面</p><ul><li>把通知应用到切入点的动作叫切面</li></ul></li></ul><h2 id="切面表达式"><a href="#切面表达式" class="headerlink" title="切面表达式"></a>切面表达式</h2><p>表达式模板：<code>execution([权限修饰符][返回值][全类名].[方法名]([参数]))</code></p><p>例如：<code>execution(public void cn.aacopy.learn.spring.aop.UserService.add())</code></p><ul><li>通配符可以用*表示</li><li>修饰符可以省略</li><li>方法参数可以用<code>..</code>表示</li></ul><h2 id="demo-1"><a href="#demo-1" class="headerlink" title="demo"></a>demo</h2><ul><li>引入依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>启用aop注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;cn.aacopy&quot;)</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写业务类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行add方法&quot;</span> + str);</span><br><span class="line">        <span class="keyword">return</span> str + <span class="string">&quot; @aacopy&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写切面类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;execution(public String cn.aacopy.learn.spring.aop.UserService.add(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;前置通知执行...&quot;</span> + joinPoint.getSignature().toShortString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知前...&quot;</span>);</span><br><span class="line">        Object result = proceedingJoinPoint.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知后...&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;后置通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;最终通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;异常通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> AnnotationConfigApplicationContext(MyConfig.class);</span><br><span class="line">    UserService userService = applicationContext.getBean(UserService.class);</span><br><span class="line">    userService.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="提取公共模板"><a href="#提取公共模板" class="headerlink" title="提取公共模板"></a>提取公共模板</h3><ul><li>编写一个方法，上面使用@Pointcut注解，其他方法直接使用方法名即可，方便统一管理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointCutTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;execution(public String cn.aacopy.learn.spring.aop.UserService.add(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;前置通知执行...&quot;</span> + joinPoint.getSignature().toShortString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;pointCutTemplate()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知前...&quot;</span>);</span><br><span class="line">        Object result = proceedingJoinPoint.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕通知后...&quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;pointCutTemplate()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;后置通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;最终通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;execution(* cn.aacopy.learn.spring.aop.UserService.*(..))&quot;)</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;异常通知执行...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果需要异步执行，只需要在启动类上开启异步@EnableAsync，并在方法上添加@Async注解</li></ul><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><p>多个AOP切面，设置优先级，可以在切面类上添加@Order注解，值小的，优先执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Order(-1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopTest</span> </span>&#123;</span><br></pre></td></tr></table></figure><h2 id="通过注解方式实现切面"><a href="#通过注解方式实现切面" class="headerlink" title="通过注解方式实现切面"></a>通过注解方式实现切面</h2><ul><li>定义注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RefreshCache &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加注解到需要执行切面的方法上</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RefreshCache</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Result&lt;RoleVo&gt; <span class="title">add</span><span class="params">(<span class="meta">@RequestBody</span> RoleAddDto roleAddDto)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.success(roleService.add(roleAddDto));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>切面逻辑</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefreshCacheAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> ResourceCacheService resourceCacheService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法成功返回后执行刷新缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@AfterReturning(&quot;@annotation(com.xxx.cache.RefreshCache)&quot;)</span></span><br><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshCache</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">log.info(<span class="string">&quot;&#123;&#125;执行完成，开始异步刷新缓存...&quot;</span>, joinPoint.getSignature().toShortString());</span><br><span class="line"><span class="keyword">long</span> l1 = System.currentTimeMillis();</span><br><span class="line">resourceCacheService.doCacheAll();</span><br><span class="line"><span class="keyword">long</span> l2 = System.currentTimeMillis();</span><br><span class="line">log.info(<span class="string">&quot;异步刷新Resource缓存成功，耗时:&#123;&#125;ms&quot;</span>, (l2-l1));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-IOC</title>
      <link href="/Spring/Spring-IOC/"/>
      <url>/Spring/Spring-IOC/</url>
      
        <content type="html"><![CDATA[<p>IOC：控制反转，将创建对象的操作交给Spring处理，要使用某个对象，只需要从Spring容器中获取，主要目的是为了降低耦合</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li><p>创建一个maven项目</p></li><li><p>在pom文件中引入spring的依赖spring-context，context依赖了spring的4大核心包，spring-core，spring-beans，spring-core，spring-expression</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/Spring-IOC/image-20220909001243096.png" alt="image-20220909001243096"></p><ul><li>编写一个类Hello</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.spring;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/9/9 0:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写一个配置bean的XML文件bean.xml放在classpath路径下</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.learn.spring.Hello&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在main方法中获取hello对象，并调用hello方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    Hello hello = applicationContext.getBean(Hello.class);</span><br><span class="line">    hello.hello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Spring-IOC/image-20220909002548209.png" alt="image-20220909002548209"></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>通过xml解析，工厂模式，反射来实现</p><p>A类中引用B类的对象，最原始的方式是在A类中new一个B类的对象进行使用，这样B发生改变可能会影响到A类，为了降低耦合度，可以创建一个获取B对象的工厂类，A类需要B类对象时，只需要从工厂类中获取，这样就不需要关系B类是怎么创建的，降低了耦合度。在工厂类中，需要创建类的对象，可以统一通过从配置文件中获取全类名称和初始化参数，通过反射的方式来创建类，避免硬编码，所有需要通过工厂来创建的类，统一写在配置文件中</p><ul><li><p>获取IOC容器的两种方式</p><ul><li><p>BeanFactory和ApplicationContext</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">        BeanFactory applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line"><span class="comment">//        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(&quot;bean.xml&quot;);</span></span><br><span class="line">        Hello hello = applicationContext.getBean(Hello.class);</span><br><span class="line">        hello.hello();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>BeanFactory是IOC容器的基础实现，一般在spring内部使用，在加载配置文件的时候不会立即创建对象，在获取的bean对象的时候创建</p></li><li><p>ApplicationContext是BeanFactory的子接口，提供了更多的功能，在加载配置文件的时候，会立即创建对象</p></li><li><p>继承关系</p></li></ul><p><img src="/images/Spring-IOC/image-20220909003510084.png" alt="image-20220909003510084"></p></li></ul><p>Bean管理：（1）创建对象，（2）注入属性</p><p>Bean管理的两种方式：（1）基于XML，（2）基于注解</p><h2 id="管理Bean"><a href="#管理Bean" class="headerlink" title="管理Bean"></a>管理Bean</h2><h3 id="基于XML方式"><a href="#基于XML方式" class="headerlink" title="基于XML方式"></a>基于XML方式</h3><p><code>&lt;bean id=&quot;hello&quot; class=&quot;cn.aacopy.learn.spring.Hello&quot;&gt;&lt;/bean&gt;</code></p><ul><li>id：bean的唯一标识</li><li>class：类全路径</li></ul><h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><p>spring创建对象时，默认调用类的无参构造器进行创建</p><h4 id="注入属性"><a href="#注入属性" class="headerlink" title="注入属性"></a>注入属性</h4><p>注入属性有两种方式，（1）通过调用set方法，（2）通过有参构造器</p><ul><li><p>set方式注入</p><ul><li>创建一个User对象，包含name，age两个属性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.spring;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/9/9 22:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在bean的xml配置文件中配置User，通过property配置，spring可以通过name找到对应的属性，并将value的值赋给属性</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.learn.spring.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小七&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    User user = applicationContext.getBean(User.class);</span><br><span class="line">    System.out.println(user); <span class="comment">//User&#123;name=&#x27;小七&#x27;, age=18&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>有参构造器</p><ul><li>在上面的User类中添加全参和无参构造器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, Integer age)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在bean的xml配置文件中通过constructor-arg指定构造器的参数</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.learn.spring.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小七&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="特殊值的注入"><a href="#特殊值的注入" class="headerlink" title="特殊值的注入"></a>特殊值的注入</h4><ul><li><p>在XML的配置中，如果要设置对应的值为null，可以使用<code>&lt;null/&gt;</code>，例如：<code>&lt;constructor-arg name=&quot;name&quot;&gt;&lt;null/&gt;&lt;/constructor-arg&gt;</code></p></li><li><p>如果配置的值有特殊符号，可以通过<code>&lt;![CDATA[]]&gt;</code>包裹</p></li><li><p>如果需要引用其他bean，需要使用ref属性，例如：<code>&lt;property name=&quot;hello&quot; ref=&quot;hello&quot;&gt;&lt;/property&gt;</code></p></li><li><p>注入数组</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;arr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注入list</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注入map</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AA&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">value</span>=<span class="string">&quot;BB&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基于注解的方式"><a href="#基于注解的方式" class="headerlink" title="基于注解的方式"></a>基于注解的方式</h3><h4 id="创建对象-1"><a href="#创建对象-1" class="headerlink" title="创建对象"></a>创建对象</h4><p>添加context命名空间</p><p>在bean.xml中开启注解扫描，base-package配置扫描的路径</p><p><code>&lt;context:component-scan base-package=&quot;cn.aacopy&quot;&gt;&lt;/context:component-scan&gt;</code></p><p>使用：@Component，@Controller，@Service，@Repository等注解标识为spring容器的bean</p><ul><li>只扫描固定的注解下的类</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.aacopy&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>排除注解下的类</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.aacopy&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="属性注入"><a href="#属性注入" class="headerlink" title="属性注入"></a>属性注入</h4><ul><li>@Autowired<ul><li>根据类型进行装配</li><li>如果同一个类型有多个实现类的bean，需要使用@Qualifier指定需要注入的bean名称</li></ul></li><li>@Resource<ul><li>根据名称进行装配 （参数name指定bean的名称）</li><li>也可以根据类型装配</li></ul></li><li>@Value<ul><li>注入普通类型的值</li></ul></li></ul><h4 id="通过注解方式"><a href="#通过注解方式" class="headerlink" title="通过注解方式"></a>通过注解方式</h4><ul><li>编写一个配置类来代替bean.xml配置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;cn.aacopy&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取容器的方式改为注解方式</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> AnnotationConfigApplicationContext(MyConfig.class);</span><br><span class="line">    Hello hello = applicationContext.getBean(Hello.class);</span><br><span class="line">    hello.hello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Bean类型"><a href="#Bean类型" class="headerlink" title="Bean类型"></a>Bean类型</h2><p>bean有两种类型，一种时普通bean，一种是工厂bean</p><ul><li><p>普通bean</p><ul><li>返回的就是创建的bean的类型</li></ul></li><li><p>工厂bean</p><ul><li>需要实现FactoryBean接口，其中getObject就是返回的bean对象，对象类型可以用泛型定义</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFactoryBean</span> <span class="keyword">implements</span> <span class="title">FactoryBean</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> User.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;myFactoryBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.learn.spring.MyFactoryBean&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    User user = applicationContext.getBean(<span class="string">&quot;myFactoryBean&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Bean作用域"><a href="#Bean作用域" class="headerlink" title="Bean作用域"></a>Bean作用域</h2><p>singleton：单例, 默认值，prototype：多例，request，session，global session</p><p>通过scope配置</p><h2 id="Bean生命周期"><a href="#Bean生命周期" class="headerlink" title="Bean生命周期"></a>Bean生命周期</h2><p>生命周期是bean从创建到销毁的过程</p><ul><li>基本过程<ul><li>通过无参构造器创建bean对象</li><li>调用set方法设置属性和其他对象</li><li>调用初始化方法（需要设置初始化方法名）</li><li>使用bean</li><li>容器关闭时，调用销毁方法（需要设置销毁方法名）</li></ul></li></ul><p>在第三步初始化方法的前后，可以执行后置处理器，需要实现BeanPostProcessor接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用构造器创建对象&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;设置属性&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;: Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;初始化方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;销毁方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建后置处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBeanPostProcessor</span> <span class="keyword">implements</span> <span class="title">BeanPostProcessor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;初始化前置方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">postProcessAfterInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;初始化后置方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.tools.mytest.spring.User&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;init&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroy&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;aacopy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.tools.mytest.spring.MyBeanPostProcessor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>执行方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    User user = applicationContext.getBean(User.class);</span><br><span class="line">    user.say();</span><br><span class="line">    <span class="comment">//关闭容器</span></span><br><span class="line">    ((ClassPathXmlApplicationContext) applicationContext).close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行后的结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">调用构造器创建对象</span><br><span class="line">设置属性</span><br><span class="line">初始化前置方法</span><br><span class="line">初始化方法</span><br><span class="line">初始化后置方法</span><br><span class="line">aacopy: Hello World</span><br><span class="line">15:46:51.601 [main] DEBUG org.springframework.context.support.ClassPathXmlApplicationContext - Closing org.springframework.context.support.ClassPathXmlApplicationContext@b684286, started on Mon Sep 12 15:46:51 CST 2022</span><br><span class="line">销毁方法</span><br></pre></td></tr></table></figure><h2 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h2><h3 id="通过XML方式"><a href="#通过XML方式" class="headerlink" title="通过XML方式"></a>通过XML方式</h3><ul><li>在User对象中添加属性private School school;</li><li>添加School的bean</li><li>修改User的配置文件进行自动装配，有两种类型，一种是byType，一种是byName</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.tools.mytest.spring.User&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;aacopy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;school&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.tools.mytest.spring.School&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="引入配置文件数据"><a href="#引入配置文件数据" class="headerlink" title="引入配置文件数据"></a>引入配置文件数据</h2><h3 id="通过XML方式-1"><a href="#通过XML方式-1" class="headerlink" title="通过XML方式"></a>通过XML方式</h3><ul><li>添加配置文件：aacopy.properties，放在classpath下面</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">aacopy.aa</span>=<span class="string">AA</span></span><br><span class="line"><span class="meta">aacopy.bb</span>=<span class="string">123</span></span><br></pre></td></tr></table></figure><ul><li>在User对象里设置name，age两个属性，添加set方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br></pre></td></tr></table></figure><ul><li>配置bean.xml，首先需要用到context命名空间，要在头部引入，导入配置文件，使用${}获取配置文件中的属性</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;aacopy.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:property-placeholder</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cn.aacopy.tools.mytest.spring.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;aacopy.aa&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;aacopy.bb&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity-原理</title>
      <link href="/SpringSecurity/SpringSecurity-%E5%8E%9F%E7%90%86/"/>
      <url>/SpringSecurity/SpringSecurity-%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>SpringSecurity本质上是一个过滤器链，通过各个过滤器做认证和授权操作</p>]]></content>
      
      
      <categories>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity-应用</title>
      <link href="/SpringSecurity/SpringSecurity-%E5%BA%94%E7%94%A8/"/>
      <url>/SpringSecurity/SpringSecurity-%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="自定义账号密码登录"><a href="#自定义账号密码登录" class="headerlink" title="自定义账号密码登录"></a>自定义账号密码登录</h2><p>默认密码由SpringSecurity启动时创建，实际项目使用中，需要从数据库查询用户账号密码</p><ul><li>实现方案<ul><li>通过实现<code>org.springframework.security.core.userdetails.UserDetailsService</code>接口，在<code>loadUserByUsername</code>方法中可以编写从数据库查询用户信息的过程，返回实现<code>org.springframework.security.core.userdetails.UserDetails</code>接口的用户对象</li><li>创建密码编码器PasswordEncoder，用于对密码加密，加入到spring容器</li><li><del>编写配置类，继承WebSecurityConfigurerAdapter，重写configure(AuthenticationManagerBuilder auth)方法，用于认证</del>（当前这种方式新版本已过时）</li></ul></li></ul><h3 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h3><ul><li>实现UserDetailsService接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomUserDetailService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//todo 通过数据库查询username对应的用户对象</span></span><br><span class="line">        <span class="comment">//todo 通过数据库查询username对应的角色信息</span></span><br><span class="line">        <span class="comment">//此处直接返回</span></span><br><span class="line">        List&lt;GrantedAuthority&gt; grantedAuthorities = AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        User user = <span class="keyword">new</span> User(username, passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>), grantedAuthorities);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建密码编码器PasswordEncoder</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomSecurityConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//密码编码器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><del>编写配置类，并注入PasswordEncoder密码编码器</del>（新版本已过时）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomWebSecurityConfigurerAdapter</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试<ul><li>访问受到权限保护的路径<a href="http://127.0.0.1:8080/test/hello">http://127.0.0.1:8080/test/hello</a></li><li>跳到登录页，用户名随便写，密码输入123456，即可登录</li></ul></li></ul><h2 id="自定义登录页面"><a href="#自定义登录页面" class="headerlink" title="自定义登录页面"></a>自定义登录页面</h2><ul><li>继承WebSecurityConfigurerAdapter，重写configure(HttpSecurity http)方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomWebSecurityConfigurerAdapter</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.formLogin()</span><br><span class="line">                .loginPage(<span class="string">&quot;/login.html&quot;</span>) <span class="comment">//登录页</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>) <span class="comment">//登录访问路径</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/test/hello&quot;</span>).permitAll() <span class="comment">//登录成功跳转路径</span></span><br><span class="line">                .and().authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/login&quot;</span>).permitAll() <span class="comment">//设置不需要认证的路径</span></span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().csrf().disable(); <span class="comment">//关闭csrf</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写一个登录页login.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity-入门</title>
      <link href="/SpringSecurity/SpringSecurity-%E5%85%A5%E9%97%A8/"/>
      <url>/SpringSecurity/SpringSecurity-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>Spring Security 是一个功能强大且高度可定制的身份验证和访问控制框架。</p><p>主要包括认证和授权两大核心功能</p><ul><li><p>认证</p><p>认证用户是否为系统允许的合法用户，认证通过的用户才能访问被保护的资源，例如用户通过账号密码方式登录系统，就是一个认证的过程</p></li><li><p>授权</p><p>在系统中不同的用户拥有不同的权限，只有有权限的用户才能去操作对应资源，系统可以分配给用户权限</p></li></ul><h2 id="SpringSecurity和Shiro"><a href="#SpringSecurity和Shiro" class="headerlink" title="SpringSecurity和Shiro"></a>SpringSecurity和Shiro</h2><ul><li><p>SpringSecurity</p><ul><li>Spring家族的一部分，可以和Spring轻松整合</li><li>功能全面</li><li>专门为Web开发设计</li><li>重量级</li></ul></li><li><p>Shiro</p><ul><li>是apache中的一个权限控制框架</li><li>通用框架</li><li>轻量级</li></ul></li></ul><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><ul><li>创建一个springboot web项目</li><li>添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写测试controller</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.springsecuritylearn.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/9/4 23:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello Spring Security&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>启动服务</p></li><li><p>访问地址<a href="http://127.0.0.1:8080/test/hello">http://127.0.0.1:8080/test/hello</a></p><ul><li><p>页面会跳转至<a href="http://127.0.0.1:8080/login">http://127.0.0.1:8080/login</a></p></li><li><p><img src="/images/SpringSecurity-%E5%85%A5%E9%97%A8/image-20220905002110363.png" alt="image-20220905002110363"></p></li><li><p>登录默认用户名为user，密码为服务启动时，控制台打印的随机生成的密码</p></li><li><p><img src="/images/SpringSecurity-%E5%85%A5%E9%97%A8/image-20220905002341958.png" alt="image-20220905002341958"></p></li><li><p>登录成功后，页面跳转至访问地址，页面显示Hello Spring Security。</p></li><li><p><img src="/images/SpringSecurity-%E5%85%A5%E9%97%A8/image-20220905002456223.png" alt="image-20220905002456223"></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringSecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-SQL</title>
      <link href="/ElasticSearch/Elasticsearch-SQL/"/>
      <url>/ElasticSearch/Elasticsearch-SQL/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Logstash-同步sql数据到ES</title>
      <link href="/ElasticSearch/Logstash-%E5%90%8C%E6%AD%A5sql%E6%95%B0%E6%8D%AE%E5%88%B0ES/"/>
      <url>/ElasticSearch/Logstash-%E5%90%8C%E6%AD%A5sql%E6%95%B0%E6%8D%AE%E5%88%B0ES/</url>
      
        <content type="html"><![CDATA[<p>Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。</p><p>官方地址：<a href="https://www.elastic.co/cn/logstash/">https://www.elastic.co/cn/logstash/</a></p><p>Logstash 中自带有从数据库读取数据同步到ES的功能</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装版本：7.16.2</p><ul><li><p>创建挂载的目录和配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/dockerData/logstash/config/logstash.yml</span><br><span class="line">/dockerData/logstash/config/pipelines.yml</span><br><span class="line">/dockerData/logstash/conf</span><br></pre></td></tr></table></figure><ul><li>conf用来存放pipeline配置运行的文件</li></ul></li><li><p>在conf文件夹下添加同步mysql的配置文件<code>test1.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    stdin &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    jdbc &#123;</span><br><span class="line">      jdbc_connection_string =&gt; &quot;jdbc:mysql://192.168.80.128:3306/my_test?characterEncoding=UTF-8&amp;nullCatalogMeansCurrent=true&quot;</span><br><span class="line">      jdbc_driver_class =&gt; &quot;com.mysql.cj.jdbc.Driver&quot;</span><br><span class="line">      jdbc_user =&gt; &quot;root&quot;</span><br><span class="line">      jdbc_password =&gt; &quot;aacopy.cn&quot;</span><br><span class="line">      jdbc_paging_enabled =&gt; &quot;true&quot;</span><br><span class="line">      jdbc_page_size =&gt; &quot;50000&quot;</span><br><span class="line">      jdbc_default_timezone =&gt; &quot;Asia/Shanghai&quot;</span><br><span class="line">      jdbc_driver_library =&gt; &quot;/usr/share/logstash/conf/mysql-connector-java-8.0.26.jar&quot; #数据库连接包</span><br><span class="line">       statement =&gt; &quot;SELECT * FROM table_name&quot;</span><br><span class="line">      schedule =&gt; &quot;*/5 * * * *&quot; #cron表达式,多久搬运一次数据</span><br><span class="line">      lowercase_column_names =&gt; false # 保留sql字段的大写</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  date &#123;</span><br><span class="line"> match =&gt; [&quot;time_stamp&quot;,&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;] #将表数据中time_stamp字段的数据映射到@time_stamp中</span><br><span class="line">target =&gt; &quot;@time_stamp&quot; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; [&quot;http://192.168.80.128:9200&quot;] #对应的elasticsearch的地址</span><br><span class="line">        index =&gt; &quot;test_user&quot; #数据搬运到access_log这个索引中</span><br><span class="line">        document_id =&gt; &quot;%&#123;id&#125;&quot; #映射上面数据库查出来的表id</span><br><span class="line">    &#125;</span><br><span class="line">    stdout &#123;</span><br><span class="line">        codec =&gt; json_lines #美化output输出</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>把mysql的数据库驱动包<code>mysql-connector-java-8.0.26.jar</code>放在conf目录下</p></li><li><p>在pipelines.yml文件中添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">pipeline.id:</span> <span class="string">test1</span></span><br><span class="line">  <span class="attr">pipeline.workers:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">path.config:</span> <span class="string">/usr/share/logstash/conf/test1.conf</span></span><br></pre></td></tr></table></figure></li><li><p>docker启动logstash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name logstash \</span><br><span class="line">  -v /dockerData/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml \</span><br><span class="line">  -v /dockerData/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml \</span><br><span class="line">  -v /dockerData/logstash/conf:/usr/share/logstash/conf \</span><br><span class="line">  logstash:7.16.2</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kibana-安装</title>
      <link href="/ElasticSearch/Kibana-%E5%AE%89%E8%A3%85/"/>
      <url>/ElasticSearch/Kibana-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>Kibana 是一个免费且开放的用户界面，能够对 Elasticsearch 数据进行可视化</p><p>github:<a href="https://github.com/elastic/kibana">https://github.com/elastic/kibana</a></p><h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><ul><li><p>创建文件<code>/dockerData/kibana/config/kibana.yml</code></p></li><li><p>在文件中加上配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span> </span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [<span class="string">&quot;http://192.168.80.128:9200&quot;</span>]</span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure></li><li><p>docker启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name kibana -p 5601:5601 \</span><br><span class="line">  -v /dockerData/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml \</span><br><span class="line">  kibana:7.16.2</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分库分表思想</title>
      <link href="/Shardingsphere/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%80%9D%E6%83%B3/"/>
      <url>/Shardingsphere/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%80%9D%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库架构演变史"><a href="#数据库架构演变史" class="headerlink" title="数据库架构演变史"></a>数据库架构演变史</h2><ul><li><p>单机</p><ul><li><p>高并发下查询慢</p></li><li><p>单机故障</p></li></ul></li><li><p>主从</p><ul><li>主从同步数据</li><li>主节点写，从节点读</li><li>从库可水平扩展，满足更大并发的读需求</li><li>主库单节点压力</li></ul></li><li><p>多主多从</p><ul><li>多节点数据保持一致性，多主之间同步比较复杂</li></ul></li><li><p>分库分表</p><ul><li>对业务库进行水平或垂直拆分多库多表</li></ul></li></ul><h2 id="数据库性能优化思路"><a href="#数据库性能优化思路" class="headerlink" title="数据库性能优化思路"></a>数据库性能优化思路</h2><ul><li>软优化<ul><li>数据库参数调优</li><li>慢sql分析，执行计划分析，优化sql语句</li><li>优化索引结构</li><li>优化表结构</li><li>引入缓存，ES等中间件</li></ul></li><li>硬件优化<ul><li>提高系统硬件性能，加带宽，加CPU，加内存</li></ul></li><li>分库分表<ul><li>根据业务情况，选择合适的分库分表策略</li><li>优先选择分表看是否满足业务需求和未来的增长，分表可以解决单表数据量大，查询慢的问题，但是无法解决高并发下的IO瓶颈</li></ul></li></ul><h2 id="分库分表的优点"><a href="#分库分表的优点" class="headerlink" title="分库分表的优点"></a>分库分表的优点</h2><ul><li>解决数据库本身瓶颈<ul><li>连接数过多问题，访问量过大，或者连接数设置比较小（默认100，最大可设置16384）都会出现“too many connections”错误</li><li>分表可以解决单表数据量过大，查询慢的问题</li><li>分库可以解决单库访问压力过大的问题</li></ul></li><li>解决系统IO和CPU瓶颈<ul><li>磁盘读写IO瓶颈</li><li>网络IO瓶颈</li><li>CPU瓶颈，复杂的SQL计算，SQL执行占用CPU过高，扫描行过多，锁冲突，锁等待等原因<ul><li>可以通过show processlist，show full processlist，发现CPU占用高的SQL，State列值是Sending data，Copy to tmp table，Copy to tmp table on disk，Sort result，Using filesort，等都可能是有性能问题的SQL</li><li>通过执行计划分析</li></ul></li></ul></li></ul><h2 id="分库分表带来的问题"><a href="#分库分表带来的问题" class="headerlink" title="分库分表带来的问题"></a>分库分表带来的问题</h2><ul><li>跨节点Join关联查询</li><li>跨库带来的分布式事务问题</li><li>执行的SQL排序、分页、函数计算问题</li><li>全局主键重复问题</li><li>二次扩容问题</li><li>技术选型问题</li></ul><h2 id="垂直分表"><a href="#垂直分表" class="headerlink" title="垂直分表"></a>垂直分表</h2><ul><li>基于列字段大表拆小表</li><li>不常用的字段单独放在一张表</li><li>text大字段拆分出来放在附表中</li><li>经常组合查询的放在一张表</li></ul><h2 id="垂直分库"><a href="#垂直分库" class="headerlink" title="垂直分库"></a>垂直分库</h2><p>数据库的CPU长期处于90%+的利用率，数据库连接不够时，需要分库优化</p><ul><li>对系统中的不同业务进行拆分，连接到不同的数据库</li><li>垂直分库避免了不同业务竞争同一个数据库资源，在高并发场景下可以突破IO，连接数，硬件资源的瓶颈</li><li>降低了业务层面的耦合，方便维护</li><li>微服务项目就是垂直分库的体现</li></ul><p>垂直分库分表可以提高并发能力，但是无法解决单表数据量大查询效率问题</p><h2 id="水平分表"><a href="#水平分表" class="headerlink" title="水平分表"></a>水平分表</h2><p>当单表数据达到几千万时，查询慢，可以用水平分表解决</p><p>基于数据大表拆小标</p><ul><li>垂直分表：基于表结构拆分</li><li>水平分表：基于表数据拆分</li><li>把一个数据量大的表，拆分成多个小表，每个表的表结构相同，数据不同，全部表数据之和就是全部数据</li><li>才成多表后，每个表的数据量减少，查询效率变高</li><li>减少了锁表时间，当添加一列的时候mysql会锁表，期间所有读写操作只能等待</li><li>但是所有表都在同一个库，无法解决单库资源的瓶颈</li></ul><h2 id="水平分库"><a href="#水平分库" class="headerlink" title="水平分库"></a>水平分库</h2><p>单数据库的资源是有限的，水平分库可以解决</p><ul><li>把表中的数据按照一定规则分散到不同的数据库中</li><li>表结构相同，数据库不同</li><li>水平分库比水平分表粒度更大</li></ul><h2 id="水平分库分表策略"><a href="#水平分库分表策略" class="headerlink" title="水平分库分表策略"></a>水平分库分表策略</h2><h3 id="range范围"><a href="#range范围" class="headerlink" title="range范围"></a>range范围</h3><ul><li><p>自增id</p><ul><li>通过自增id，根据id范围进行分表，例如id 0~1百万为一个表，1百万到2百万为一个表</li><li>优点：id是自增的，可以无限增长，扩容不用迁移数据，易于维护</li><li>缺点：数据读写集中在新的数据中，数据倾斜严重，利用率不均衡</li></ul></li><li><p>时间范围</p><ul><li>按照年月日进行分表</li></ul></li><li><p>空间范围</p><ul><li>地理位置，省份，区域等</li></ul></li></ul><h3 id="Hash取模"><a href="#Hash取模" class="headerlink" title="Hash取模"></a>Hash取模</h3><p>通过Hash转成整数，再取模</p><p>例如，2个库，每个库4个表</p><ul><li>库id = userId % 库数量</li><li>表id = userId % 库数量 % 表数量</li></ul><p>优点：保证数据均匀分布到各个库表中，避免热点数据问题</p><p>缺点：扩容不方便，需要数据迁移</p>]]></content>
      
      
      <categories>
          
          <category> Shardingsphere </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shardingsphere </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Netty-NIO</title>
      <link href="/Netty/Netty-NIO/"/>
      <url>/Netty/Netty-NIO/</url>
      
        <content type="html"><![CDATA[<p>Java支持三种网络IO模型：BIO，NIO，AIO</p><h2 id="BIO"><a href="#BIO" class="headerlink" title="BIO"></a>BIO</h2><ul><li><p>同步阻塞</p></li><li><p>一个连接一个线程</p><p><img src="/images/Netty-NIO/BIO.png" alt="BIO"></p></li><li><p>场景：适用于连接数量比较小且固定的架构，JDK1.4以前只有BIO</p></li><li><p>编程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">       ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">9999</span>);</span><br><span class="line">       <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">           Socket socket = serverSocket.accept();</span><br><span class="line">           System.out.println(<span class="string">&quot;客户端已连接...&quot;</span>);</span><br><span class="line">           executorService.execute(() -&gt; &#123;</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   InputStream inputStream = socket.getInputStream();</span><br><span class="line">                   <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                   <span class="keyword">int</span> length;</span><br><span class="line">                   <span class="keyword">while</span> ((length = inputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                       System.out.println(<span class="string">&quot;当前线程：&quot;</span> + Thread.currentThread().getName() </span><br><span class="line">                               + <span class="string">&quot;, 收到消息：&quot;</span> + <span class="keyword">new</span> String(bytes, <span class="number">0</span>, length));</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">               &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       socket.close();</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>测试：<ul><li>启动main方法，</li><li>打开cmd窗口，输入<code>telnet 127.0.0.1 9999</code></li><li>按ctrl + ]</li><li>发送消息 <code>send hello</code></li><li>启动多个cmd发送消息，查看服务端的日志可以发现，每连接一个客户端，都需要启动一个线程，并且线程是阻塞状态</li></ul></li></ul></li></ul><h2 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h2><ul><li><p>同步非阻塞</p></li><li><p>一个线程处理多个连接，客户端发送的连接请求会注册到多路复用器上，多路复用器轮询到连接有IO请求就进行处理</p><p><img src="/images/Netty-NIO/NIO.png" alt="NIO"></p></li><li><p>场景：适用于连接数量多，且连接比较短的架构，比如聊天室，弹幕，服务器间通讯，从JDK1.4支持</p></li></ul><h3 id="三大核心"><a href="#三大核心" class="headerlink" title="三大核心"></a>三大核心</h3><p>NIO三大核心部分：Channel（通道），Buffer（缓冲区），Selector（选择器）</p><h2 id="AIO"><a href="#AIO" class="headerlink" title="AIO"></a>AIO</h2><ul><li>异步非阻塞</li><li>采用Proactor模式，先由操作系统完成后才通知服务端程序启动线程处理</li><li>场景：适用于连接数量多，且连接比较长的架构，比如相册服务器，从JDK1.7支持</li></ul><h2 id="NIO和BIO的区别"><a href="#NIO和BIO的区别" class="headerlink" title="NIO和BIO的区别"></a>NIO和BIO的区别</h2><ul><li>BIO以流的方式处理数据，NIO以块的方式处理</li><li>BIO时阻塞的，NIO是非阻塞的</li><li>BIO基于字节和字符流进行操作，而NIO基于Channel和Buffer进行操作，数据总是从Channel读取到Buffer，或者从Buffer写入Channel中，Selector用于监听多个Channel事件（连接请求，可读，可写），因此使用单线程可以监听多个通道</li></ul><h2 id="三大核心Selector，Channel，Buffer"><a href="#三大核心Selector，Channel，Buffer" class="headerlink" title="三大核心Selector，Channel，Buffer"></a>三大核心Selector，Channel，Buffer</h2><p>​    <img src="/images/Netty-NIO/202206270748.png" alt="202206270748"></p><ul><li>每个Channel都会对应一个buffer</li><li>一个Selector对应一个线程，一个线程对应多个Channel（连接）</li><li>如上图，有三个连接注册到Selector上</li><li>程序切换到哪个Channel是由事件决定的</li><li>Selector会根据不同的事件，在各个通道上切换</li><li>Buffer就是一个内存块，底层是一个数组</li><li>数据的读写都是通过Buffer，BIO要么是输入流要么是输出流是单向的，NIO的Buffer是可读可写的，通过flip切换，是双向的。</li></ul><h2 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h2><p>NIO是面向缓冲区编程的，数据会读取到一个缓存区中，需要时可以在缓冲区向前或向后移动，提供了非阻塞式的网络</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建可存放5个int数据的IntBuffer</span></span><br><span class="line">IntBuffer intBuffer = IntBuffer.allocate(<span class="number">5</span>);</span><br><span class="line"><span class="comment">//在buffer中存数据</span></span><br><span class="line">intBuffer.put(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>, <span class="number">115</span>, <span class="number">22</span>, <span class="number">7</span>, <span class="number">1</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取数据</span></span><br><span class="line"><span class="comment">//读写模式转换</span></span><br><span class="line">intBuffer.flip();</span><br><span class="line"><span class="comment">//是否还有数据</span></span><br><span class="line"><span class="keyword">while</span> (intBuffer.hasRemaining()) &#123;</span><br><span class="line">    <span class="comment">//读取数据</span></span><br><span class="line">    System.out.println(intBuffer.get());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Buffer是一个顶层父类，有7个直接子类，IntBuffer，FloatBuffer，CharBuffer，DoubleBuffer，ShortBuffer，LongBuffer，ByteBuffer，都是通过对应的一个数组来存储数据，ByteBuffer最常用。</p></li><li><p>通过四个参数来控制数组的数据和位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Invariants: mark &lt;= position &lt;= limit &lt;= capacity</span></span><br><span class="line"><span class="comment">//标记</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mark = -<span class="number">1</span>;</span><br><span class="line"><span class="comment">//位置，下一个要被读或写的元素的索引，每次读写缓冲区的数据都会改变该值，为下次读写做准备</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> position = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//缓存区的终点，不能对超过limit的位置进行读写，该限制可以修改</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> limit;</span><br><span class="line"><span class="comment">//容量，即可以容量的最大数据量，在缓冲区被创建时设置，不能改变</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Channel"><a href="#Channel" class="headerlink" title="Channel"></a>Channel</h2><ul><li>BIO中的stream是单向的，例如FileInputStream对象只能进行读取数据，NIO中的Channel是双向的，可读可写</li><li>常用的Channel类：ServerSocketChannel（TCP），SocketChannel（TCP），DatagramChannel（UDP），FileChannel（文件）</li></ul><h3 id="FileChannel"><a href="#FileChannel" class="headerlink" title="FileChannel"></a>FileChannel</h3><ul><li>FileChannel用于文件数据读写<ul><li>read方法，从通道读取数据到缓冲区</li><li>write方法，从缓冲区写数据到通道</li><li>transferFrom，目标通道复制数据到当前通道</li><li>transferTo，当前通道数据复制到目标通道</li></ul></li><li>将字符串写入到文件示例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToFile</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;D:/hello.txt&quot;</span>);</span><br><span class="line">       <span class="comment">//从输出流获取FileChannel</span></span><br><span class="line">       FileChannel fileChannel = fileOutputStream.getChannel();</span><br><span class="line">       <span class="comment">//创建缓冲区</span></span><br><span class="line">       ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">       <span class="comment">//将字符串放入缓冲区</span></span><br><span class="line">       byteBuffer.put(<span class="string">&quot;Hello World&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">       <span class="comment">//切换读写模式</span></span><br><span class="line">       byteBuffer.flip();</span><br><span class="line">       <span class="comment">//把缓冲区数据写入Channel</span></span><br><span class="line">       fileChannel.write(byteBuffer);</span><br><span class="line">       <span class="comment">//关闭流</span></span><br><span class="line">       fileOutputStream.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>从文件读取数据打印</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFile</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//创建输入流</span></span><br><span class="line">    FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;D:/hello.txt&quot;</span>);</span><br><span class="line">    <span class="comment">//从输入流获取Channel</span></span><br><span class="line">    FileChannel fileChannel = fileInputStream.getChannel();</span><br><span class="line">    <span class="comment">//创建缓冲区</span></span><br><span class="line">    ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">    <span class="comment">//将Channel中的数据读到缓冲区</span></span><br><span class="line">    <span class="keyword">int</span> length = fileChannel.read(byteBuffer);</span><br><span class="line">    <span class="comment">//打印缓冲区数据</span></span><br><span class="line">    System.out.println(<span class="keyword">new</span> String(byteBuffer.array(), <span class="number">0</span>, length));</span><br><span class="line">    fileInputStream.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Selector"><a href="#Selector" class="headerlink" title="Selector"></a>Selector</h2><p>Selector可以检测多个注册的通道上是否有事件发生，只有在通道真正有事件发生时，才会进行读写，只需要一个线程来维护多个通道，减少了系统开销</p><p>相关方法</p><ul><li>select()  //阻塞</li><li>select(1000)  //阻塞1000ms</li><li>wakeup()  //唤醒selector</li><li>selectNow()  //不阻塞，立马返回</li></ul><p>注册方式</p><ul><li>创建ServerSocketChannel，并绑定端口，然后注册到Selector上，监听accept事件</li><li>当有新连接时，从Selector上获取accept事件的key，通过key获取SocketChannel</li><li>将SocketChannel注册到Selector上，监听read事件</li><li>当通道可读时，从Selector获取可读通道，并读取通道中的数据</li></ul><p>编写一个简单，ServerSocketChannel服务端，和SocketChannel客户端，进行客户端与客户端的实时通讯</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.tools.mytest.nio;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/7/8 10:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NioTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nioServer</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();</span><br><span class="line">        serverSocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line">        serverSocketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line">        serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;+++++++++++++++++++++++&quot;</span> + selector.keys().size());</span><br><span class="line">            <span class="keyword">if</span> (selector.select(<span class="number">1000</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">                System.out.println(<span class="string">&quot;===============&gt;&quot;</span> + selectionKeys.size());</span><br><span class="line">                Iterator&lt;SelectionKey&gt; iterator = selectionKeys.iterator();</span><br><span class="line">                <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">                    SelectionKey selectionKey = iterator.next();</span><br><span class="line">                    System.out.println(selectionKey);</span><br><span class="line">                    <span class="keyword">if</span>(selectionKey.isAcceptable()) &#123;</span><br><span class="line">                        SocketChannel accept = serverSocketChannel.accept();</span><br><span class="line">                        accept.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">                        accept.register(selector, SelectionKey.OP_READ);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(selectionKey.isReadable()) &#123;</span><br><span class="line">                        SocketChannel channel = (SocketChannel) selectionKey.channel();</span><br><span class="line">                        ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                        <span class="keyword">int</span> length = channel.read(byteBuffer);</span><br><span class="line">                        <span class="keyword">if</span>(length &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">                            System.out.println(<span class="keyword">new</span> String(byteBuffer.array(), <span class="number">0</span>, length, StandardCharsets.UTF_8));</span><br><span class="line">                            <span class="comment">//消息转发</span></span><br><span class="line">                            Set&lt;SelectionKey&gt; keys = selector.keys();</span><br><span class="line">                            Iterator&lt;SelectionKey&gt; channelKeys = keys.iterator();</span><br><span class="line">                            <span class="keyword">while</span> (channelKeys.hasNext()) &#123;</span><br><span class="line">                                SelectionKey eachKey = channelKeys.next();</span><br><span class="line">                                <span class="keyword">if</span>(eachKey != selectionKey) &#123;</span><br><span class="line">                                    SelectableChannel selectableChannel = eachKey.channel();</span><br><span class="line">                                    <span class="keyword">if</span>(selectableChannel <span class="keyword">instanceof</span> SocketChannel) &#123;</span><br><span class="line">                                        SocketChannel socketChannel = (SocketChannel) eachKey.channel();</span><br><span class="line">                                        byteBuffer.flip();</span><br><span class="line">                                        socketChannel.write(byteBuffer);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    iterator.remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; nioClient()).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; nioClient()).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; nioClient()).start();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">nioClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SocketChannel socketChannel = SocketChannel.open(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>));</span><br><span class="line">            socketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">200</span>);</span><br><span class="line">                        ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                        <span class="keyword">int</span> length = socketChannel.read(byteBuffer);</span><br><span class="line">                        <span class="keyword">if</span> (length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            System.err.println(Thread.currentThread().getName() + <span class="string">&quot;接收到消息：&quot;</span> + <span class="keyword">new</span> String(byteBuffer.array(), <span class="number">0</span>, length, StandardCharsets.UTF_8));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line"></span><br><span class="line">            ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">            Random random = <span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                Thread.sleep(<span class="number">8000</span>);</span><br><span class="line">                String msg = <span class="string">&quot;你好：&quot;</span> + random.nextInt(<span class="number">100</span>);</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;发送消息：&quot;</span> + msg);</span><br><span class="line">                byteBuffer.put(msg.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                byteBuffer.flip();</span><br><span class="line">                socketChannel.write(byteBuffer);</span><br><span class="line">                byteBuffer.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>SelectionKey   channel关心的事件</li><li>ServerSocketChannel    服务端监听新的客户端连接</li><li>SocketChannel    网络IO通道，负责具体的读写操作</li></ul><h2 id="零拷贝"><a href="#零拷贝" class="headerlink" title="零拷贝"></a>零拷贝</h2><p>是针对CPU而言的，不是没有copy，而是没有CPU拷贝</p><h3 id="传统IO"><a href="#传统IO" class="headerlink" title="传统IO"></a>传统IO</h3><p>4次拷贝，3次状态切换</p><p>磁盘拷贝到内核态（kernel buffer）,再由内核态拷贝到用户态，再由用户态拷贝到内核态（socket buffer），再拷贝到协议栈</p><p><img src="/images/Netty-NIO/202207101116.png" alt="202207101116"></p><h3 id="mmap优化"><a href="#mmap优化" class="headerlink" title="mmap优化"></a>mmap优化</h3><ul><li><p>mmap通过内存映射，将文件映射到内核缓冲区，同时，用户空间可以共享内核空间的数据，这样在进行网络传输时，可以减少内核空间到用户空间到拷贝次数</p></li><li><p>需要4次数上下文切换，3次数据拷贝</p></li><li><p>适合小数据量传输</p></li><li><p><img src="/images/Netty-NIO/202207101507.png" alt="202207101507"></p></li></ul><h3 id="sendFile"><a href="#sendFile" class="headerlink" title="sendFile"></a>sendFile</h3><ul><li>在linux2.4版本以后，数据不经过用户态，直接从kernel buffer拷贝到协议栈</li><li>3次上下文切换，2次数据拷贝</li><li>没有CPU拷贝</li><li>适合大文件传输</li></ul><p><img src="/images/Netty-NIO/202207101501.png" alt="202207101501"></p>]]></content>
      
      
      <categories>
          
          <category> Netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXL-Job-入门</title>
      <link href="/XXL-Job/XXL-Job-%E5%85%A5%E9%97%A8/"/>
      <url>/XXL-Job/XXL-Job-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>XXL-Job是一个分布式任务调度平台</p><p>官方网站：<a href="https://www.xuxueli.com/xxl-job/">https://www.xuxueli.com/xxl-job/</a></p><h2 id="设计思想"><a href="#设计思想" class="headerlink" title="设计思想"></a>设计思想</h2><ul><li>将调度行为抽象形成“调度中心”公共平台，而平台自身并不承担业务逻辑，“调度中心”负责发起调度请求。</li><li>将任务抽象成分散的JobHandler，交由“执行器”统一管理</li><li>“执行器”负责接收调度请求并执行对应的JobHandler中业务逻辑。</li><li>“调度”和“任务”两部分可以相互解耦，提高系统整体稳定性和扩展性</li></ul><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p>版本2.3.0：<a href="https://github.com/xuxueli/xxl-job/tree/2.3.0">https://github.com/xuxueli/xxl-job/tree/2.3.0</a></p><ul><li>目录介绍<ul><li>doc：xxl-job的文档资料，包括了数据库的脚本</li><li>xxl-job-core：公共jar包依赖</li><li>xxl-job-admin：调度中心</li><li>xxl-job-executor-samples：执行器</li></ul></li><li>数据库表<ul><li>xxl_job_group：执行器信息表，用于维护任务执行器的信息</li><li>xxl_job_info：调度扩展信息表，主要是用于保存xxl-job的调度任务的扩展信息，比如说像任务分组、任务名、机器的地址等等</li><li>xxl_job_lock：任务调度锁表</li><li>xxl_job_log：日志表，主要是用在保存xxl-job任务调度历史信息，像调度结果、执行结果、调度入参等等</li><li>xxl_job_log_report：日志报表，会存储xxl-job任务调度的日志报表，会在调度中心里的报表功能里使用到</li><li>xxl_job_logglue：任务的GLUE日志，用于保存GLUE日志的更新历史变化，支持GLUE版本的回溯功能</li><li>xxl_job_registry：执行器的注册表，用在维护在线的执行器与调度中心的地址信息</li><li>xxl_job_user：系统的用户表</li></ul></li></ul><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><ul><li><p>在源码中找到doc/db/table_xxl_job.sql文件,在数据库执行脚本</p></li><li><p>修改xxl-job-admin的配置文件application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://192.168.80.128:3306/xxl_job?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">aacopy.cn</span></span><br><span class="line"></span><br><span class="line"><span class="meta">xxl.job.accessToken</span>=<span class="string">aacopy.cn</span></span><br></pre></td></tr></table></figure></li><li><p>启动XxlJobAdminApplication</p></li><li><p>访问<a href="http://127.0.0.1:8080/xxl-job-admin">http://127.0.0.1:8080/xxl-job-admin</a></p></li><li><p>默认账号密码：admin/123456</p></li></ul><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ul><li><p>创建一个springboot项目</p></li><li><p>引入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># web port</span></span><br><span class="line"><span class="meta">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment">#----------xxl-job配置--------------</span></span><br><span class="line"><span class="meta">logging.config</span>=<span class="string">classpath:logback.xml</span></span><br><span class="line"><span class="comment">#调度中心部署地址,多个配置逗号分隔 &quot;http://address01,http://address02&quot;</span></span><br><span class="line"><span class="meta">xxl.job.admin.addresses</span>=<span class="string">http://127.0.0.1:8080/xxl-job-admin</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#执行器token，非空时启用 xxl-job, access token,和服务端要保持一致</span></span><br><span class="line"><span class="meta">xxl.job.accessToken</span>=<span class="string">aacopy.cn</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 执行器app名称,和控制台那边配置一样的名称，不然注册不上去</span></span><br><span class="line"><span class="meta">xxl.job.executor.appname</span>=<span class="string">xxxl-job-learn</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># [选填]执行器注册：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。</span></span><br><span class="line"><span class="comment">#从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。</span></span><br><span class="line"><span class="meta">xxl.job.executor.address</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#[选填]执行器IP ：默认为空表示自动获取IP（即springboot容器的ip和端口，可以自动获取，也可以指定），多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 &quot;执行器注册&quot; 和 &quot;调度中心请求并触发任务&quot;，</span></span><br><span class="line"><span class="meta">xxl.job.executor.ip</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># [选填]执行器端口号：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；</span></span><br><span class="line"><span class="meta">xxl.job.executor.port</span>=<span class="string">9999</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#执行器日志文件存储路径，需要对该路径拥有读写权限；为空则使用默认路径</span></span><br><span class="line"><span class="meta">xxl.job.executor.logpath</span>=<span class="string">/data/applogs/xxl-job/jobhandler</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#执行器日志保存天数</span></span><br><span class="line"><span class="meta">xxl.job.executor.logretentiondays</span>=<span class="string">30</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>创建logback.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;false&quot;</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot;1 seconds&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>logback<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;log.path&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/data/applogs/xxl-job/xxl-job-learn.log&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; %contextName [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>$&#123;log.path&#125;<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;log.path&#125;.%d&#123;yyyy-MM-dd&#125;.zip<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%date %level [%thread] %logger&#123;36&#125; [%file : %line] %msg%n</span><br><span class="line">            <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建config配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XxlJobConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(XxlJobConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.admin.addresses&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String adminAddresses;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.accessToken&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.appname&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appname;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.address&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.ip&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String ip;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.logpath&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String logPath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;xxl.job.executor.logretentiondays&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> logRetentionDays;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XxlJobSpringExecutor <span class="title">xxlJobExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job config init.&quot;</span>);</span><br><span class="line">        XxlJobSpringExecutor xxlJobSpringExecutor = <span class="keyword">new</span> XxlJobSpringExecutor();</span><br><span class="line">        xxlJobSpringExecutor.setAdminAddresses(adminAddresses);</span><br><span class="line">        xxlJobSpringExecutor.setAppname(appname);</span><br><span class="line">        xxlJobSpringExecutor.setAddress(address);</span><br><span class="line">        xxlJobSpringExecutor.setIp(ip);</span><br><span class="line">        xxlJobSpringExecutor.setPort(port);</span><br><span class="line">        xxlJobSpringExecutor.setAccessToken(accessToken);</span><br><span class="line">        xxlJobSpringExecutor.setLogPath(logPath);</span><br><span class="line">        xxlJobSpringExecutor.setLogRetentionDays(logRetentionDays);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> xxlJobSpringExecutor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 针对多网卡、容器内部署等情况，可借助 &quot;spring-cloud-commons&quot; 提供的 &quot;InetUtils&quot; 组件灵活定制注册IP；</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *      1、引入依赖：</span></span><br><span class="line"><span class="comment">     *          &lt;dependency&gt;</span></span><br><span class="line"><span class="comment">     *             &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">     *             &lt;artifactId&gt;spring-cloud-commons&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">     *             &lt;version&gt;$&#123;version&#125;&lt;/version&gt;</span></span><br><span class="line"><span class="comment">     *         &lt;/dependency&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *      2、配置文件，或者容器启动变量</span></span><br><span class="line"><span class="comment">     *          spring.cloud.inetutils.preferred-networks: &#x27;xxx.xxx.xxx.&#x27;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *      3、获取IP</span></span><br><span class="line"><span class="comment">     *          String ip_ = inetUtils.findFirstNonLoopbackHostInfo().getIpAddress();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写jobhandler任务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleXxlJob</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XxlJob(&quot;demoJobHandler1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;==============&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建执行器</p><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614224616957.png" alt="image-20220614224616957"></p></li><li><p>新建任务</p><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614224644561.png" alt="image-20220614224644561"></p></li><li><p>启动任务</p></li></ul><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614224655573.png" alt="image-20220614224655573"></p><ul><li>查看日志</li></ul><h2 id="执行器管理"><a href="#执行器管理" class="headerlink" title="执行器管理"></a>执行器管理</h2><ul><li>Appname：是每一个执行器的唯一表示AppName，执行器会以周期性为appname进行注册，为任务调度的时候使用</li><li>名称：执行器的名称，因为appname有限制字母与数字等等组成，可读性不强，这个名称就是为了提高执行器的可读性</li><li>注册方式：调度中心获取执行器地址的方式<ul><li>自动注册：执行器自动进行执行器的注册，通过底层的注册表可以动态的发现执行器机器的地址</li><li>手动录入：人工手动录入执行器的地址信息，多地址使用逗号进行分割，供调度中心使用</li></ul></li><li>机器地址：“注册方式”为手动录入的时候才能使用，支持人工维护执行器的地址</li><li>点击保存后可能要等30S左右才回显示机器的地址</li></ul><h2 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h2><ul><li>示例执行器：所用到的执行器</li><li>任务描述：概述该任务是做什么的</li><li>路由策略：<ul><li>第一个：选择第一个机器</li><li>最后一个：选择最后一个机器</li><li>轮询：依次选择执行</li><li>随机：随机选择在线的机器</li><li>一致性HASH：每个任务按照Hash算法固定选择某一台机器，并且所有的任务均匀散列在不同的机器上</li><li>最不经常使用：使用频率最低的机器优先被使用</li><li>最近最久未使用：最久未使用的机器优先被选举</li><li>故障转移：按照顺序依次进行心跳检测，第一个心跳检测成功的机器选定为目标的执行器并且会发起任务调度</li><li>忙碌转移：按照顺序来依次进行空闲检测，第一个空闲检测成功的机器会被选定为目标群机器，并且会发起任务调度</li><li>分片广播：广播触发对于集群中的所有机器执行任务，同时会系统会自动传递分片的参数</li></ul></li><li>Cron：执行规则</li><li>调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等</li><li>JobHandler：定义执行器的名字</li><li>阻塞处理策略：<ul><li>单机串行：新的调度任务在进入到执行器之后，该调度任务进入FIFO队列，并以串行的方式去进行</li><li>丢弃后续调度：新的调度任务在进入到执行器之后，如果存在相同的且正在运行的调度任务，本次的调度任务请求就会被丢弃掉，并且标记为失败</li><li>覆盖之前的调度：新的调度任务在进入到执行器之后，如果存在相同的且正在运行的调度任务，就会终止掉当前正在运行的调度任务，并且清空队列，运行新的调度任务。</li></ul></li><li>子任务ID：输入子任务的任务id，可填写多个</li><li>任务超时时间：添加任务超时的时候，单位s，设置时间大于0的时候就会生效</li><li>失败重试次数：设置失败重试的次数，设置时间大于0的时候就会生效</li><li>负责人：填写该任务调度的负责人</li><li>报警邮件：出现报警，则发送邮件</li></ul><h2 id="参数传递和日志及执行结果"><a href="#参数传递和日志及执行结果" class="headerlink" title="参数传递和日志及执行结果"></a>参数传递和日志及执行结果</h2><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614225711654.png" alt="image-20220614225711654"></p><ul><li><p>通过api方法获取参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleXxlJob</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XxlJob(&quot;demoJobHandler1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取参数</span></span><br><span class="line">        String jobParam = XxlJobHelper.getJobParam();</span><br><span class="line">        log.info(<span class="string">&quot;获取到参数：&#123;&#125;&quot;</span>, jobParam);</span><br><span class="line">        <span class="comment">//打印日志</span></span><br><span class="line">        XxlJobHelper.log(<span class="string">&quot;hello xxl-job&quot;</span>);</span><br><span class="line">        <span class="comment">//执行结果成功</span></span><br><span class="line"><span class="comment">//        XxlJobHelper.handleSuccess(&quot;执行成功！！！&quot;);</span></span><br><span class="line">        <span class="comment">//执行失败</span></span><br><span class="line">        XxlJobHelper.handleFail(<span class="string">&quot;任务执行失败！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行结果</p><ul><li>可以查看执行日志和结果日志</li></ul><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614230507949.png" alt="image-20220614230507949"></p></li></ul><h2 id="分片任务"><a href="#分片任务" class="headerlink" title="分片任务"></a>分片任务</h2><ul><li>执行器集群部署，如果任务的路由策略选择【分片广播】，一次任务调度将会【广播触发】对应集群中所有执行器执行一次任务，同时系统自动传递分片参数，执行器可根据分片参数开发分片任务</li><li>需要处理的海量数据，以执行器为划分，每个执行器分配一定的任务数，并行执行</li><li>XXL-Job支持动态扩容执行器集群，从而动态增加分片数量，到达更快处理任务</li><li>分片的值是调度中心分配的</li></ul><ul><li><p>编写代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@XxlJob(&quot;shardingJobHandler&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shardingJobHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">       <span class="comment">// 分片参数</span></span><br><span class="line">       <span class="keyword">int</span> shardIndex = XxlJobHelper.getShardIndex();</span><br><span class="line">       <span class="keyword">int</span> shardTotal = XxlJobHelper.getShardTotal();</span><br><span class="line">  </span><br><span class="line">       XxlJobHelper.log(<span class="string">&quot;分片参数：当前分片序号 = &#123;&#125;, 总分片数 = &#123;&#125;&quot;</span>, shardIndex, shardTotal);</span><br><span class="line">  </span><br><span class="line">       <span class="comment">// 业务逻辑</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shardTotal; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (i == shardIndex) &#123;</span><br><span class="line">               XxlJobHelper.log(<span class="string">&quot;第 &#123;&#125; 片, 命中分片开始处理&quot;</span>, i);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               XxlJobHelper.log(<span class="string">&quot;第 &#123;&#125; 片, 忽略&quot;</span>, i);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>任务配置</p><p><img src="/images/XXL-Job-%E5%AE%89%E8%A3%85/image-20220614231245349.png" alt="image-20220614231245349"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> XXL-Job </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXL-Job </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-告警</title>
      <link href="/SkyWalking/SkyWalking-%E5%91%8A%E8%AD%A6/"/>
      <url>/SkyWalking/SkyWalking-%E5%91%8A%E8%AD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="启动通知"><a href="#启动通知" class="headerlink" title="启动通知"></a>启动通知</h2><ul><li><p>在alarm-settings.yml配置文件中，添加通知接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">webhooks:</span><br><span class="line">  - http://192.168.80.1:8080/notify/</span><br></pre></td></tr></table></figure></li><li><p>编写代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class AlarmMessage  &#123;</span><br><span class="line">    private int scopeId;</span><br><span class="line">    private String scope;</span><br><span class="line">    private String name;</span><br><span class="line">    private String id0;</span><br><span class="line">    private String id1;</span><br><span class="line">    private String ruleName;</span><br><span class="line">    private String alarmMessage;</span><br><span class="line">    private long startTime;</span><br><span class="line">    private transient int period;</span><br><span class="line">    private transient boolean onlyAsCondition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class AlarmController &#123;</span><br><span class="line"></span><br><span class="line">    @PostMapping(&quot;/notify&quot;)</span><br><span class="line">    public void  webhook(@RequestBody List&lt;AlarmMessage&gt; alarmMessageList)&#123;</span><br><span class="line">        System.out.println(&quot;收到告警消息:&quot; +alarmMessageList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-日志</title>
      <link href="/SkyWalking/SkyWalking-%E6%97%A5%E5%BF%97/"/>
      <url>/SkyWalking/SkyWalking-%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>日志中找到traceId来跟踪系统调用链路</li><li>需要在系统日志打印出traceId</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ul><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-toolkit-logback-1.x<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加logback.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>　　</span><br><span class="line">    <span class="comment">&lt;!-- 控制台输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%tid] [%thread] %-5level %logger&#123;36&#125; -%msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;grpc-log&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%tid] [%thread] %-5level %logger&#123;36&#125; -%msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--系统操作日志--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span>　　</span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;grpc-log&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>skywaling agent 默认是上传到本地的oap，如果oap server地址不是本地，则需要单独配置oap server地址，agent文件夹里面config配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#日志数据的grpc服务器的主机</span></span><br><span class="line"><span class="meta">plugin.toolkit.log.grpc.reporter.server_host</span>=<span class="string">$&#123;SW_GRPC_LOG_SERVER_HOST:192.168.80.128&#125; </span></span><br><span class="line"><span class="comment">#日志数据的grpc服务器的端口</span></span><br><span class="line"><span class="meta">plugin.toolkit.log.grpc.reporter.server_port</span>=<span class="string">$&#123;SW_GRPC_LOG_SERVER_PORT:11800&#125;</span></span><br><span class="line"><span class="comment">#日志数据的最大大小</span></span><br><span class="line"><span class="meta">plugin.toolkit.log.grpc.reporter.max_message_size</span>=<span class="string">$&#123;SW_GRPC_LOG_MAX_MESSAGE_SIZE:10485760&#125;</span></span><br><span class="line"><span class="comment">#发送数据时将超时多长时间。单位是秒</span></span><br><span class="line"><span class="meta">plugin.toolkit.log.grpc.reporter.upstream_timeout</span>=<span class="string">$&#123;SW_GRPC_LOG_GRPC_UPSTREAM_TIMEOUT:30&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>打印日志，查看日志模块</p><p><img src="/images/SkyWalking-%E6%97%A5%E5%BF%97/image-20220612222558229.png" alt="image-20220612222558229"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-自定义链路追踪</title>
      <link href="/SkyWalking/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
      <url>/SkyWalking/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>对业务代码进行链路追踪，方便排查问题</li><li>比如，某个接口请求耗时慢，想对业务接口方法进行追踪</li><li>controller-&gt;service 方法，记录业务方法加入到链路中，记录入参、返回值等</li></ul><h2 id="TraceId"><a href="#TraceId" class="headerlink" title="TraceId"></a>TraceId</h2><p>TraceId用来标识一条请求链路，一条请求链路中包含一个Trace ID，多个Span ID</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ul><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-toolkit-trace<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在Service业务方法添加注解 <code>@Trace</code></p></li><li><p>记录入参和返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Tags(</span></span><br><span class="line"><span class="meta">  &#123;@Tag(key = &quot;reqParam&quot;, value = &quot;arg[0]&quot;), </span></span><br><span class="line"><span class="meta">  @Tag(key = &quot;respData&quot;, value = &quot;returnedObj&quot;)&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p><img src="/images/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/image-20220612210230597.png" alt="image-20220612210230597"></p><ul><li>在性能分析页面，选择新建的任务，点击分析</li><li>点击service上的查看，可以查看到对应的出入参</li><li>查看堆栈信息可以，看到具体哪行代码慢</li></ul><p><img src="/images/SkyWalking-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/image-20220612210337144.png" alt="image-20220612210337144"></p>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-UI和指标</title>
      <link href="/SkyWalking/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/"/>
      <url>/SkyWalking/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li><p>Service 服务，具体的服务，比如用户服务</p></li><li><p>Instance 实例，服务的实例，比如xxx节点上的服务，id@ip</p></li><li><p>Endpoint 端点，服务对外提供的接口，一个接口就是一个端点</p></li><li><p>Service Apdex 用户满意程度</p><ul><li>最大值就是 1， 是一个不断优化的方向</li><li>分3个指标，T 值代表着用户对服务性能满意的响应时间界限，假如T是0.5秒<ul><li>满意：响应时间少于 T 秒钟； 0.5秒内</li><li>容忍：响应时间 T～4T 秒； 0.5~2秒内</li><li>失望：响应时间超过 4T 秒； 多于2秒</li></ul></li></ul></li><li><p>SLA</p><ul><li><p>服务等级协议，全称：service level agreement，为保障服务的性能和可用性</p></li><li><p>9越多代表全年服务可用时间越长服务更可靠，停机时间越短</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1年 = 365天 = 8760小时</span><br><span class="line"></span><br><span class="line">99.9 = 8760 * 0.1% = 8760 * 0.001 = 8.76小时</span><br><span class="line">99.99 = 8760 * 0.0001 = 0.876小时 = 0.876 * 60 = 52.6分钟</span><br><span class="line">99.999 = 8760 * 0.00001 = 0.0876小时 = 0.0876 * 60 = 5.26分钟</span><br><span class="line"></span><br><span class="line">全年停机5.26分钟才能99.999%，即5个9</span><br></pre></td></tr></table></figure></li></ul></li><li><p>CPM 全称 call per minutes，是吞吐量(Throughput)指标，每分钟请求调用的次数</p></li><li><p>RT Response Time 表示请求响应时间</p></li><li><p>Percent Response 百分位数统计</p><ul><li>表示采集样本中某些值的占比，SkyWalking 有 “p50、p75、p90、p95、p99” 一些列值， “p99:360” 表示 99% 请求的响应时间在360ms以内</li></ul></li></ul><h2 id="SkyWalking-UI"><a href="#SkyWalking-UI" class="headerlink" title="SkyWalking UI"></a>SkyWalking UI</h2><ul><li><p>顶部控制栏</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612112037031.png" alt="image-20220612112037031"></p><ul><li>仪表盘：查看被监控服务的运行状态</li><li>拓扑图：以拓扑图的方式展现服务的关系</li><li>追踪：以接口的列表方式展现</li><li>性能剖析：对端点进行采样分析</li><li>日志：可查看服务日志</li><li>告警：触发告警的告警列表，包括了服务的失败率，超时等待</li></ul></li><li><p>Global：全局维度</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612183507443.png" alt="image-20220612183507443"></p><ul><li>Services load：服务每分钟请求数</li><li>Slow Services：慢响应服务，单位ms</li><li>Un-Health services(Apdex): Apdex性能指标，1为满分</li><li>Slow Endpoint：慢响应端点，单位ms</li><li>Global Response Latency：百分比响应延时，不同百分比的延时时间，单位ms</li><li>Global Heatmap：服务响应时间热力分布图，根据时间段内不同响应时间的数量显示颜色深度；</li></ul></li><li><p>Service：服务维度</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612192802910.png" alt="image-20220612192802910"></p><ul><li><p>Service Apdex（数字）:当前服务的评分</p></li><li><p>Service Apdex（折线图）：不同时间的Apdex评分</p></li><li><p>Service Avg Response Times：平均响应延时，单位ms</p></li><li><p>Service Response Time Percentile：百分比响应延时</p></li><li><p>Successful Rate（数字）：请求成功率</p></li><li><p>Successful Rate（折线图）：不同时间的请求成功率</p></li><li><p>Servce Load（数字）：每分钟请求数</p></li><li><p>Servce Load（折线图）：不同时间的每分钟请求数</p></li><li><p>Servce Instances Load：每个服务实例的每分钟请求数</p></li></ul></li><li><p>Instance：实例维度</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612193601535.png" alt="image-20220612193601535"></p><ul><li>对于CPU、内存的监控，Promethus更好一点</li><li>Service instance load：当前实例的每分钟请求数</li><li>Service Instance Successful Rate：当前实例的请求成功率</li><li>Service Instance Latency：当前实例的响应延时</li><li>JVM CPU：jvm占用CPU的百分比</li><li>JVM Memory：JVM内存占用大小，单位m</li><li>JVM GC Time：JVM垃圾回收时间，包含YGC和OGC</li><li>JVM GC Count：JVM垃圾回收次数，包含YGC和OGC</li><li>JVM Thread Count：JVM线程数</li><li>其他几个是.NET的，java无需关心</li></ul></li><li><p>Endpoint：端点维度</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612193809206.png" alt="image-20220612193809206"></p><ul><li>Endpoint Load in Current Service：每个端点的每分钟请求数</li><li>Slow Endpoints in Current Service：每个端点的最慢请求时间，单位ms</li><li>Successful Rate in Current Service：每个端点的请求成功率</li><li>Endpoint Load：当前端点每个时间段的请求数据</li><li>Endpoint Avg Response Time：当前端点每个时间段的请求行响应时间</li><li>Endpoint Response Time Percentile：当前端点每个时间段的响应时间占比</li><li>Endpoint Successful Rate：当前端点每个时间段的请求成功率</li></ul></li><li><p>拓扑图</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612194119321.png" alt="image-20220612194119321"></p><ul><li>服务间的关系和连接情况，可以从这里进去具体某个服务查看详情</li></ul></li><li><p>追踪</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612194317281.png" alt="image-20220612194317281"></p><ul><li>左侧：接口列表，请求为红色表示异常，蓝色表示正常</li><li>右侧：追踪列表，api的各个连接点按照端点的先后顺序和时间排序</li></ul></li><li><p>性能剖析</p><p><img src="/images/SkyWalking-UI%E5%92%8C%E6%8C%87%E6%A0%87/image-20220612195816866.png" alt="image-20220612195816866"></p><ul><li>右上角，新建任务：新建需要分析的端点</li><li>左侧列表：对任务进行采样</li><li>右侧：每个端点的链路信息</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-SpringBoot</title>
      <link href="/SkyWalking/SkyWalking-SpringBoot/"/>
      <url>/SkyWalking/SkyWalking-SpringBoot/</url>
      
        <content type="html"><![CDATA[<h2 id="下载探针"><a href="#下载探针" class="headerlink" title="下载探针"></a>下载探针</h2><p>以8.5.0版本为例</p><ul><li>探针是集成到客户端系统中的代理或 SDK 库,收集并格式化数据后发送到后端。包括链路追踪和性能指标</li><li>下载地址：<a href="https://skywalking.apache.org/downloads/">https://skywalking.apache.org/downloads/</a></li><li><a href="https://archive.apache.org/dist/skywalking/8.5.0/">https://archive.apache.org/dist/skywalking/8.5.0/</a></li></ul><p><img src="/images/SkyWalking-SpringBoot/image-20220611173837627.png" alt="image-20220611173837627"></p><ul><li><p>解压</p><p><img src="/images/SkyWalking-SpringBoot/image-20220611174525345.png" alt="image-20220611174525345"></p></li><li><p>agent目录文件的介绍</p><ul><li>activations：插件包</li><li>bootstrap-plugins：插件包</li><li>config: 配置文件</li><li>logs：skywalking agent的相关运行日志</li><li>optional-plugins：插件包（可供选择的插件包，如果需要生效则需要拷贝到plugins包下）</li><li>optional-reporter-plugins：插件包</li><li>plugins：插件包（生效的插件包，支持多个框架链路追踪）</li><li>skywalking-agent.jar：agent代理的jar包）</li></ul></li><li><p>优先级：JVM配置 &gt; 环境变量配置 &gt; agent.config</p></li></ul><h2 id="编写一个SpringBoot测试项目"><a href="#编写一个SpringBoot测试项目" class="headerlink" title="编写一个SpringBoot测试项目"></a>编写一个SpringBoot测试项目</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;UserDO&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> userService.getUsers();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;UserDO&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> getRandomUsers();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> List&lt;UserDO&gt; <span class="title">getRandomUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Random random = <span class="keyword">new</span> Random();</span><br><span class="line">       List&lt;UserDO&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">           <span class="keyword">int</span> i = random.nextInt(<span class="number">500</span>);</span><br><span class="line">           result.add(getUserDelayed(i));</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> UserDO <span class="title">getUserDelayed</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">       Random random = <span class="keyword">new</span> Random();</span><br><span class="line">       <span class="keyword">int</span> i = random.nextInt(<span class="number">1000</span>);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           Thread.sleep(i);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> getById(id);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="添加VM启动参数"><a href="#添加VM启动参数" class="headerlink" title="添加VM启动参数"></a>添加VM启动参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:D:\tool\apache-skywalking-apm-bin-es7\agent\skywalking-agent.jar -Dskywalking.agent.service_name=skywalking-learn -Dskywalking.collector.backend_service=192.168.80.128:11800</span><br></pre></td></tr></table></figure><p><img src="/images/SkyWalking-SpringBoot/image-20220611214736976.png" alt="image-20220611214736976"></p><ul><li>agent.service_name：客户端服务名，在apm系统中显示的服务名称</li><li>collector.backend_service：SW上传的服务地址</li></ul><h2 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h2><ul><li><p>访问springboot服务的一个接口地址</p></li><li><p>查看sw-ui的页面：<a href="http://192.168.80.128:8080/">http://192.168.80.128:8080/</a></p><img src="/images/SkyWalking-SpringBoot/image-20220611215030563.png" alt="image-20220611215030563" style="zoom:80%;" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SkyWalking-安装</title>
      <link href="/SkyWalking/SkyWalking-%E5%AE%89%E8%A3%85/"/>
      <url>/SkyWalking/SkyWalking-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="前置安装ES"><a href="#前置安装ES" class="headerlink" title="前置安装ES"></a>前置安装ES</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /dockerData/elasticsearch/config</span><br><span class="line">mkdir -p /dockerData/elasticsearch/data</span><br><span class="line">chmod 777 -R /dockerData/elasticsearch</span><br><span class="line">echo &quot;http.host: 0.0.0.0&quot; &gt;&gt; /dockerData/elasticsearch/config/elasticsearch.yml</span><br><span class="line"></span><br><span class="line">docker run -d --name elasticsearch --privileged=true -p 9200:9200 -p 9300:9300 \</span><br><span class="line">  -e &quot;discovery.type=single-node&quot; \</span><br><span class="line">  -e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \</span><br><span class="line">  -v /dockerData/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">  -v /dockerData/elasticsearch/data:/usr/share/elasticsearch/data \</span><br><span class="line">  -v /dockerData/elasticsearch/plugins:/usr/share/elasticsearch/plugins elasticsearch:7.16.2</span><br></pre></td></tr></table></figure><h2 id="安装Skywalking-OAP-Server"><a href="#安装Skywalking-OAP-Server" class="headerlink" title="安装Skywalking-OAP-Server"></a>安装Skywalking-OAP-Server</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name skywalking-oap-server -p 12800:12800 -p 11800:11800 \</span><br><span class="line">  --link elasticsearch \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e SW_STORAGE=elasticsearch7 \</span><br><span class="line">  -e SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200 \</span><br><span class="line">  apache/skywalking-oap-server:8.5.0-es7</span><br></pre></td></tr></table></figure><h2 id="安装Skywalking-UI"><a href="#安装Skywalking-UI" class="headerlink" title="安装Skywalking-UI"></a>安装Skywalking-UI</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name skywalking-ui -p 8080:8080 \</span><br><span class="line">  --link skywalking-oap-server \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e SW_OAP_ADDRESS=skywalking-oap-server:12800 \</span><br><span class="line">  apache/skywalking-ui:8.5.0</span><br></pre></td></tr></table></figure><ul><li>查看UI界面：<a href="http://192.168.80.128:8080/">http://192.168.80.128:8080/</a></li><li>查看ES索引：<a href="http://192.168.80.128:9200/_cat/indices?v=true&amp;pretty">http://192.168.80.128:9200/_cat/indices?v=true&amp;pretty</a></li></ul><h2 id="Nginx代理11800RPC接口"><a href="#Nginx代理11800RPC接口" class="headerlink" title="Nginx代理11800RPC接口"></a>Nginx代理11800RPC接口</h2><ul><li>如果在客户端数据上报时访问不到oap服务，需要做代理转发，通过nginx rpc代理的方式实现</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> grpcservers &#123;</span><br><span class="line"><span class="attribute">server</span> <span class="number">192.168.80.128:11800</span>; <span class="comment"># Skywalking OAP 后端 11800 地址</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">       <span class="attribute">listen</span>       <span class="number">11800</span> http2;</span><br><span class="line">       <span class="attribute">server_name</span>  skywalking;</span><br><span class="line"></span><br><span class="line">       <span class="attribute">location</span> / &#123;</span><br><span class="line"><span class="attribute">grpc_pass</span> grpc://grpcservers;</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SkyWalking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SkyWalking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-部署SSL</title>
      <link href="/Nginx/Nginx-%E9%83%A8%E7%BD%B2SSL/"/>
      <url>/Nginx/Nginx-%E9%83%A8%E7%BD%B2SSL/</url>
      
        <content type="html"><![CDATA[<h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><ul><li><p>登录阿里云</p></li><li><p>搜索SSL</p></li><li><p>进去云盾证书服务页面，选择DV单域名证书</p><p><img src="/images/Nginx-%E9%83%A8%E7%BD%B2SSL/image-20220607003418788.png" alt="image-20220607003418788"></p></li><li><p>选择20，免费，点击购买</p></li><li><p>购买完成后，进入数字证书管理服务</p><p><img src="/images/Nginx-%E9%83%A8%E7%BD%B2SSL/image-20220607003744548.png" alt="image-20220607003744548"></p></li><li><p>绑定自己的域名，并提交审核</p></li><li><p>等状态变为已签发，点击下载</p><p><img src="/images/Nginx-%E9%83%A8%E7%BD%B2SSL/image-20220607003909327.png" alt="image-20220607003909327"></p></li><li><p>下载nginx版本的证书</p></li><li><p>在nginx的目录下创建cert的目录，上传证书，并解压</p></li><li><p>修改nginx配置</p></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  aacopy.cn;</span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> https://<span class="variable">$&#123;server_name&#125;</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span>  aacopy.cn;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_certificate</span>      /usr/local/nginx/cert/7897869_aacopy.cn.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span>  /usr/local/nginx/cert/7897869_aacopy.cn.key;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_session_cache</span>    shared:SSL:<span class="number">1m</span>;</span><br><span class="line">        <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;</span><br><span class="line">        <span class="attribute">ssl_prefer_server_ciphers</span>  <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   /aacopy/blog/aacopy;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重启nginx</li></ul>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx-安装</title>
      <link href="/Nginx/Nginx-%E5%AE%89%E8%A3%85/"/>
      <url>/Nginx/Nginx-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<ul><li>下载稳定版本安装包，<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></li><li>例如：<a href="https://nginx.org/download/nginx-1.22.0.tar.gz">https://nginx.org/download/nginx-1.22.0.tar.gz</a></li><li>上传nginx-1.22.0.tar.gz至/usr/local/src包下</li><li><code>tar -zxvf nginx-1.22.0.tar.gz</code> 解压</li><li><code>cd nginx-1.22.0</code></li><li><code>./configure --with-http_stub_status_module --with-http_ssl_module</code></li><li><code>make &amp; make install</code></li><li><code>/usr/local/nginx/sbin/nginx -v</code></li><li>启动<code>/usr/local/nginx/sbin/nginx</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-安装Linux</title>
      <link href="/Git/Git-%E5%AE%89%E8%A3%85Linux/"/>
      <url>/Git/Git-%E5%AE%89%E8%A3%85Linux/</url>
      
        <content type="html"><![CDATA[<h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><p>下载文件</p><p><a href="https://git-scm.com/download/linux">https://git-scm.com/download/linux</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><code>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></li><li><code>yum install gcc perl-ExtUtils-MakeMaker</code></li><li><code>rz</code> 上传至<code>/usr/local</code>目录下</li><li><code>tar -zxvf git-2.36.1.tar.gz</code>  解压缩</li><li><code>cd git-2.36.1</code>  进入目录</li><li><code>./configure --prefix=/usr/local/git-2.36.1</code>  预编译</li><li><code>make &amp;&amp; make install</code>  编译并安装</li><li><code>ln -s /usr/local/git-2.36.1/bin/* /usr/bin/</code>  将git命令软连接到/usr/bin目录下</li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><code>git --help</code></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><code>git config --global user.email &quot;969312613@qq.com&quot;</code></li><li><code>git config --global user.name &quot;cmyang&quot;</code></li></ul><p>查看配置：<code>git config --list</code></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Druid-性能监控</title>
      <link href="/Mysql/Druid-%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/"/>
      <url>/Mysql/Druid-%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">filters:</span> <span class="string">stat</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.80.128:3306/learn_mysql?charset=utf8mb4&amp;useSSL=false</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">aacopy.cn</span></span><br></pre></td></tr></table></figure><h2 id="编写druid配置类"><a href="#编写druid配置类" class="headerlink" title="编写druid配置类"></a>编写druid配置类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">druidServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRegistrationBean servletRegistrationBean = <span class="keyword">new</span> ServletRegistrationBean();</span><br><span class="line">        servletRegistrationBean.setServlet(<span class="keyword">new</span> StatViewServlet());</span><br><span class="line">        servletRegistrationBean.addUrlMappings(<span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line">        Map&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParameters.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>);<span class="comment">// 用户名</span></span><br><span class="line">        initParameters.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;aacopy.cn&quot;</span>);<span class="comment">// 密码</span></span><br><span class="line">        initParameters.put(<span class="string">&quot;resetEnable&quot;</span>, <span class="string">&quot;false&quot;</span>);<span class="comment">// 禁用HTML页面上的“Reset All”功能</span></span><br><span class="line">        servletRegistrationBean.setInitParameters(initParameters);</span><br><span class="line">        <span class="keyword">return</span> servletRegistrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">filterRegistrationBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FilterRegistrationBean filterRegistrationBean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">        filterRegistrationBean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line">        filterRegistrationBean.addUrlPatterns(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">        filterRegistrationBean.addInitParameter(<span class="string">&quot;exclusions&quot;</span>, <span class="string">&quot;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> filterRegistrationBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h2><p>编写测试代码，在数据库创建测试表，录入测试数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/find_users&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUsers</span><span class="params">(<span class="meta">@RequestParam</span> String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.list(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().like(<span class="string">&quot;name&quot;</span>, name));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>访问：<a href="http://127.0.0.1:8080/user/find_users?name=Yang">http://127.0.0.1:8080/user/find_users?name=Yang</a></p><p>打开监控页面：<a href="http://127.0.0.1:8080/druid/login.html">http://127.0.0.1:8080/druid/login.html</a></p><p>账号：admin 密码：aacopy.cn</p><p><img src="../../images/Druid-%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7/image-20220528224742783.png" alt="image-20220528224742783"></p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> Druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-UML</title>
      <link href="/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-UML/"/>
      <url>/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-UML/</url>
      
        <content type="html"><![CDATA[<p>UML (Unified modeling language) 是一个统一建模语言</p><p>UML本身是一套符号的规定，这些符号用于描述软件模块之前的关系，比如：类，接口，实现，泛型，依赖，组合，聚合等</p><p>类之间的关系</p><p>依赖、继承、实现、关联、聚合、组合</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-HelloWorld</title>
      <link href="/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-HelloWorld/"/>
      <url>/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-HelloWorld/</url>
      
        <content type="html"><![CDATA[<p>​    设计模式是对软件设计过程中普遍存在（反复出现）的各种问题，所提出的解决方案</p><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><p>设计模式可以让程序在以下方面做的更好</p><ul><li>代码重用性</li><li>代码可读性</li><li>可扩展性</li><li>可靠性</li><li>使程序具有高内聚，低耦合和特性</li></ul><h2 id="七大原则"><a href="#七大原则" class="headerlink" title="七大原则"></a>七大原则</h2><p>要是设计具备以上有点，需要具备七大原则</p><ul><li>单一职责原则</li><li>接口隔离原则</li><li>依赖倒转原则</li><li>里氏替换原则</li><li>开闭原则</li><li>迪米特法则</li><li>合成复用原则</li></ul><h3 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h3><p>一个类应该只负责一个职责</p><ul><li>降低类的复杂度，一个类只负责一项职责</li><li>提高类的可读性，可维护性</li><li>降低变更引起的风险</li></ul><h3 id="接口隔离原则"><a href="#接口隔离原则" class="headerlink" title="接口隔离原则"></a>接口隔离原则</h3><p>一个类与另外一个类的依赖应该建立在最小的接口</p><h3 id="依赖倒转原则"><a href="#依赖倒转原则" class="headerlink" title="依赖倒转原则"></a>依赖倒转原则</h3><ul><li>高层模块不应该依赖底层模块</li><li>抽象不应该依赖细节，细节应该依赖抽象</li><li>中心思想是面向接口编程</li><li>抽象是指接口和抽象类，细节指实现类</li><li>接口和抽象的目的是定制好规范</li><li>实现方式<ul><li>通过接口作为参数实现依赖</li><li>通过构造器参数</li><li>通过setter方法</li></ul></li></ul><h3 id="里氏替换原则"><a href="#里氏替换原则" class="headerlink" title="里氏替换原则"></a>里氏替换原则</h3><ul><li>在使用继承时，子类尽量不要重写父类的方法</li><li>继承实际上增加了类的耦合性，在适当的情况下可以通过聚合，组合，依赖来解决问题</li></ul><h3 id="开闭原则"><a href="#开闭原则" class="headerlink" title="开闭原则"></a>开闭原则</h3><ul><li>类，方法，或者实体，应该对提供方扩展开放，对使用方修改关闭，用抽象构建框架，用实现扩展细节</li><li>在软件需要变化时，尽量通过扩展来实现，而不是修改原有代码</li></ul><h3 id="迪米特法则"><a href="#迪米特法则" class="headerlink" title="迪米特法则"></a>迪米特法则</h3><ul><li>最少知道原则，一个类自己依赖的类知道的越少越好</li><li>最好只与成员变量，方法参数，返回值对应的类交互</li></ul><h3 id="合成复用原则"><a href="#合成复用原则" class="headerlink" title="合成复用原则"></a>合成复用原则</h3><ul><li>尽量使用合成/聚合的方式，而不是使用继承</li></ul><h2 id="设计原则核心思想"><a href="#设计原则核心思想" class="headerlink" title="设计原则核心思想"></a>设计原则核心思想</h2><ul><li>找出代码中可能变化的地方，独立出去，不要与不变的代码混在一起</li><li>面向接口编程，而不是针对实现编程</li><li>努力实现交互对象之前的松耦合</li></ul>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT</title>
      <link href="/Util/JWT/"/>
      <url>/Util/JWT/</url>
      
        <content type="html"><![CDATA[<ul><li><p>JWT 是一个开放标准，它定义了一种用于简洁，自包含的用于通信双方之间以 JSON 对象的形式安全传递信息的方法。 可以使用 HMAC 算法或者是 RSA 的公钥密钥对进行签名。</p></li><li><p>优点</p><ul><li>生产的token可以包含基本信息，比如id、用户昵称、头像等信息，避免再次查库</li><li>存储在客户端，不占用服务端的内存资源</li></ul></li><li><p>缺点</p><ul><li><p>token是经过base64编码，所以可以解码，因此token加密前的对象不应该包含敏感信息，如用户权限，密码等</p></li><li><p>如果没有服务端存储，则不能做登录失效处理，除非服务端改秘钥</p></li></ul></li><li><p>JWT格式组成 头部、负载、签名 header+payload+signature</p><ul><li>头部：主要是描述签名算法</li><li>负载：主要描述是加密对象的信息，如用户的id等，也可以加些规范里面的东西，如iss签发者，exp 过期时间，sub 面向的用户</li><li>签名：主要是把前面两部分进行加密，防止别人拿到token进行base解密后篡改token</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUBJECT = <span class="string">&quot;aacopy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRET = <span class="string">&quot;aacopy.cn&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * token过期时间，7天</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> EXPIRED = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生产token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginUser</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateToken</span><span class="params">(LoginUser loginUser)</span> </span>&#123;</span><br><span class="line">        String token = Jwts.builder().setSubject(SUBJECT)</span><br><span class="line">                .claim(<span class="string">&quot;head_img&quot;</span>, loginUser.getHeadImg())</span><br><span class="line">                .claim(<span class="string">&quot;account_no&quot;</span>, loginUser.getAccountNo())</span><br><span class="line">                .claim(<span class="string">&quot;username&quot;</span>, loginUser.getUsername())</span><br><span class="line">                .claim(<span class="string">&quot;mail&quot;</span>, loginUser.getMail())</span><br><span class="line">                .claim(<span class="string">&quot;phone&quot;</span>, loginUser.getPhone())</span><br><span class="line">                .claim(<span class="string">&quot;auth&quot;</span>, loginUser.getAuth())</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> Date())</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRED))</span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, SECRET).compact();</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LoginUser <span class="title">checkToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">        Claims claims = Jwts.parser().setSigningKey(SECRET).parseClaimsJws(token).getBody();</span><br><span class="line">        <span class="keyword">if</span>(claims != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Long accountNo = Long.parseLong(claims.get(<span class="string">&quot;account_no&quot;</span>).toString());</span><br><span class="line">            String headImg = (String) claims.get(<span class="string">&quot;head_img&quot;</span>);</span><br><span class="line">            String username = (String) claims.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            String mail = (String) claims.get(<span class="string">&quot;mail&quot;</span>);</span><br><span class="line">            String phone = (String) claims.get(<span class="string">&quot;phone&quot;</span>);</span><br><span class="line">            String auth = (String) claims.get(<span class="string">&quot;auth&quot;</span>);</span><br><span class="line"></span><br><span class="line">            LoginUser loginUser = LoginUser.builder()</span><br><span class="line">                    .accountNo(accountNo)</span><br><span class="line">                    .auth(auth)</span><br><span class="line">                    .phone(phone)</span><br><span class="line">                    .headImg(headImg)</span><br><span class="line">                    .mail(mail)</span><br><span class="line">                    .username(username)</span><br><span class="line">                    .build();</span><br><span class="line">            <span class="keyword">return</span> loginUser;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>登录拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;LoginUser&gt; threadLocal = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (HttpMethod.OPTIONS.toString().equalsIgnoreCase(request.getMethod())) &#123;</span><br><span class="line">            response.setStatus(HttpStatus.NO_CONTENT.value());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String accessToken = request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(accessToken)) &#123;</span><br><span class="line">            accessToken = request.getParameter(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isNotBlank(accessToken)) &#123;</span><br><span class="line">            LoginUser loginUser = JWTUtil.checkToken(accessToken);</span><br><span class="line">            <span class="keyword">if</span>(loginUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">                threadLocal.set(loginUser);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HandlerInterceptor.<span class="keyword">super</span>.postHandle(request, response, handler, modelAndView);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>拦截器配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterceptorConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginInterceptor())</span><br><span class="line">                <span class="comment">//添加拦截的路径</span></span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/api/account/*/**&quot;</span>, <span class="string">&quot;/api/traffic/*/**&quot;</span>)</span><br><span class="line">                <span class="comment">//排除不拦截</span></span><br><span class="line">                .excludePathPatterns(</span><br><span class="line">                        <span class="string">&quot;/api/account/*/register&quot;</span>,<span class="string">&quot;/api/account/*/upload&quot;</span>,<span class="string">&quot;/api/account/*/login&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;/api/notify/*/captcha&quot;</span>,<span class="string">&quot;/api/notify/*/send_code&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Util </tag>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO-Client</title>
      <link href="/MinIO/MinIO-Client/"/>
      <url>/MinIO/MinIO-Client/</url>
      
        <content type="html"><![CDATA[<p>在Java中使用minio</p><ul><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>MinioConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MinioConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.accessKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.secretKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String secretKey;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MinioClient <span class="title">minioClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MinioClient.builder()</span><br><span class="line">                .endpoint(endpoint)</span><br><span class="line">                .credentials(accessKey, secretKey)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>FileComponent</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileComponent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinioClient minioClient;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.defaultBucket&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String defaultBucket;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> multipartFile</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(MultipartFile multipartFile, String filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PutObjectArgs putObjectArgs = PutObjectArgs.builder()</span><br><span class="line">                    .bucket(defaultBucket)</span><br><span class="line">                    .object(filename)</span><br><span class="line">                    .stream(multipartFile.getInputStream(), multipartFile.getSize(), -<span class="number">1</span>)</span><br><span class="line">                    .contentType(multipartFile.getContentType())</span><br><span class="line">                    .build();</span><br><span class="line">            ObjectWriteResponse objectWriteResponse = minioClient.putObject(putObjectArgs);</span><br><span class="line">            System.out.println(objectWriteResponse);</span><br><span class="line">            <span class="keyword">return</span> endpoint+<span class="string">&quot;/&quot;</span>+defaultBucket+<span class="string">&quot;/&quot;</span>+filename;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BizException(BizCodeEnum.FILE_UPLOAD_FAIL);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(HttpServletResponse response, String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (InputStream inputStream = minioClient.getObject(</span><br><span class="line">                GetObjectArgs.builder()</span><br><span class="line">                        .bucket(defaultBucket)</span><br><span class="line">                        .object(fileName)</span><br><span class="line">                        .build())) &#123;</span><br><span class="line">            IOUtils.copy(inputStream, response.getOutputStream());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">minio:</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">http://192.168.80.128:9000</span></span><br><span class="line">  <span class="attr">accessKey:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">secretKey:</span> <span class="string">aacopy.cn</span></span><br><span class="line">  <span class="attr">defaultBucket:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure></li><li><p>测试接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/user_img/upload&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> JsonData <span class="title">uploadUserImg</span><span class="params">(<span class="meta">@RequestPart(&quot;file&quot;)</span> MultipartFile file)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> JsonData.buildSuccess(accountService.uploadUserImg(file));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>accountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">uploadUserImg</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">       LocalDateTime now = LocalDateTime.now();</span><br><span class="line">       DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class="line">       String folder = <span class="string">&quot;user/&quot;</span> + dateTimeFormatter.format(now);</span><br><span class="line">       String filename = CommonUtil.generateUUID();</span><br><span class="line">       String originalFilename = file.getOriginalFilename();</span><br><span class="line">       String extension = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">  </span><br><span class="line">       String wholeFilename = folder + <span class="string">&quot;/&quot;</span> + filename + extension;</span><br><span class="line">       <span class="keyword">return</span> fileComponent.upload(file, wholeFilename);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> MinIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel-Nacos规则配置持久化</title>
      <link href="/SpringCloud/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
      <url>/SpringCloud/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li><p>Sentinel默认在控制台（Dashboard）中添加流控降级规则后，将配置规则信息推送给Sentinel客户端，配置的规则记录在内存中，如果客户端重启，规则也就丢失。</p><p><img src="/images/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/202203171.png" alt="202203171"></p></li><li><p>Sentinel的流控规则持久化到nacos中，并且在Sentinel控制台中修改流控规则，需要同步修改nacos的值，并且服务立即生效</p></li></ul><h2 id="官方相关文档："><a href="#官方相关文档：" class="headerlink" title="官方相关文档："></a>官方相关文档：</h2><ul><li><p>动态规则扩展：<a href="https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95">https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95</a></p></li><li><p>在生产环境中使用 Sentinel：<a href="https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel">https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel</a></p></li><li><p>Sentinel 控制台（集群流控管理）：<a href="https://github.com/alibaba/Sentinel/wiki/Sentinel-%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88%E9%9B%86%E7%BE%A4%E6%B5%81%E6%8E%A7%E7%AE%A1%E7%90%86%EF%BC%89#%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE">https://github.com/alibaba/Sentinel/wiki/Sentinel-%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%88%E9%9B%86%E7%BE%A4%E6%B5%81%E6%8E%A7%E7%AE%A1%E7%90%86%EF%BC%89#%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE</a></p></li><li><p>示例代码：<a href="https://github.com/alibaba/Sentinel/blob/master/sentinel-demo/sentinel-demo-nacos-datasource/src/main/java/com/alibaba/csp/sentinel/demo/datasource/nacos/NacosDataSourceDemo.java">https://github.com/alibaba/Sentinel/blob/master/sentinel-demo/sentinel-demo-nacos-datasource/src/main/java/com/alibaba/csp/sentinel/demo/datasource/nacos/NacosDataSourceDemo.java</a></p></li></ul><h2 id="方案：DataSource-扩展"><a href="#方案：DataSource-扩展" class="headerlink" title="方案：DataSource 扩展"></a>方案：DataSource 扩展</h2><p>官方推荐：通过控制台设置规则后将规则推送到统一的规则中心（Nacos、Zookeepe），客户端实现 <code>ReadableDataSource</code> 接口端监听规则中心实时获取变更</p><p><img src="/images/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/45406233-645e8380-b698-11e8-8199-0c917403238f.png" alt="push-rules-from-dashboard-to-config-center"></p><p><strong>客户端部分：（实现上图 2，3步骤）</strong></p><ul><li><p>最简单的方式是继承 <a href="https://github.com/alibaba/Sentinel/blob/master/sentinel-extension/sentinel-datasource-extension/src/main/java/com/alibaba/csp/sentinel/datasource/AbstractDataSource.java">AbstractDataSource</a> 抽象类，该抽象类已经实现了ReadableDataSource接口，在其构造方法中添加监听器，并实现 <code>readSource()</code> 从指定数据源读取字符串格式的配置数据。</p></li><li><p>目前官方已经实现了基于Nacos的数据源，<a href="https://github.com/alibaba/Sentinel/blob/master/sentinel-extension/sentinel-datasource-nacos/src/main/java/com/alibaba/csp/sentinel/datasource/nacos/NacosDataSource.java">NacosDataSource</a>，这个类继承了抽象类<code>AbstractDataSource</code>。</p></li><li><p>客户端只需要引入<code>sentinel-datasource-nacos</code>依赖</p></li><li><p>通过Nacos配置参数创建<code>NacosDataSource</code>数据源对象，并且将该数据源注册到指定的规则管理器中，如下将Nacos数据源注册到流控规则管理器中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ReadableDataSource&lt;String, List&lt;FlowRule&gt;&gt; flowRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(remoteAddress, groupId, dataId, parser);</span><br><span class="line">FlowRuleManager.register2Property(flowRuleDataSource.getProperty());</span><br></pre></td></tr></table></figure></li><li><p>该操作可以放在spring容器启动完成后，执行注册操作。</p></li></ul><p><strong>控制台部分：（实现上图1步骤）</strong></p><ul><li><p>Sentinel 控制台提供 <code>DynamicRulePublisher</code>（推送规则） 和 <code>DynamicRuleProvider</code> （拉取规则）接口用于实现应用维度的规则推送和拉取</p></li><li><p>官方提供了流程规则的示例代码，参照示例代码，对降级，热点，系统，权限做相应的改造</p></li><li><p>官方提供了 Nacos、ZooKeeper 和 Apollo 的推送和拉取规则实现示例（位于 <code>test</code> 目录下）</p></li><li><p>以 Nacos 为例，只需在 FlowControllerV2 中指定对应Nacos的 bean 即可开启 Nacos 适配。前端页面需要手动切换，或者修改前端路由配置（sidebar.html 流控规则路由从 dashboard.flowV1 改成 dashboard.flow 即可，簇点链路页面对话框需要自行改造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;flowRuleNacosProvider&quot;)</span></span><br><span class="line"><span class="keyword">private</span> DynamicRuleProvider&lt;List&lt;FlowRuleEntity&gt;&gt; ruleProvider;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(&quot;flowRuleNacosPublisher&quot;)</span></span><br><span class="line"><span class="keyword">private</span> DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; rulePublisher;</span><br></pre></td></tr></table></figure></li><li><p>默认 Nacos 适配的 dataId 和 groupId 约定如下：</p><ul><li>groupId: <code>SENTINEL_GROUP</code></li><li>流控规则 dataId: <code>&#123;appName&#125;-flow-rules</code>，比如应用名为 appA，则 dataId 为 appA-flow-rules</li><li>这些约定配置<code>NacosConfigUtil</code>类中定义</li><li>扩展的降级，热点，系统，权限等这些配置就需要在这里定义</li></ul></li><li><p>官方还提供了String和流控规则对象转换类，在<code>NacosConfig</code>类中，在做扩展时也需要将其他规则转换器注册到spring容器中，在controller操作时需要用到</p></li></ul><h2 id="控制台Dashboard改造"><a href="#控制台Dashboard改造" class="headerlink" title="控制台Dashboard改造"></a>控制台Dashboard改造</h2><h3 id="下载控制台源码"><a href="#下载控制台源码" class="headerlink" title="下载控制台源码"></a>下载控制台源码</h3><p>根据项目具体版本获取对应的源码，本笔记使用1.7.1版本</p><p>github地址：<a href="https://github.com/alibaba/Sentinel">https://github.com/alibaba/Sentinel</a></p><p>克隆：<a href="https://github.com/alibaba/Sentinel.git">https://github.com/alibaba/Sentinel.git</a></p><p>切换到tag1.7.1的代码</p><h3 id="修改控制台代码sentinel-dashboard"><a href="#修改控制台代码sentinel-dashboard" class="headerlink" title="修改控制台代码sentinel-dashboard"></a>修改控制台代码sentinel-dashboard</h3><ol><li><p>修改pom.xml</p><ul><li><p>找到<code>&lt;artifactId&gt;sentinel-datasource-nacos&lt;/artifactId&gt;</code></p></li><li><p>将<code>&lt;scope&gt;test&lt;/scope&gt;</code>删掉</p><p><img src="/images/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/image-20220316021805277.png" alt="image-20220316021805277"></p></li></ul></li><li><p>在test目录下</p><ul><li><p>将com.alibaba.csp.sentinel.dashboard.rule.nacos文件夹复制到main对应的目录下</p><img src="/images/Sentinel-Nacos%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E6%8C%81%E4%B9%85%E5%8C%96/image-20220316022119911.png" alt="image-20220316022119911" style="zoom: 67%;" /></li></ul></li><li><p>修改<code>com.alibaba.csp.sentinel.dashboard.rule.nacos.NacosConfig</code>文件</p><p>nacos的地址从配置文件获取，同时将降级，热点，系统，权限转换器注入到spring容器中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;nacos.server-addr:localhost&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverAddr;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;List&lt;FlowRuleEntity&gt;, String&gt; flowRuleEntityEncoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON::toJSONString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;String, List&lt;FlowRuleEntity&gt;&gt; flowRuleEntityDecoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> s -&gt; JSON.parseArray(s, FlowRuleEntity.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;List&lt;AuthorityRuleEntity&gt;, String&gt; authorityRuleEntityEncoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON::toJSONString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;String, List&lt;AuthorityRuleEntity&gt;&gt; authorityRuleEntityDecoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> s -&gt; JSON.parseArray(s, AuthorityRuleEntity.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;List&lt;DegradeRuleEntity&gt;, String&gt; degradeRuleEntityEncoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON::toJSONString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;String, List&lt;DegradeRuleEntity&gt;&gt; degradeRuleEntityDecoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> s -&gt; JSON.parseArray(s, DegradeRuleEntity.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;List&lt;ParamFlowRuleEntity&gt;, String&gt; paramFlowRuleEntityEncoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON::toJSONString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;String, List&lt;ParamFlowRuleEntity&gt;&gt; paramFlowRuleEntityDecoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> s -&gt; JSON.parseArray(s, ParamFlowRuleEntity.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;List&lt;SystemRuleEntity&gt;, String&gt; systemRuleEntityEncoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> JSON::toJSONString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Converter&lt;String, List&lt;SystemRuleEntity&gt;&gt; systemRuleEntityDecoder() &#123;</span><br><span class="line">        <span class="keyword">return</span> s -&gt; JSON.parseArray(s, SystemRuleEntity.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConfigService <span class="title">nacosConfigService</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ConfigFactory.createConfigService(serverAddr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>约定nacos配置项定义，修改<code>NacosConfigUtil</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String GROUP_ID = <span class="string">&quot;SENTINEL_GROUP&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-flow-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEGRADE_DATA_ID_POSTFIX = <span class="string">&quot;-degrade-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PARAM_FLOW_DATA_ID_POSTFIX = <span class="string">&quot;-param-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SYSTEM_DATA_ID_POSTFIX = <span class="string">&quot;-system-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY_DATA_ID_POSTFIX = <span class="string">&quot;-authority-rules&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLUSTER_MAP_DATA_ID_POSTFIX = <span class="string">&quot;-cluster-map&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cc for `cluster-client`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cc-config&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cs for `cluster-server`</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_TRANSPORT_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-transport-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_FLOW_CONFIG_DATA_ID_POSTFIX = <span class="string">&quot;-cs-flow-config&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SERVER_NAMESPACE_SET_DATA_ID_POSTFIX = <span class="string">&quot;-cs-namespace-set&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NacosConfigUtil</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>application.properties</code>配置文件中添加配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">nacos.server-addr</span>=<span class="string">192.168.80.128:8848</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="流控规则"><a href="#流控规则" class="headerlink" title="流控规则"></a>流控规则</h3><p>流控规则官方文档中已经讲了一部分，参照文档进行改造。</p><ol><li><p>修改<code>com.alibaba.csp.sentinel.dashboard.controller.v2.FlowControllerV2</code>文件</p><p>bean使用nacos</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">   <span class="meta">@Qualifier(&quot;flowRuleNacosProvider&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> DynamicRuleProvider&lt;List&lt;FlowRuleEntity&gt;&gt; ruleProvider;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="meta">@Qualifier(&quot;flowRuleNacosPublisher&quot;)</span></span><br><span class="line">   <span class="keyword">private</span> DynamicRulePublisher&lt;List&lt;FlowRuleEntity&gt;&gt; rulePublisher;</span><br></pre></td></tr></table></figure></li><li><p>搜索<code>sidebar.html</code>文件，找关键字<code>flowV1</code>，改为<code>flow</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">ui-sref-active</span>=<span class="string">&quot;active&quot;</span> <span class="attr">ng-if</span>=<span class="string">&quot;!entry.isGateway&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">ui-sref</span>=<span class="string">&quot;dashboard.flow(&#123;app: entry.app&#125;)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-filter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>流控规则<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>搜索<code>identity.js</code>文件，找关键字<code>FlowServiceV1</code>，改为<code>FlowServiceV2</code></p></li></ol><h3 id="降级规则"><a href="#降级规则" class="headerlink" title="降级规则"></a>降级规则</h3><p>因为官方只有流控规则的改造说明，降级规则需要自己完成，可以参考流控规则<code>FlowControllerV1</code>到<code>FlowControllerV2</code>版本的变动，做一下改造。</p><p><strong>核心思路</strong>：</p><ul><li>实现<code>DynamicRulePublisher</code>（推送规则） 接口，实现<code>publish</code>方法，用于规则推送配置中心，通过Nacos的<code>configService</code>的<code>publishConfig</code>方法实现</li><li>实现<code>DynamicRuleProvider</code> （拉取规则）接口，实现getRules方法，用于规则拉取，通过Nacos的<code>configService</code>的<code>getConfig</code>方法实现</li><li>在Controller中，获取规则的方法中将原来拉去规则的地方改为<code>dynamicRuleProvider.getRules(app);</code>方式</li><li>在保存修改删除规则方法中，同步推送到配置中心<code>dynamicRulePublisher.publish(app, rules);</code></li></ul><p><strong>代码实现</strong>：</p><ol><li><p>推送实现类<code>DegradeRuleNacosPublisher</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DegradeRuleNacosPublisher</span> <span class="keyword">implements</span> <span class="title">DynamicRulePublisher</span>&lt;<span class="title">List</span>&lt;<span class="title">DegradeRuleEntity</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigService configService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Converter&lt;List&lt;DegradeRuleEntity&gt;, String&gt; converter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">publish</span><span class="params">(String app, List&lt;DegradeRuleEntity&gt; rules)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        AssertUtil.notEmpty(app, <span class="string">&quot;app name cannot be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (rules == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        configService.publishConfig(app + NacosConfigUtil.DEGRADE_DATA_ID_POSTFIX,</span><br><span class="line">            NacosConfigUtil.GROUP_ID, converter.convert(rules));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>拉取实现类<code>DegradeRuleNacosProvider</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DegradeRuleNacosProvider</span> <span class="keyword">implements</span> <span class="title">DynamicRuleProvider</span>&lt;<span class="title">List</span>&lt;<span class="title">DegradeRuleEntity</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigService configService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Converter&lt;String, List&lt;DegradeRuleEntity&gt;&gt; converter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;DegradeRuleEntity&gt; <span class="title">getRules</span><span class="params">(String appName)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String rules = configService.getConfig(appName + NacosConfigUtil.DEGRADE_DATA_ID_POSTFIX,</span><br><span class="line">            NacosConfigUtil.GROUP_ID, <span class="number">3000</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(rules)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> converter.convert(rules);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>DegradeController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/degrade&quot;, produces = MediaType.APPLICATION_JSON_VALUE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DegradeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(DegradeController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> InMemoryRuleRepositoryAdapter&lt;DegradeRuleEntity&gt; repository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRuleProvider&lt;List&lt;DegradeRuleEntity&gt;&gt; ruleProvider;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRulePublisher&lt;List&lt;DegradeRuleEntity&gt;&gt; rulePublisher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rules.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.READ_RULE)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;List&lt;DegradeRuleEntity&gt;&gt; queryMachineRules(String app) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(app)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;app can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;DegradeRuleEntity&gt; rules = ruleProvider.getRules(app);</span><br><span class="line">            rules = repository.saveAll(rules);</span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(rules);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;queryApps error:&quot;</span>, throwable);</span><br><span class="line">            <span class="keyword">return</span> Result.ofThrowable(-<span class="number">1</span>, throwable);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/new.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.WRITE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;DegradeRuleEntity&gt; <span class="title">add</span><span class="params">(String app, String ip, Integer port, String limitApp, String resource,</span></span></span><br><span class="line"><span class="params"><span class="function">                                         Double count, Integer timeWindow, Integer grade)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(app)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;app can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(ip)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;ip can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (port == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;port can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(limitApp)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;limitApp can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isBlank(resource)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;resource can&#x27;t be null or empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;count can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (timeWindow == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;timeWindow can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (grade == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;grade can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (grade &lt; RuleConstant.DEGRADE_GRADE_RT || grade &gt; RuleConstant.DEGRADE_GRADE_EXCEPTION_COUNT) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;Invalid grade: &quot;</span> + grade);</span><br><span class="line">        &#125;</span><br><span class="line">        DegradeRuleEntity entity = <span class="keyword">new</span> DegradeRuleEntity();</span><br><span class="line">        entity.setApp(app.trim());</span><br><span class="line">        entity.setIp(ip.trim());</span><br><span class="line">        entity.setPort(port);</span><br><span class="line">        entity.setLimitApp(limitApp.trim());</span><br><span class="line">        entity.setResource(resource.trim());</span><br><span class="line">        entity.setCount(count);</span><br><span class="line">        entity.setTimeWindow(timeWindow);</span><br><span class="line">        entity.setGrade(grade);</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        entity.setGmtCreate(date);</span><br><span class="line">        entity.setGmtModified(date);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            entity = repository.save(entity);</span><br><span class="line">            publishRules(entity.getApp());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;Failed to add degrade rule&quot;</span>, throwable);</span><br><span class="line">            <span class="keyword">return</span> Result.ofThrowable(-<span class="number">1</span>, throwable);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.ofSuccess(entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.WRITE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;DegradeRuleEntity&gt; <span class="title">updateIfNotNull</span><span class="params">(Long id, String app, String limitApp, String resource,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                     Double count, Integer timeWindow, Integer grade)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (grade != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grade &lt; RuleConstant.DEGRADE_GRADE_RT || grade &gt; RuleConstant.DEGRADE_GRADE_EXCEPTION_COUNT) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;Invalid grade: &quot;</span> + grade);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DegradeRuleEntity entity = repository.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (entity == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id &quot;</span> + id + <span class="string">&quot; dose not exist&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(app)) &#123;</span><br><span class="line">            entity.setApp(app.trim());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(limitApp)) &#123;</span><br><span class="line">            entity.setLimitApp(limitApp.trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotBlank(resource)) &#123;</span><br><span class="line">            entity.setResource(resource.trim());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count != <span class="keyword">null</span>) &#123;</span><br><span class="line">            entity.setCount(count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (timeWindow != <span class="keyword">null</span>) &#123;</span><br><span class="line">            entity.setTimeWindow(timeWindow);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (grade != <span class="keyword">null</span>) &#123;</span><br><span class="line">            entity.setGrade(grade);</span><br><span class="line">        &#125;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        entity.setGmtModified(date);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            entity = repository.save(entity);</span><br><span class="line">            <span class="keyword">if</span> (entity == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;save entity fail&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            publishRules(entity.getApp());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;Failed to update degrade rule&quot;</span>, throwable);</span><br><span class="line">            <span class="keyword">return</span> Result.ofThrowable(-<span class="number">1</span>, throwable);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.ofSuccess(entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete.json&quot;)</span></span><br><span class="line">    <span class="meta">@AuthAction(PrivilegeType.DELETE_RULE)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;Long&gt; <span class="title">delete</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, <span class="string">&quot;id can&#x27;t be null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DegradeRuleEntity oldEntity = repository.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (oldEntity == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofSuccess(<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            repository.delete(id);</span><br><span class="line">            publishRules(oldEntity.getApp());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ofFail(-<span class="number">1</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.ofSuccess(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">publishRules</span><span class="params">(<span class="comment">/*@NonNull*/</span> String app)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;DegradeRuleEntity&gt; rules = repository.findAllByApp(app);</span><br><span class="line">        rulePublisher.publish(app, rules);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="热点，系统，权限规则"><a href="#热点，系统，权限规则" class="headerlink" title="热点，系统，权限规则"></a>热点，系统，权限规则</h3><p>改造方式和流控规则一样</p><h2 id="改造客户端"><a href="#改造客户端" class="headerlink" title="改造客户端"></a>改造客户端</h2><ol><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>添加配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9001</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">flow:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.server-addr&#125;</span></span><br><span class="line">            <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-flow-rules</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">flow</span></span><br><span class="line">        <span class="attr">degrade:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.server-addr&#125;</span></span><br><span class="line">            <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-degrade-rules</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">degrade</span></span><br><span class="line">        <span class="attr">param:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.server-addr&#125;</span></span><br><span class="line">            <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-param-rules</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">param-flow</span></span><br><span class="line">        <span class="attr">system:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.server-addr&#125;</span></span><br><span class="line">            <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-system-rules</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">system</span></span><br><span class="line">        <span class="attr">authority:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="string">$&#123;spring.cloud.nacos.server-addr&#125;</span></span><br><span class="line">            <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">SENTINEL_GROUP</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-authority-rules</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">authority</span></span><br></pre></td></tr></table></figure></li><li><p>添加初始化类，用于Sentinel规则持久化DataSource初始化，SentinelNacosDataSourceInit</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SentinelNacosDataSourceInit</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SentinelProperties sentinelProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取配置文件中的规则信息</span></span><br><span class="line">        Map&lt;String, DataSourcePropertiesConfiguration&gt; datasource = sentinelProperties.getDatasource();</span><br><span class="line">        <span class="keyword">if</span>(CollectionUtils.isEmpty(datasource)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        datasource.values().forEach(ds -&gt; &#123;</span><br><span class="line">            NacosDataSourceProperties nacosDsp = ds.getNacos();</span><br><span class="line">            <span class="keyword">if</span>(nacosDsp!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//获取规则类型</span></span><br><span class="line">                RuleType ruleType = nacosDsp.getRuleType();</span><br><span class="line">                <span class="keyword">switch</span> (ruleType) &#123;</span><br><span class="line">                    <span class="keyword">case</span> FLOW:</span><br><span class="line">                        ReadableDataSource&lt;String, List&lt;FlowRule&gt;&gt; flowRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(nacosDsp.getServerAddr(), nacosDsp.getGroupId(), nacosDsp.getDataId(),</span><br><span class="line">                                source -&gt; JSON.parseObject(source, <span class="keyword">new</span> TypeReference&lt;List&lt;FlowRule&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line">                        FlowRuleManager.register2Property(flowRuleDataSource.getProperty());</span><br><span class="line">                        log.info(<span class="string">&quot;Sentinel 流控规则注册完成......&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> DEGRADE:</span><br><span class="line">                        ReadableDataSource&lt;String, List&lt;DegradeRule&gt;&gt; degradeRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(nacosDsp.getServerAddr(), nacosDsp.getGroupId(), nacosDsp.getDataId(),</span><br><span class="line">                                source -&gt; JSON.parseObject(source, <span class="keyword">new</span> TypeReference&lt;List&lt;DegradeRule&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line">                        DegradeRuleManager.register2Property(degradeRuleDataSource.getProperty());</span><br><span class="line">                        log.info(<span class="string">&quot;Sentinel 降级规则注册完成......&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> PARAM_FLOW:</span><br><span class="line">                        ReadableDataSource&lt;String, List&lt;ParamFlowRule&gt;&gt; paramFlowRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(nacosDsp.getServerAddr(), nacosDsp.getGroupId(), nacosDsp.getDataId(),</span><br><span class="line">                                source -&gt; JSON.parseObject(source, <span class="keyword">new</span> TypeReference&lt;List&lt;ParamFlowRule&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line">                        ParamFlowRuleManager.register2Property(paramFlowRuleDataSource.getProperty());</span><br><span class="line">                        log.info(<span class="string">&quot;Sentinel 热点规则注册完成......&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> SYSTEM:</span><br><span class="line">                        ReadableDataSource&lt;String, List&lt;SystemRule&gt;&gt; systemRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(nacosDsp.getServerAddr(), nacosDsp.getGroupId(), nacosDsp.getDataId(),</span><br><span class="line">                                source -&gt; JSON.parseObject(source, <span class="keyword">new</span> TypeReference&lt;List&lt;SystemRule&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line">                        SystemRuleManager.register2Property(systemRuleDataSource.getProperty());</span><br><span class="line">                        log.info(<span class="string">&quot;Sentinel 系统规则注册完成......&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> AUTHORITY:</span><br><span class="line">                        ReadableDataSource&lt;String, List&lt;AuthorityRule&gt;&gt; authorityRuleDataSource = <span class="keyword">new</span> NacosDataSource&lt;&gt;(nacosDsp.getServerAddr(), nacosDsp.getGroupId(), nacosDsp.getDataId(),</span><br><span class="line">                                source -&gt; JSON.parseObject(source, <span class="keyword">new</span> TypeReference&lt;List&lt;AuthorityRule&gt;&gt;() &#123;</span><br><span class="line">                                &#125;));</span><br><span class="line">                        AuthorityRuleManager.register2Property(authorityRuleDataSource.getProperty());</span><br><span class="line">                        log.info(<span class="string">&quot;Sentinel 授权规则注册完成......&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><ol><li>启动nacos</li><li>启动客户端</li><li>启动Sentinel控制台</li><li>请求客户端的接口，在控制台修改流控配置，查看nacos是否同步更新，测试流控是否生效</li></ol><h2 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://gitee.com/aacopy/sentinel-dashboard.git">https://gitee.com/aacopy/sentinel-dashboard.git</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Sentinel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gateway-自定义负载均衡</title>
      <link href="/SpringCloud/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/SpringCloud/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><p>多人开发同一个微服务时，同时注册了多个相同的服务在注册中心上，通过网关调用服务时，不希望由自带的负载均衡路由，需要调到指定的服务，通过在请求头里加上version标识，在网关路由转发时，只要请求头里的标识和注册到nacos上的服务元数据内的标识匹配就路由到该服务</p><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><ol><li><p>首先为了避免新增或减少一个微服务，需要修改gateway的配置文件和重启服务，使用spring约定大于配置的思想，加上通用的服务发现配置，gateway自己根据请求的名称，去注册中心匹配对应的服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>重写负载均衡拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(name = &quot;env-dev&quot;, havingValue = &quot;true&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomLoadBalancerFilter</span> <span class="keyword">extends</span> <span class="title">LoadBalancerClientFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient nacosDiscoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomLoadBalancerFilter</span><span class="params">(LoadBalancerClient loadBalancer, LoadBalancerProperties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(loadBalancer, properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ServiceInstance <span class="title">choose</span><span class="params">(ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        HttpHeaders headers = exchange.getRequest().getHeaders();</span><br><span class="line">        String version = headers.getFirst(<span class="string">&quot;version&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isNotBlank(version)) &#123;</span><br><span class="line">            String serviceId = ((URI) exchange.getAttribute(GATEWAY_REQUEST_URL_ATTR)).getHost();</span><br><span class="line">            List&lt;ServiceInstance&gt; instances = nacosDiscoveryClient.getInstances(serviceId);</span><br><span class="line">            <span class="keyword">if</span>(instances != <span class="keyword">null</span> &amp;&amp; instances.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(ServiceInstance serviceInstance: instances) &#123;</span><br><span class="line">                    Map&lt;String, String&gt; metadata = serviceInstance.getMetadata();</span><br><span class="line">                    <span class="keyword">if</span>(metadata.containsKey(<span class="string">&quot;version&quot;</span>)) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(StringUtils.equals(version, metadata.get(<span class="string">&quot;version&quot;</span>))) &#123;</span><br><span class="line">                            <span class="keyword">return</span> serviceInstance;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.choose(exchange);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>解决问题的过程</p><ol><li><p>首先确定是需要修改负载均衡器</p></li><li><p>查看gateway的自动配置类<code>GatewayAutoConfiguration</code>,找到有一个<code>GatewayLoadBalancerClientAutoConfiguration</code>的负载均衡配置类</p><p><img src="/images/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/image-20220309234108585.png" alt="image-20220309234108585"></p></li><li><p>在负载均衡的配置类里，可以看到创建了一个<code>LoadBalancerClientFilter</code>的过滤器</p><p><img src="/images/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/image-20220309234122746.png" alt="image-20220309234122746"></p></li><li><p>查看过滤器类，其实就是一个全局过滤器的实现</p><p><img src="/images/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/image-20220309234135504.png" alt="image-20220309234135504"></p></li><li><p>通过debug，可以发现网关通过final ServiceInstance instance = choose(exchange);这段代码实现从服务列表里选出一个服务实例</p><p><img src="/images/Gateway-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/image-20220309234149014.png" alt="image-20220309234149014"></p></li><li><p>查看choose方法，发现刚好是protected，说明gateway本来就是留好了方便重写的入口，我们只需要继承这个过滤器<code>LoadBalancerClientFilter</code>，并且重写choose方法，就可以实现自定义的负载均衡。</p></li><li><p>添加<code>@ConditionalOnProperty(name = &quot;env-dev&quot;, havingValue = &quot;true&quot;)</code>这段代码主要是为了根据环境区分是否需要加载这个bean，在配置文件中配置了env-dev=true，就走自定义的负载均衡，不配做还是走原来的，不过这个类基本上也没有复杂逻辑，只要请求头里不加version，也不影响性能</p></li></ol></li></ol><h2 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://gitee.com/aacopy/gateway-test.git">https://gitee.com/aacopy/gateway-test.git</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenFeign-传递请求头</title>
      <link href="/SpringCloud/OpenFeign-%E4%BC%A0%E9%80%92%E8%AF%B7%E6%B1%82%E5%A4%B4/"/>
      <url>/SpringCloud/OpenFeign-%E4%BC%A0%E9%80%92%E8%AF%B7%E6%B1%82%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="openFeign向下传递请求头"><a href="#openFeign向下传递请求头" class="headerlink" title="openFeign向下传递请求头"></a>openFeign向下传递请求头</h2><p>OpenFeign在微服务间的调用向下传递请求头</p><p>思路：把请求头放在ThreadLocal里，feign调用时，把请求头取出来再传递给下个服务</p><p>方案：实现<code>RequestInterceptor</code>接口，该接口的作用是在feign调用时，给请求添加头信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignRequestInterceptor</span> <span class="keyword">implements</span> <span class="title">RequestInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(RequestTemplate template)</span> </span>&#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        Enumeration&lt;String&gt; headerNames = request.getHeaderNames();</span><br><span class="line">        <span class="keyword">if</span> (headerNames == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (headerNames.hasMoreElements()) &#123;</span><br><span class="line">            String name = headerNames.nextElement();</span><br><span class="line">            String values = request.getHeader(name);</span><br><span class="line">            template.header(name, values);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>从RequestContextHolder获取请求参数，内部就是通过ThreadLocal实现的</p><p><img src="/images/OpenFeign-%E4%BC%A0%E9%80%92%E8%AF%B7%E6%B1%82%E5%A4%B4/image-20220309234955480.png" alt="image-20220309234955480"></p></li></ul><h3 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h3><p><a href="https://gitee.com/aacopy/gateway-test.git">https://gitee.com/aacopy/gateway-test.git</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> OpenFeign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gateway-聚合swagger</title>
      <link href="/SpringCloud/Gateway-%E8%81%9A%E5%90%88swagger/"/>
      <url>/SpringCloud/Gateway-%E8%81%9A%E5%90%88swagger/</url>
      
        <content type="html"><![CDATA[<h2 id="gateway聚合微服务swagger"><a href="#gateway聚合微服务swagger" class="headerlink" title="gateway聚合微服务swagger"></a>gateway聚合微服务swagger</h2><p>参考：《重新定义Spring Cloud实战》</p><p>UI：knife4j</p><ol><li><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-bootstrap-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>因为swagger不支持webflux，不能在gateway里配置config，需要实现<code>SwaggerResourcesProvider</code>接口，用于获取<code>SwaggerResource</code>,此处参考书上的配置，一直获取不到swagger的API资源，主要是从配置文件读取路由节点时，一直为空，<code>gatewayProperties.getRoutes()</code>,测试发现当网关配置文件配置为从注册中心以服务发现方式获取路由资源时，获取不到，只有挨个配置route才可以获取到，不知道具体原因。</p><ul><li><p><del>参考书上的获取资源方式版本</del></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewaySwaggerProvider</span> <span class="keyword">implements</span> <span class="title">SwaggerResourcesProvider</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String API_URI = <span class="string">&quot;/v2/api-docs&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RouteLocator routeLocator;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> GatewayProperties gatewayProperties;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GatewaySwaggerProvider</span><span class="params">(RouteLocator routeLocator, GatewayProperties gatewayProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.routeLocator = routeLocator;</span><br><span class="line">        <span class="keyword">this</span>.gatewayProperties = gatewayProperties;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SwaggerResource&gt; <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;SwaggerResource&gt; resources = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; routes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取gateway中的route</span></span><br><span class="line">        routeLocator.getRoutes().subscribe(route -&gt; routes.add(route.getId()));</span><br><span class="line">        <span class="comment">//结合配置文件只获取有效route节点</span></span><br><span class="line">        gatewayProperties.getRoutes().stream().filter(routeDefinition -&gt; routes.contains(routeDefinition.getId())).forEach(route -&gt;</span><br><span class="line">                route.getPredicates().stream()</span><br><span class="line">                        .filter(predicateDefinition -&gt; (<span class="string">&quot;Path&quot;</span>).equalsIgnoreCase(predicateDefinition.getName()))</span><br><span class="line">                        .forEach(predicateDefinition -&gt; resources.add(swaggerResource(route.getId(),</span><br><span class="line">                                predicateDefinition.getArgs().get(NameUtils.GENERATED_NAME_PREFIX + <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                                        .replace(<span class="string">&quot;/**&quot;</span>, API_URI)))));</span><br><span class="line">        <span class="keyword">return</span> resources;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> SwaggerResource <span class="title">swaggerResource</span><span class="params">(String name, String location)</span> </span>&#123;</span><br><span class="line">        SwaggerResource swaggerResource = <span class="keyword">new</span> SwaggerResource();</span><br><span class="line">        swaggerResource.setName(name);</span><br><span class="line">        swaggerResource.setLocation(location);</span><br><span class="line">        swaggerResource.setSwaggerVersion(<span class="string">&quot;2.0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> swaggerResource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>这里需要改为通过服务发现的方式获取路由列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewaySwaggerProvider</span> <span class="keyword">implements</span> <span class="title">SwaggerResourcesProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String API_URI = <span class="string">&quot;/v2/api-docs&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String NACOS_ROUTE_ID_PREFIX = <span class="string">&quot;ReactiveCompositeDiscoveryClient_&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROUTE_ID_PREFIX = <span class="string">&quot;CompositeDiscoveryClient_&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DiscoveryClientRouteDefinitionLocator discoveryClientRouteDefinitionLocator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GatewaySwaggerProvider</span><span class="params">(DiscoveryClientRouteDefinitionLocator discoveryClientRouteDefinitionLocator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.discoveryClientRouteDefinitionLocator = discoveryClientRouteDefinitionLocator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;SwaggerResource&gt; <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;SwaggerResource&gt; resources = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取gateway中的route</span></span><br><span class="line">        Flux&lt;RouteDefinition&gt; routeDefinitions = discoveryClientRouteDefinitionLocator.getRouteDefinitions();</span><br><span class="line">        Flux&lt;SwaggerResource&gt; pattern = routeDefinitions.map(routeDefinition -&gt; swaggerResource(routeDefinition.getId().replace(NACOS_ROUTE_ID_PREFIX, <span class="string">&quot;&quot;</span>).replace(ROUTE_ID_PREFIX, <span class="string">&quot;&quot;</span>),</span><br><span class="line">                routeDefinition.getPredicates().get(<span class="number">0</span>).getArgs().get(<span class="string">&quot;pattern&quot;</span>).replace(<span class="string">&quot;/**&quot;</span>, API_URI)));</span><br><span class="line">        Disposable subscribe = pattern.subscribe(resources::add);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//最多锁10秒，10秒还没结果就返回空</span></span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">10000</span>) &#123;</span><br><span class="line">            <span class="comment">//查看任务是否已完成</span></span><br><span class="line">            <span class="keyword">if</span>(subscribe.isDisposed()) &#123;</span><br><span class="line">                <span class="keyword">return</span> resources;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//主动释放任务</span></span><br><span class="line">        subscribe.dispose();</span><br><span class="line">        <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> SwaggerResource <span class="title">swaggerResource</span><span class="params">(String name, String location)</span> </span>&#123;</span><br><span class="line">        SwaggerResource swaggerResource = <span class="keyword">new</span> SwaggerResource();</span><br><span class="line">        swaggerResource.setName(name);</span><br><span class="line">        swaggerResource.setLocation(location);</span><br><span class="line">        swaggerResource.setSwaggerVersion(<span class="string">&quot;2.0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> swaggerResource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建SwaggerHeaderFilter，主要是为了解决路由规则为admin/test/{a}/{b}时，缺少根节点admin的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerHeaderFilter</span> <span class="keyword">extends</span> <span class="title">AbstractGatewayFilterFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String HEADER_NAME = <span class="string">&quot;X-Forwarded-Prefix&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GatewayFilter <span class="title">apply</span><span class="params">(Object config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (exchange, chain) -&gt; &#123;</span><br><span class="line">            ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">            String path = request.getURI().getPath();</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.endsWithIgnoreCase(path, GatewaySwaggerProvider.API_URI)) &#123;</span><br><span class="line">                <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">            &#125;</span><br><span class="line">            String basePath = path.substring(<span class="number">0</span>, path.lastIndexOf(GatewaySwaggerProvider.API_URI));</span><br><span class="line">            ServerHttpRequest newRequest = request.mutate().header(HEADER_NAME, basePath).build();</span><br><span class="line">            ServerWebExchange newExchange = exchange.mutate().request(newRequest).build();</span><br><span class="line">            <span class="keyword">return</span> chain.filter(newExchange);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建swagger的访问入口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/swagger-resources&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> SecurityConfiguration securityConfiguration;</span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> UiConfiguration uiConfiguration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SwaggerResourcesProvider swaggerResources;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SwaggerController</span><span class="params">(SwaggerResourcesProvider swaggerResources)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.swaggerResources = swaggerResources;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/configuration/security&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;ResponseEntity&lt;SecurityConfiguration&gt;&gt; securityConfiguration() &#123;</span><br><span class="line">        <span class="keyword">return</span> Mono.just(<span class="keyword">new</span> ResponseEntity&lt;&gt;(</span><br><span class="line">                Optional.ofNullable(securityConfiguration).orElse(<span class="keyword">new</span> SecurityConfiguration(<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, ApiKeyVehicle.HEADER, <span class="string">&quot;api_key&quot;</span>, <span class="string">&quot;,&quot;</span>)), HttpStatus.OK));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/configuration/ui&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;ResponseEntity&lt;UiConfiguration&gt;&gt; uiConfiguration() &#123;</span><br><span class="line">        <span class="keyword">return</span> Mono.just(<span class="keyword">new</span> ResponseEntity&lt;&gt;(</span><br><span class="line">                Optional.ofNullable(uiConfiguration).orElse(<span class="keyword">new</span> UiConfiguration(<span class="keyword">null</span>)), HttpStatus.OK));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;ResponseEntity&gt; <span class="title">swaggerResources</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Mono.just((<span class="keyword">new</span> ResponseEntity&lt;&gt;(swaggerResources.get(), HttpStatus.OK)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>访问地址：网关ip:port/doc.html</p></li></ol><h2 id="代码地址"><a href="#代码地址" class="headerlink" title="代码地址"></a>代码地址</h2><p><a href="https://gitee.com/aacopy/gateway-test.git">https://gitee.com/aacopy/gateway-test.git</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Gateway </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RedisTemplate</title>
      <link href="/Redis/RedisTemplate/"/>
      <url>/Redis/RedisTemplate/</url>
      
        <content type="html"><![CDATA[<h2 id="redis连接池配置"><a href="#redis连接池配置" class="headerlink" title="redis连接池配置"></a>redis连接池配置</h2><ul><li>添加maven依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加配置文件，设置redis连接池</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">client-type:</span> <span class="string">jedis</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">aacopy.cn</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">jedis:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="comment"># 连接池最大连接数，默认为8</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">100</span></span><br><span class="line">        <span class="comment"># 最大空闲连接数, 默认为8</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">100</span></span><br><span class="line">        <span class="comment"># 最小空闲连接数，默认为0，设置最大最小相同，空间换时间，避免创建tcp握手耗时</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">100</span></span><br><span class="line">        <span class="comment"># 连接池最大阻塞等待时间，默认-1，表示没有限制</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">60000</span></span><br></pre></td></tr></table></figure><h2 id="设置序列化规则"><a href="#设置序列化规则" class="headerlink" title="设置序列化规则"></a>设置序列化规则</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;Object, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;Object, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        <span class="comment">//配置序列化规则</span></span><br><span class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</span><br><span class="line"></span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置key-value序列化规则</span></span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置hash-value序列化规则</span></span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-seata与事务消息</title>
      <link href="/Seata/Seata-seata%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/"/>
      <url>/Seata/Seata-seata%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<ul><li>分布式事务：<ul><li>刚性事务：强一致性（seata）</li><li>柔性事务：最终一致性（MQ事务消息）</li></ul></li></ul><h2 id="seata"><a href="#seata" class="headerlink" title="seata"></a>seata</h2><p>Seata 是一款开源的分布式事务解决方案，强一致性，要么同时成功，要么同时失败</p><p><img src="/images/Seata-seata%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/TB1rDpkJAvoK1RjSZPfXXXPKFXa-794-478.png" alt="TB1rDpkJAvoK1RjSZPfXXXPKFXa-794-478"></p><p>结合公司内部框架版本，集成seata</p><h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><ul><li>SpringCloud：Hoxton.SR3</li><li>SpringBoot：2.2.5.RELEASE</li><li>seata：1.1.0</li><li>nacos：1.2.1</li><li>mysql：5.7</li></ul><h3 id="服务端集成步骤"><a href="#服务端集成步骤" class="headerlink" title="服务端集成步骤"></a>服务端集成步骤</h3><h4 id="seata-server下载"><a href="#seata-server下载" class="headerlink" title="seata-server下载"></a>seata-server下载</h4><p>下载地址：<a href="https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.zip">https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.zip</a></p><h4 id="创建seata数据库及表"><a href="#创建seata数据库及表" class="headerlink" title="创建seata数据库及表"></a>创建seata数据库及表</h4><ul><li>数据库名为seata</li><li>创建表结构</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">-- -------------------------------- The script used when storeMode is &#x27;db&#x27; --------------------------------</span><br><span class="line">-- the table to store GlobalSession data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `global_table`</span><br><span class="line">(</span><br><span class="line">    `xid`                       VARCHAR(128) NOT NULL,</span><br><span class="line">    `transaction_id`            BIGINT,</span><br><span class="line">    `status`                    TINYINT      NOT NULL,</span><br><span class="line">    `application_id`            VARCHAR(32),</span><br><span class="line">    `transaction_service_group` VARCHAR(32),</span><br><span class="line">    `transaction_name`          VARCHAR(128),</span><br><span class="line">    `timeout`                   INT,</span><br><span class="line">    `begin_time`                BIGINT,</span><br><span class="line">    `application_data`          VARCHAR(2000),</span><br><span class="line">    `gmt_create`                DATETIME,</span><br><span class="line">    `gmt_modified`              DATETIME,</span><br><span class="line">    PRIMARY KEY (`xid`),</span><br><span class="line">    KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),</span><br><span class="line">    KEY `idx_transaction_id` (`transaction_id`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br><span class="line"></span><br><span class="line">-- the table to store BranchSession data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `branch_table`</span><br><span class="line">(</span><br><span class="line">    `branch_id`         BIGINT       NOT NULL,</span><br><span class="line">    `xid`               VARCHAR(128) NOT NULL,</span><br><span class="line">    `transaction_id`    BIGINT,</span><br><span class="line">    `resource_group_id` VARCHAR(32),</span><br><span class="line">    `resource_id`       VARCHAR(256),</span><br><span class="line">    `branch_type`       VARCHAR(8),</span><br><span class="line">    `status`            TINYINT,</span><br><span class="line">    `client_id`         VARCHAR(64),</span><br><span class="line">    `application_data`  VARCHAR(2000),</span><br><span class="line">    `gmt_create`        DATETIME(6),</span><br><span class="line">    `gmt_modified`      DATETIME(6),</span><br><span class="line">    PRIMARY KEY (`branch_id`),</span><br><span class="line">    KEY `idx_xid` (`xid`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br><span class="line"></span><br><span class="line">-- the table to store lock data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `lock_table`</span><br><span class="line">(</span><br><span class="line">    `row_key`        VARCHAR(128) NOT NULL,</span><br><span class="line">    `xid`            VARCHAR(96),</span><br><span class="line">    `transaction_id` BIGINT,</span><br><span class="line">    `branch_id`      BIGINT       NOT NULL,</span><br><span class="line">    `resource_id`    VARCHAR(256),</span><br><span class="line">    `table_name`     VARCHAR(32),</span><br><span class="line">    `pk`             VARCHAR(36),</span><br><span class="line">    `gmt_create`     DATETIME,</span><br><span class="line">    `gmt_modified`   DATETIME,</span><br><span class="line">    PRIMARY KEY (`row_key`),</span><br><span class="line">    KEY `idx_branch_id` (`branch_id`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br></pre></td></tr></table></figure><h4 id="服务端nacos配置文件"><a href="#服务端nacos配置文件" class="headerlink" title="服务端nacos配置文件"></a>服务端nacos配置文件</h4><ul><li>创建config.txt</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">store.mode</span>=<span class="string">db</span></span><br><span class="line"><span class="meta">store.db.datasource</span>=<span class="string">dbcp</span></span><br><span class="line"><span class="meta">store.db.dbType</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">store.db.driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">store.db.url</span>=<span class="string">jdbc:mysql://192.168.80.128:3306/seata?useUnicode=true</span></span><br><span class="line"><span class="meta">store.db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">store.db.password</span>=<span class="string">aacopy.cn</span></span><br></pre></td></tr></table></figure><ul><li>创建nacos-config.sh</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># Copyright 1999-2019 Seata.io Group.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at、</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;:h:p:g:t:&quot;</span> opt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">  h)</span><br><span class="line">    host=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  p)</span><br><span class="line">    port=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  g)</span><br><span class="line">    group=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  t)</span><br><span class="line">    tenant=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  ?)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; USAGE OPTION: <span class="variable">$0</span> [-h host] [-p port] [-g group] [-t tenant] &quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;host&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    host=localhost</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;port&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    port=8848</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;group&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    group=<span class="string">&quot;SEATA_GROUP&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;tenant&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    tenant=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nacosAddr=<span class="variable">$host</span>:<span class="variable">$port</span></span><br><span class="line">contentType=<span class="string">&quot;content-type:application/json;charset=UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set nacosAddr=<span class="variable">$nacosAddr</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set group=<span class="variable">$group</span>&quot;</span></span><br><span class="line"></span><br><span class="line">failCount=0</span><br><span class="line">tempLog=$(mktemp -u)</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">addConfig</span></span>() &#123;</span><br><span class="line">  curl -X POST -H <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> <span class="string">&quot;http://<span class="variable">$2</span>/nacos/v1/cs/configs?dataId=<span class="variable">$3</span>&amp;group=<span class="variable">$group</span>&amp;content=<span class="variable">$4</span>&amp;tenant=<span class="variable">$tenant</span>&quot;</span> &gt;<span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span> 2&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [[ -z $(cat <span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span>) ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; Please check the cluster status. &quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [[ $(cat <span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span>) =~ <span class="string">&quot;true&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Set <span class="variable">$3</span>=<span class="variable">$4</span> successfully &quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Set <span class="variable">$3</span>=<span class="variable">$4</span> failure &quot;</span></span><br><span class="line">    (( failCount++ ))</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> $(cat $(dirname <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>)/config.txt | sed s/[[:space:]]//g); <span class="keyword">do</span></span><br><span class="line">  (( count++ ))</span><br><span class="line">key=<span class="variable">$&#123;line%%=*&#125;</span></span><br><span class="line">  value=<span class="variable">$&#123;line#*=&#125;</span></span><br><span class="line">addConfig <span class="string">&quot;<span class="variable">$&#123;contentType&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;nacosAddr&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;key&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;value&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;=========================================================================&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; Complete initialization parameters,  total-count:<span class="variable">$count</span> ,  failure-count:<span class="variable">$failCount</span> &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;=========================================================================&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;failCount&#125;</span> -eq 0 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; Init nacos config finished, please start seata-server. &quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; init nacos config fail. &quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><ul><li>config.txt要放在nacos-config.sh的上一级目录里，可以和github上目录保持一致，将nacos-config.sh放在nacos目录下，config.txt放在和nacos同一级目录</li><li>在nacos-config.sh的目录中，右键打开git bash here</li><li>执行命令</li></ul><h4 id="修改seata-server配置文件registry-conf"><a href="#修改seata-server配置文件registry-conf" class="headerlink" title="修改seata-server配置文件registry.conf"></a>修改seata-server配置文件registry.conf</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">registry</span> <span class="string">&#123;</span></span><br><span class="line"><span class="comment">  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  <span class="attr">type</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nacos</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">serverAddr</span> = <span class="string">&quot;192.168.80.128:8848&quot;</span></span><br><span class="line">    <span class="attr">namespace</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">cluster</span> = <span class="string">&quot;default&quot;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">config</span> <span class="string">&#123;</span></span><br><span class="line"><span class="comment">  # file、nacos 、apollo、zk、consul、etcd3</span></span><br><span class="line">  <span class="attr">type</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nacos</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">serverAddr</span> = <span class="string">&quot;192.168.80.128:8848&quot;</span></span><br><span class="line">    <span class="attr">namespace</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">group</span> = <span class="string">&quot;SEATA_GROUP&quot;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="启动server"><a href="#启动server" class="headerlink" title="启动server"></a>启动server</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./seata-server.sh -h 192.168.80.128 -p 8091 &amp;</span><br></pre></td></tr></table></figure><h3 id="客户端集成步骤"><a href="#客户端集成步骤" class="headerlink" title="客户端集成步骤"></a>客户端集成步骤</h3><h4 id="新增数据库表"><a href="#新增数据库表" class="headerlink" title="新增数据库表"></a>新增数据库表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `undo_log`</span><br><span class="line">(</span><br><span class="line">    `id`            BIGINT(20)   NOT NULL AUTO_INCREMENT COMMENT &#x27;increment id&#x27;,</span><br><span class="line">    `branch_id`     BIGINT(20)   NOT NULL COMMENT &#x27;branch transaction id&#x27;,</span><br><span class="line">    `xid`           VARCHAR(100) NOT NULL COMMENT &#x27;global transaction id&#x27;,</span><br><span class="line">    `context`       VARCHAR(128) NOT NULL COMMENT &#x27;undo_log context,such as serialization&#x27;,</span><br><span class="line">    `rollback_info` LONGBLOB     NOT NULL COMMENT &#x27;rollback info&#x27;,</span><br><span class="line">    `log_status`    INT(11)      NOT NULL COMMENT &#x27;0:normal status,1:defense status&#x27;,</span><br><span class="line">    `log_created`   DATETIME     NOT NULL COMMENT &#x27;create datetime&#x27;,</span><br><span class="line">    `log_modified`  DATETIME     NOT NULL COMMENT &#x27;modify datetime&#x27;,</span><br><span class="line">    PRIMARY KEY (`id`),</span><br><span class="line">    UNIQUE KEY `ux_undo_log` (`xid`, `branch_id`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  AUTO_INCREMENT = 1</span><br><span class="line">  DEFAULT CHARSET = utf8 COMMENT =&#x27;AT transaction mode undo table&#x27;;</span><br></pre></td></tr></table></figure><h4 id="maven依赖"><a href="#maven依赖" class="headerlink" title="maven依赖"></a>maven依赖</h4><ul><li>添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>排除依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.quectel.web.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-common-log<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-sleuth<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="客户端配置文件"><a href="#客户端配置文件" class="headerlink" title="客户端配置文件"></a>客户端配置文件</h4><p>添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">seata:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">tx-service-group:</span> <span class="string">$&#123;spring.application.name&#125;_tx_group</span></span><br><span class="line">  <span class="attr">application-id:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure><h4 id="nacos添加配置文件"><a href="#nacos添加配置文件" class="headerlink" title="nacos添加配置文件"></a>nacos添加配置文件</h4><ul><li>Group： SEATA_GROUP</li><li>Data ID<ul><li>service.vgroupMapping.datacenter_tx_group</li><li>service.vgroupMapping.rule_tx_group</li></ul></li><li>配置内容：default</li></ul><p><img src="/images/Seata-seata%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/image-20220615152814025.png" alt="image-20220615152814025"></p><h4 id="添加注解-GlobalTransactional"><a href="#添加注解-GlobalTransactional" class="headerlink" title="添加注解@GlobalTransactional"></a>添加注解@GlobalTransactional</h4><p>在需要分布式事务的地方增加@GlobalTransactional注解，只需要在入口的服务上加，被rpc调用的服务可以不加</p><h3 id="集成完毕测试"><a href="#集成完毕测试" class="headerlink" title="集成完毕测试"></a>集成完毕测试</h3><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>优点：强一致性，要么同时成功，要么同时失败，不需要考虑失败后的数据补偿，集成简单，老代码改造容易</li><li>缺点：性能较低，通过锁表实现。</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>需要强制性，业务简单，</li><li>涉及到的表不多的情况</li><li>并发量不高的操作</li></ul><h4 id="版本问题"><a href="#版本问题" class="headerlink" title="版本问题"></a>版本问题</h4><p>当前最新版本1.4.2，在集成过程中会出现导致spring security oauth2的bean无法加载的报错，是官方bug，目前还没有正式版修复，只有补丁文件，可以参考：</p><p><a href="http://www.aacopy.cn/2022/02/08/Seata/Seata-Demo1.4.2/">http://www.aacopy.cn/2022/02/08/Seata/Seata-Demo1.4.2/</a></p><h4 id="Seata-OpenFeign问题"><a href="#Seata-OpenFeign问题" class="headerlink" title="Seata-OpenFeign问题"></a>Seata-OpenFeign问题</h4><ul><li>报错信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: ip</span><br></pre></td></tr></table></figure><ul><li><p>原因分析</p><ul><li>项目中同时引用了<code>spring-cloud-alibaba-seata</code> 和 <code>spring-cloud-starter-sleuth</code>两个依赖。</li><li>Sleuth 的配置类<code>TraceFeignClientAutoConfiguration</code> 和 Seata 的配置类 <code>SeataFeignClientAutoConfiguration</code> 都创建了 <code>FeignHystrixBuilder</code>的bean，导致spring加载时冲突</li></ul></li><li><p>解决方案</p><p>目前项目没有用到zipkin，sleuth，可以直接去掉该jar</p></li></ul><h4 id="更换默认版本"><a href="#更换默认版本" class="headerlink" title="更换默认版本"></a>更换默认版本</h4><ul><li><p>如果服务端和客户端的版本不一致，客户端会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[main] io.seata.core.rpc.netty.NettyClientChannelManager 170 no available service &#x27;default&#x27; found, please make sure registry config correct</span><br></pre></td></tr></table></figure></li><li><p>需要指定版本</p><ul><li><p>在根pom中增加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在子模块pom中增加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="事务消息"><a href="#事务消息" class="headerlink" title="事务消息"></a>事务消息</h2><p>通过消息中间件，进行解耦，只需要保证“本地事务”和“消息提交到MQ”两者同时成功或者失败，客户端在接收到消息后再做相应的业务处理，如果成功就标记消息消费成功，如果失败，进行重试或者数据补偿操作。只需要对业务数据保证最终的一致性即可。以RocketMQ为例</p><h3 id="版本信息-1"><a href="#版本信息-1" class="headerlink" title="版本信息"></a>版本信息</h3><p>RocketMQ：4.9.2</p><h3 id="服务端集成步骤-1"><a href="#服务端集成步骤-1" class="headerlink" title="服务端集成步骤"></a>服务端集成步骤</h3><h4 id="服务端下载"><a href="#服务端下载" class="headerlink" title="服务端下载"></a>服务端下载</h4><p>二进制文件下载：<a href="https://dlcdn.apache.org/rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip">https://dlcdn.apache.org/rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip</a></p><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup sh bin/mqnamesrv &amp;</span><br><span class="line">nohup sh bin/mqbroker -n localhost:9876 &amp;</span><br></pre></td></tr></table></figure><h4 id="可视化控制台安装"><a href="#可视化控制台安装" class="headerlink" title="可视化控制台安装"></a>可视化控制台安装</h4><p>github:<a href="https://github.com/apache/rocketmq-externals">https://github.com/apache/rocketmq-externals</a></p><p>安装文档：<a href="https://rocketmq-1.gitbook.io/rocketmq-connector/rocketmq-connect/rocketmq-console/an-zhuang-shi-yong">https://rocketmq-1.gitbook.io/rocketmq-connector/rocketmq-connect/rocketmq-console/an-zhuang-shi-yong</a></p><p>docker安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:8080 --name rocketmq-console-ng \</span><br><span class="line">-e &quot;JAVA_OPTS=-Drocketmq.namesrv.addr=192.168.80.128:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot; \</span><br><span class="line">-d styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><h3 id="客户端集成"><a href="#客户端集成" class="headerlink" title="客户端集成"></a>客户端集成</h3><h4 id="maven依赖-1"><a href="#maven依赖-1" class="headerlink" title="maven依赖"></a>maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.rocketmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rocketmq-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;rocketmq.spring.boot.starter.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">rocketmq.name-server</span>=<span class="string">192.168.80.128:9876</span></span><br><span class="line"><span class="meta">rocketmq.producer.group</span>=<span class="string">my-group</span></span><br></pre></td></tr></table></figure><h3 id="通过普通消息ACK机制实现"><a href="#通过普通消息ACK机制实现" class="headerlink" title="通过普通消息ACK机制实现"></a>通过普通消息ACK机制实现</h3><h4 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h4><p>在生产者端，通过返回值SendResult获取消息发送状态，如果是OK，说明发送成功，提交本地事务，如果失败，抛出异常，回滚本地事务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SendResult sendResult = rocketMQTemplate.syncSend(<span class="string">&quot;test-topic-1&quot;</span>, MessageBuilder.withPayload(<span class="string">&quot;Hello&quot;</span>).build());</span><br><span class="line"><span class="keyword">if</span>(sendResult.getSendStatus() ==  SendStatus.SEND_OK) &#123;</span><br><span class="line"><span class="comment">//消息发送成功</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;消息发送异常&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h4><p>在消费者端，通过ACK机制，在成功消费消息后，手动确认消息已被消费，如果消费失败，这不确认，进行重试操作，或者通过数据补偿来保证数据一致性，通过将异常消息保存到数据库，然后成功消费消息，人工干预处理。在消费者端为了避免重复消费，需要做幂等处理</p><ul><li>redis，通过setNX或者incr原子操作，确定消息已经被消费</li><li>数据库将消息id作为唯一索引</li></ul><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>普通的消息已经基本满足业务分布式事务需求，只要做好消息幂等处理即可，考虑到异常情况：</p><ul><li>在发送消费到MQ后，服务器宕机了，然后本地事务被回滚，但是消息已经被发送到MQ，这种情况就没有保证本地事务和消息的一致性</li></ul><h3 id="事务消息-1"><a href="#事务消息-1" class="headerlink" title="事务消息"></a>事务消息</h3><p><a href="https://rocketmq.apache.org/rocketmq/the-design-of-transactional-message/">https://rocketmq.apache.org/rocketmq/the-design-of-transactional-message/</a></p><p><img src="/images/Seata-seata%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/transaction-execute-flow.png" alt="screenshot"></p><ul><li>事务消息在一阶段对用户不可见</li><li>在本地事务执行完成后会向MQServer发送Commit或Rollback操作，此时如果在发送消息的时候生产者出故障了，那么要保证这条消息最终被消费，MQServer会像服务端发送回查请求，确认本地事务的执行状态</li></ul><h4 id="生产者集成步骤"><a href="#生产者集成步骤" class="headerlink" title="生产者集成步骤"></a>生产者集成步骤</h4><p>事务入口，改为消息事务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TransactionSendResult transactionSendResult = rocketMQTemplate.sendMessageInTransaction(<span class="string">&quot;rocketmq-learn:order-create&quot;</span>, MessageBuilder.withPayload(orderRequest).build(), orderRequest);</span><br><span class="line">        <span class="keyword">if</span>(SendStatus.SEND_OK == transactionSendResult.getSendStatus()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(LocalTransactionState.COMMIT_MESSAGE == transactionSendResult.getLocalTransactionState()) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;订单服务下单成功&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LocalTransactionState.ROLLBACK_MESSAGE == transactionSendResult.getLocalTransactionState()) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;订单服务下单失败&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LocalTransactionState.UNKNOW == transactionSendResult.getLocalTransactionState())&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;warn&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>创建listener监听事务消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.rocketmq.order.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.rocketmq.order.entity.OrderRequest;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.rocketmq.order.service.OrderService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.spring.annotation.RocketMQTransactionListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.spring.core.RocketMQLocalTransactionListener;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.spring.core.RocketMQLocalTransactionState;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.spring.support.RocketMQHeaders;</span><br><span class="line"><span class="keyword">import</span> org.apache.rocketmq.spring.support.RocketMQUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.MessageHeaders;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/14 0:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RocketMQTransactionListener</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionListener</span> <span class="keyword">implements</span> <span class="title">RocketMQLocalTransactionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RocketMQLocalTransactionState <span class="title">executeLocalTransaction</span><span class="params">(Message msg, Object arg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;&quot;</span>, msg);</span><br><span class="line">        log.info(<span class="string">&quot;开始执行本地事务...&quot;</span>);</span><br><span class="line">        MessageHeaders headers = msg.getHeaders();</span><br><span class="line">        <span class="comment">//获取事务id</span></span><br><span class="line">        String transactionId = (String) headers.get(RocketMQUtil.toRocketHeaderKey(RocketMQHeaders.TRANSACTION_ID));</span><br><span class="line">        <span class="comment">//获取tags</span></span><br><span class="line">        String tags = (String) headers.get(RocketMQUtil.toRocketHeaderKey(RocketMQHeaders.TAGS));</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.equals(tags, <span class="string">&quot;order-create&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                orderService.create((OrderRequest) arg, transactionId);</span><br><span class="line">                log.info(<span class="string">&quot;本地事务执行成功&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> RocketMQLocalTransactionState.COMMIT;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;本地事务异常&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> RocketMQLocalTransactionState.ROLLBACK;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> RocketMQLocalTransactionState.UNKNOWN;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RocketMQLocalTransactionState <span class="title">checkLocalTransaction</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;检查本地事务状态&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;&quot;</span>, msg);</span><br><span class="line">        <span class="comment">//查询数据库确定本地事务是否正常提交了</span></span><br><span class="line">        <span class="keyword">return</span> RocketMQLocalTransactionState.COMMIT;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>事务日志记录要和业务操作放在同一个事务里提交</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OrderDO <span class="title">create</span><span class="params">(OrderRequest orderRequest, String transactionId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//减少账户余额</span></span><br><span class="line">        <span class="keyword">int</span> orderMoney = calculate(orderRequest.getCommodityCode(), orderRequest.getOrderCount());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建订单</span></span><br><span class="line">        OrderDO orderDO = <span class="keyword">new</span> OrderDO();</span><br><span class="line">        orderDO.setUserId(orderRequest.getUserId());</span><br><span class="line">        orderDO.setCommodityCode(orderRequest.getCommodityCode());</span><br><span class="line">        orderDO.setCount(orderRequest.getOrderCount());</span><br><span class="line">        orderDO.setMoney(orderMoney);</span><br><span class="line">        save(orderDO);</span><br><span class="line"></span><br><span class="line">        TransactionLogDO transactionLogDO = <span class="keyword">new</span> TransactionLogDO();</span><br><span class="line">        transactionLogDO.setTransactionId(transactionId);</span><br><span class="line">        transactionLogMapper.insert(transactionLogDO);</span><br><span class="line"><span class="comment">//        int i=1/0;</span></span><br><span class="line">        <span class="keyword">return</span> orderDO;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>消费者端和消费普通消息一样</p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><h4 id="优缺点："><a href="#优缺点：" class="headerlink" title="优缺点："></a>优缺点：</h4><ul><li>优点：事务消息将feign改为异步调用，大大提高了性能，保证数据最终一致</li><li>缺点：本地事务一旦提交，是无法回滚的，如果需要回滚数据，需要根据具体业务做数据补偿，幂等处理，对老项目加入分布式事务要求较高，需要根据具体业务分析，异常情况的处理，公司项目基本都带了用户信息请求，如果改为消息，需要将用户信息带到消息内，并改造框架底层获取用户信息方法</li></ul>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-命令</title>
      <link href="/Git/Git-%E5%91%BD%E4%BB%A4/"/>
      <url>/Git/Git-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><ul><li><p>git –help</p><p>git帮助文档</p></li><li><p>git –version</p><p>查看git版本</p></li><li><p>git init</p><p>创建空的本地仓库</p></li><li><p>git add</p><p>将文件添加到暂存区</p></li><li><p>git config –global user.email “<a href="mailto:&#x79;&#111;&#117;&#x40;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;">&#x79;&#111;&#117;&#x40;&#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a>“</p></li><li><p>git config –global user.name “Your Name”</p><p>配置邮箱及用户名</p></li><li><p>git commit -m “xxx”</p><p>将暂存区提交到本地仓库</p></li><li><p>git remote add origin <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#x65;&#x65;&#x2e;&#99;&#111;&#x6d;">&#103;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#x65;&#x65;&#x2e;&#99;&#111;&#x6d;</a>:aacopy/xxx.git</p><p>关联本地仓库和名称为origin远程仓库</p></li><li><p>git push -u origin master</p><p>将变更推送到名称为origin的远程仓库的master分支上</p></li><li><p>git fetch</p><p>拉去远程仓库的变更到本地仓库</p></li><li><p>git merge origin/master</p><p>将远程的变更，合并到本地的master分支</p></li><li><p>git pull</p><p>等于上面两个命令的合并</p></li><li><p>git status</p><p>查看git上变更的文件状态</p></li><li><p>git rm xxx</p><p>删除工作区的文件，并提交到暂存区</p></li><li><p>git rm –catch xxx</p><p>仅删除暂存区的文件</p></li><li><p>git checkout xxx</p><p>从暂存区将文件恢复的工作区，有文件则覆盖</p></li><li><p>git checkout master xxx</p><p>从master分支恢复文件到本地</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ-SpringBoot</title>
      <link href="/RocketMQ/RocketMQ-SpringBoot/"/>
      <url>/RocketMQ/RocketMQ-SpringBoot/</url>
      
        <content type="html"><![CDATA[<h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><p>RocketMQ 4.9.2</p><p>JDK 1.8</p>]]></content>
      
      
      <categories>
          
          <category> RocketMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ-安装</title>
      <link href="/RocketMQ/RocketMQ-%E5%AE%89%E8%A3%85/"/>
      <url>/RocketMQ/RocketMQ-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><ul><li><p>RocketMQ 4.9.2</p></li><li><p>JDK 1.8</p></li><li><p>CentOS 7</p></li></ul><p>以下为官方推荐</p><blockquote><ol><li>64bit OS, Linux/Unix/Mac is recommended;(Windows user see guide below)</li><li>64bit JDK 1.8+;</li><li>Maven 3.2.x;</li><li>Git;</li><li>4g+ free disk for Broker server</li></ol></blockquote><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><ul><li><p>下载页面：<a href="https://rocketmq.apache.org/dowloading/releases/">https://rocketmq.apache.org/dowloading/releases/</a></p></li><li><p>二进制文件下载：<a href="https://dlcdn.apache.org/rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip">https://dlcdn.apache.org/rocketmq/4.9.2/rocketmq-all-4.9.2-bin-release.zip</a></p></li></ul><p>将下载的文件上传到服务器，解压</p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>注意事项：</p><p>如果是非生产环境，本地测试，如果本地服务器的内容不够，会启动报错<code>error=&#39;Cannot allocate memory&#39;</code>,需要先调整启动参数</p><ul><li><p><code>nameServer</code></p><ul><li>默认配置需要4G内存</li><li>本地学习测试修改为256M</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; vim bin/runserver.sh</span><br></pre></td></tr></table></figure><ul><li>找到<code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms4g -Xmx4g -Xmn2g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</code></li><li>修改为<code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</code></li></ul></li><li><p><code>broker</code></p><ul><li>默认配置需要8G内存</li><li>本地学习测试修改为512M</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; vim bin/runbroker.sh</span><br></pre></td></tr></table></figure><ul><li>找到<code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms8g -Xmx8g</code></li><li>修改为<code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms512m -Xmx512m&quot;</code></li></ul></li></ul><h3 id="启动nameServer"><a href="#启动nameServer" class="headerlink" title="启动nameServer"></a>启动<code>nameServer</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; nohup sh bin/mqnamesrv &amp;</span><br><span class="line">&gt; tail -f ~/logs/rocketmqlogs/namesrv.log</span><br><span class="line">The Name Server boot success. serializeType=JSON</span><br></pre></td></tr></table></figure><p>提示<code>The Name Server boot success. serializeType=JSON</code>启动成功</p><h3 id="启动broker"><a href="#启动broker" class="headerlink" title="启动broker"></a>启动<code>broker</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; nohup sh bin/mqbroker -n localhost:9876 &amp;</span><br><span class="line">&gt; tail -f ~/logs/rocketmqlogs/broker.log</span><br><span class="line">main - The broker[localhost.localdomain, 172.17.0.1:10911] boot success. serializeType=JSON and name server is localhost:9876</span><br></pre></td></tr></table></figure><h2 id="发送消费消息测试"><a href="#发送消费消息测试" class="headerlink" title="发送消费消息测试"></a>发送消费消息测试</h2><ul><li>发送消息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">export</span> NAMESRV_ADDR=localhost:9876</span><br><span class="line">&gt; sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer</span><br><span class="line">SendResult [sendStatus=SEND_OK, msgId= ...</span><br></pre></td></tr></table></figure><ul><li>消费消息</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer</span><br><span class="line">ConsumeMessageThread_6 Receive New Messages: [MessageExt ...</span><br></pre></td></tr></table></figure><h2 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; sh bin/mqshutdown broker</span><br><span class="line"></span><br><span class="line">&gt; sh bin/mqshutdown namesrv</span><br></pre></td></tr></table></figure><h2 id="可视化控制台安装"><a href="#可视化控制台安装" class="headerlink" title="可视化控制台安装"></a>可视化控制台安装</h2><p>github:<a href="https://github.com/apache/rocketmq-externals">https://github.com/apache/rocketmq-externals</a></p><p>安装文档：<a href="https://rocketmq-1.gitbook.io/rocketmq-connector/rocketmq-connect/rocketmq-console/an-zhuang-shi-yong">https://rocketmq-1.gitbook.io/rocketmq-connector/rocketmq-connect/rocketmq-console/an-zhuang-shi-yong</a></p><h3 id="docker安装rocketmq-console-ng"><a href="#docker安装rocketmq-console-ng" class="headerlink" title="docker安装rocketmq-console-ng"></a>docker安装<code>rocketmq-console-ng</code></h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> -p 8080:8080 --name rocketmq-console-ng \</span></span><br><span class="line"><span class="bash">-e <span class="string">&quot;JAVA_OPTS=-Drocketmq.namesrv.addr=192.168.80.128:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot;</span> \</span></span><br><span class="line"><span class="bash">-d styletang/rocketmq-console-ng</span></span><br></pre></td></tr></table></figure><ul><li>访问地址：<a href="http://192.168.80.128:8080/">http://192.168.80.128:8080/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> RocketMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ-HelloWorld</title>
      <link href="/RocketMQ/RocketMQ-HelloWorld/"/>
      <url>/RocketMQ/RocketMQ-HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Apache RocketMQ作为阿里开源的一款高性能、高吞吐量的分布式消息中间件</p><p>官网地址：<a href="https://rocketmq.apache.org/">https://rocketmq.apache.org/</a></p><p>github：<a href="https://github.com/apache/rocketmq">https://github.com/apache/rocketmq</a></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>支持Broker和Consumer端消息过滤</li><li>支持发布订阅模型，和点对点，</li><li>支持拉pull和推push两种消息模式</li><li>单一队列百万消息、亿级消息堆积</li><li>支持单master节点，多master节点，多master多slave节点</li><li>任意一点都是高可用，水平拓展，Producer、Consumer、队列都可以分布式</li><li>消息失败重试机制、支持特定level的定时消息</li><li>4.3.x支持分布式事务</li><li>适合金融类业务，高可用性跟踪和审计功能。</li></ul><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li><p>Producer:消息生产者</p></li><li><p>Producer Group:消息生产者组，发送同类消息的一个消息生产组</p></li><li><p>Consumer:消费者</p></li><li><p>Consumer Group:消费同类消息的多个实例</p></li><li><p>Tag:标签，子主题（二级分类）对topic的进一步细化,用于区分同一个主题下的不同业务的消息</p></li><li><p>Topic:主题, 如订单类消息，queue是消息的物理管理单位，而topic是逻辑管理单位。一个topic下可以有多个queue。</p><p>默认自动创建是4个，手动创建是8个</p></li><li><p>Message：消息,每个message必须指定一个topic</p></li><li><p>Broker：MQ程序，接收生产的消息，提供给消费者消费的程序</p></li><li><p>Name Server：给生产和消费者提供路由信息，提供轻量级的服务发现、路由、元数据信息，可以多个部署，互相独立（比zookeeper更轻量）</p></li><li><p>Offset: 偏移量，消费位置</p></li><li><p>commit log: 消息存储会写在Commit log文件里面</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> RocketMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-OpenFeign问题</title>
      <link href="/Seata/Seata-OpenFeign%E9%97%AE%E9%A2%98/"/>
      <url>/Seata/Seata-OpenFeign%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: ip</span><br></pre></td></tr></table></figure><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><ul><li><p>项目中同时引用了<code>spring-cloud-alibaba-seata</code> 和 <code>spring-cloud-starter-sleuth</code>两个依赖。</p></li><li><p>Sleuth 的配置类<code>TraceFeignClientAutoConfiguration</code> 和 Seata 的配置类 <code>SeataFeignClientAutoConfiguration</code> 都创建了 <code>FeignHystrixBuilder</code>的bean，导致spring加载时冲突</p></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><ul><li>在springboot启动类上排除SeataFeign配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;SeataFeignClientAutoConfiguration.class&#125;)</span></span><br></pre></td></tr></table></figure><ul><li>使用自定义拦截器传递XID</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123;RequestInterceptor.class, GlobalTransactional.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SeataFeignInterceptor</span> <span class="keyword">implements</span> <span class="title">RequestInterceptor</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(RequestTemplate template)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        String currentXid = RootContext.getXID();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(currentXid)) &#123;</span><br><span class="line">    </span><br><span class="line">            template.header(RootContext.KEY_XID, currentXid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ul><li>如果没有用到<code>zipkin</code>，<code>sleuth</code>，可以排除掉maven中的相关依赖</li></ul>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-Demo1.1.0</title>
      <link href="/Seata/Seata-Demo1.1.0/"/>
      <url>/Seata/Seata-Demo1.1.0/</url>
      
        <content type="html"><![CDATA[<p>seata1.1.0版本Demo，主要为了适配公司框架版本</p><h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><ul><li>seata 版本 1.1.0</li><li>mysql 版本 5.7</li><li>nacos 版本 1.2.1</li><li>SpringCloud 版本  ，AlibabaCloud 版本 </li></ul><h3 id="seata-server下载"><a href="#seata-server下载" class="headerlink" title="seata-server下载"></a>seata-server下载</h3><p>下载地址：<a href="https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.zip">https://github.com/seata/seata/releases/download/v1.1.0/seata-server-1.1.0.zip</a></p><h2 id="创建seata数据库及表"><a href="#创建seata数据库及表" class="headerlink" title="创建seata数据库及表"></a>创建seata数据库及表</h2><h3 id="创建seata数据库"><a href="#创建seata数据库" class="headerlink" title="创建seata数据库"></a>创建seata数据库</h3><p>数据库名为seata</p><h3 id="创建表结构"><a href="#创建表结构" class="headerlink" title="创建表结构"></a>创建表结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">-- -------------------------------- The script used when storeMode is &#x27;db&#x27; --------------------------------</span><br><span class="line">-- the table to store GlobalSession data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `global_table`</span><br><span class="line">(</span><br><span class="line">    `xid`                       VARCHAR(128) NOT NULL,</span><br><span class="line">    `transaction_id`            BIGINT,</span><br><span class="line">    `status`                    TINYINT      NOT NULL,</span><br><span class="line">    `application_id`            VARCHAR(32),</span><br><span class="line">    `transaction_service_group` VARCHAR(32),</span><br><span class="line">    `transaction_name`          VARCHAR(128),</span><br><span class="line">    `timeout`                   INT,</span><br><span class="line">    `begin_time`                BIGINT,</span><br><span class="line">    `application_data`          VARCHAR(2000),</span><br><span class="line">    `gmt_create`                DATETIME,</span><br><span class="line">    `gmt_modified`              DATETIME,</span><br><span class="line">    PRIMARY KEY (`xid`),</span><br><span class="line">    KEY `idx_gmt_modified_status` (`gmt_modified`, `status`),</span><br><span class="line">    KEY `idx_transaction_id` (`transaction_id`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br><span class="line"></span><br><span class="line">-- the table to store BranchSession data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `branch_table`</span><br><span class="line">(</span><br><span class="line">    `branch_id`         BIGINT       NOT NULL,</span><br><span class="line">    `xid`               VARCHAR(128) NOT NULL,</span><br><span class="line">    `transaction_id`    BIGINT,</span><br><span class="line">    `resource_group_id` VARCHAR(32),</span><br><span class="line">    `resource_id`       VARCHAR(256),</span><br><span class="line">    `branch_type`       VARCHAR(8),</span><br><span class="line">    `status`            TINYINT,</span><br><span class="line">    `client_id`         VARCHAR(64),</span><br><span class="line">    `application_data`  VARCHAR(2000),</span><br><span class="line">    `gmt_create`        DATETIME(6),</span><br><span class="line">    `gmt_modified`      DATETIME(6),</span><br><span class="line">    PRIMARY KEY (`branch_id`),</span><br><span class="line">    KEY `idx_xid` (`xid`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br><span class="line"></span><br><span class="line">-- the table to store lock data</span><br><span class="line">CREATE TABLE IF NOT EXISTS `lock_table`</span><br><span class="line">(</span><br><span class="line">    `row_key`        VARCHAR(128) NOT NULL,</span><br><span class="line">    `xid`            VARCHAR(96),</span><br><span class="line">    `transaction_id` BIGINT,</span><br><span class="line">    `branch_id`      BIGINT       NOT NULL,</span><br><span class="line">    `resource_id`    VARCHAR(256),</span><br><span class="line">    `table_name`     VARCHAR(32),</span><br><span class="line">    `pk`             VARCHAR(36),</span><br><span class="line">    `gmt_create`     DATETIME,</span><br><span class="line">    `gmt_modified`   DATETIME,</span><br><span class="line">    PRIMARY KEY (`row_key`),</span><br><span class="line">    KEY `idx_branch_id` (`branch_id`)</span><br><span class="line">) ENGINE = InnoDB</span><br><span class="line">  DEFAULT CHARSET = utf8;</span><br></pre></td></tr></table></figure><h2 id="服务端nacos配置文件"><a href="#服务端nacos配置文件" class="headerlink" title="服务端nacos配置文件"></a>服务端nacos配置文件</h2><p>nacos启动命令里不能加<code>NACOS_AUTH_ENABLE=true</code>，不然会报错</p><ul><li><p>复制config.txt文件到本地</p><ul><li><a href="https://github.com/seata/seata/blob/1.1.0/script/config-center/config.txt">https://github.com/seata/seata/blob/1.1.0/script/config-center/config.txt</a></li></ul></li><li><p>复制nacos-config.sh文件到本地，此处注意：如果使用1.1.0版本的nacos-config，报错，导入失败，使用1.2.0的可以</p><ul><li><a href="https://github.com/seata/seata/blob/1.2.0/script/config-center/nacos/nacos-config.sh">https://github.com/seata/seata/blob/1.2.0/script/config-center/nacos/nacos-config.sh</a></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment"># Copyright 1999-2019 Seata.io Group.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at、</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;:h:p:g:t:&quot;</span> opt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">  h)</span><br><span class="line">    host=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  p)</span><br><span class="line">    port=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  g)</span><br><span class="line">    group=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  t)</span><br><span class="line">    tenant=<span class="variable">$OPTARG</span></span><br><span class="line">    ;;</span><br><span class="line">  ?)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; USAGE OPTION: <span class="variable">$0</span> [-h host] [-p port] [-g group] [-t tenant] &quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">    ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;host&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    host=localhost</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;port&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    port=8848</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;group&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    group=<span class="string">&quot;SEATA_GROUP&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$&#123;tenant&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    tenant=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">nacosAddr=<span class="variable">$host</span>:<span class="variable">$port</span></span><br><span class="line">contentType=<span class="string">&quot;content-type:application/json;charset=UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set nacosAddr=<span class="variable">$nacosAddr</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set group=<span class="variable">$group</span>&quot;</span></span><br><span class="line"></span><br><span class="line">failCount=0</span><br><span class="line">tempLog=$(mktemp -u)</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">addConfig</span></span>() &#123;</span><br><span class="line">  curl -X POST -H <span class="string">&quot;<span class="variable">$&#123;1&#125;</span>&quot;</span> <span class="string">&quot;http://<span class="variable">$2</span>/nacos/v1/cs/configs?dataId=<span class="variable">$3</span>&amp;group=<span class="variable">$group</span>&amp;content=<span class="variable">$4</span>&amp;tenant=<span class="variable">$tenant</span>&quot;</span> &gt;<span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span> 2&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [[ -z $(cat <span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span>) ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; Please check the cluster status. &quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [[ $(cat <span class="string">&quot;<span class="variable">$&#123;tempLog&#125;</span>&quot;</span>) =~ <span class="string">&quot;true&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Set <span class="variable">$3</span>=<span class="variable">$4</span> successfully &quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Set <span class="variable">$3</span>=<span class="variable">$4</span> failure &quot;</span></span><br><span class="line">    (( failCount++ ))</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count=0</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> $(cat $(dirname <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>)/config.txt | sed s/[[:space:]]//g); <span class="keyword">do</span></span><br><span class="line">  (( count++ ))</span><br><span class="line">key=<span class="variable">$&#123;line%%=*&#125;</span></span><br><span class="line">  value=<span class="variable">$&#123;line#*=&#125;</span></span><br><span class="line">addConfig <span class="string">&quot;<span class="variable">$&#123;contentType&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;nacosAddr&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;key&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;value&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;=========================================================================&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; Complete initialization parameters,  total-count:<span class="variable">$count</span> ,  failure-count:<span class="variable">$failCount</span> &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;=========================================================================&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;failCount&#125;</span> -eq 0 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; Init nacos config finished, please start seata-server. &quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; init nacos config fail. &quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>config.txt中的内容很多是不需要的，加入以下仅需要的内容</p></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">store.mode</span>=<span class="string">db</span></span><br><span class="line"><span class="meta">store.db.datasource</span>=<span class="string">dbcp</span></span><br><span class="line"><span class="meta">store.db.dbType</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">store.db.driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">store.db.url</span>=<span class="string">jdbc:mysql://192.168.80.128:3306/seata?useUnicode=true</span></span><br><span class="line"><span class="meta">store.db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">store.db.password</span>=<span class="string">aacopy.cn</span></span><br></pre></td></tr></table></figure><ul><li>config.txt要放在nacos-config.sh的上一级目录里，可以和github上目录保持一致，将nacos-config.sh放在nacos目录下，config.txt放在和nacos同一级目录</li><li>在nacos-config.sh的目录中，右键打开git bash here</li><li>执行命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./nacos-config.sh -h 192.168.80.128</span><br></pre></td></tr></table></figure><h2 id="修改seata-server配置文件"><a href="#修改seata-server配置文件" class="headerlink" title="修改seata-server配置文件"></a>修改seata-server配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span><br><span class="line">  type = &quot;nacos&quot;</span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = &quot;192.168.80.128:8848&quot;</span><br><span class="line">    namespace = &quot;&quot;</span><br><span class="line">    cluster = &quot;default&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">config &#123;</span><br><span class="line">  # file、nacos 、apollo、zk、consul、etcd3</span><br><span class="line">  type = &quot;nacos&quot;</span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = &quot;192.168.80.128:8848&quot;</span><br><span class="line">    namespace = &quot;&quot;</span><br><span class="line">    group = &quot;SEATA_GROUP&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="启动server"><a href="#启动server" class="headerlink" title="启动server"></a>启动server</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./seata-server.sh -h 192.168.80.128 -p 8091 &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-Demo1.3.0</title>
      <link href="/Seata/Seata-Demo1.3.0/"/>
      <url>/Seata/Seata-Demo1.3.0/</url>
      
        <content type="html"><![CDATA[<p>seata1.3.0版本Demo</p><h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><ul><li>seata 版本 1.3.0</li><li>mysql 版本 8.0</li><li>nacos 版本 2.0.2</li><li>SpringCloud 版本 2020.0.4 ，AlibabaCloud 版本 2021.1</li></ul><h3 id="seata-server下载"><a href="#seata-server下载" class="headerlink" title="seata-server下载"></a>seata-server下载</h3><p>下载地址：<a href="https://github.com/seata/seata/releases/download/v1.3.0/seata-server-1.3.0.zip">https://github.com/seata/seata/releases/download/v1.3.0/seata-server-1.3.0.zip</a></p><h2 id="服务端nacos配置文件"><a href="#服务端nacos配置文件" class="headerlink" title="服务端nacos配置文件"></a>服务端nacos配置文件</h2><ul><li>复制config.txt文件到本地<ul><li><a href="https://github.com/seata/seata/blob/v1.3.0/script/config-center/config.txt">https://github.com/seata/seata/blob/v1.3.0/script/config-center/config.txt</a></li></ul></li><li>复制nacos-config.sh文件到本地<ul><li><a href="https://github.com/seata/seata/blob/v1.3.0/script/config-center/nacos/nacos-config.sh">https://github.com/seata/seata/blob/v1.3.0/script/config-center/nacos/nacos-config.sh</a></li></ul></li><li>config.txt中的内容很多是不需要的，加入以下仅需要的内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">store.mode=db</span><br><span class="line">store.db.datasource=druid</span><br><span class="line">store.db.dbType=mysql</span><br><span class="line">store.db.driverClassName=com.mysql.cj.jdbc.Driver</span><br><span class="line">store.db.url=jdbc:mysql://192.168.80.128:3306/seata?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">store.db.user=root</span><br><span class="line">store.db.password=aacopy.cn</span><br></pre></td></tr></table></figure><ul><li>config.txt要放在nacos-config.sh的上一级目录里，可以和github上目录保持一致，将nacos-config.sh放在nacos目录下，config.txt放在和nacos同一级目录</li><li>在nacos-config.sh的目录中，右键打开git bash here</li><li>执行命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ./nacos-config.sh -h 192.168.80.128 -p 8848 -g SEATA_GROUP -u nacos -w nacos</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-常用命令</title>
      <link href="/Linux/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/Linux/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="CentOS相关"><a href="#CentOS相关" class="headerlink" title="CentOS相关"></a>CentOS相关</h2><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><ul><li>查看防火墙状态</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><ul><li>开启防火墙</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><ul><li>临时关闭防火墙</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><ul><li>永久关闭防火墙</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><h3 id="同步系统时间"><a href="#同步系统时间" class="headerlink" title="同步系统时间"></a>同步系统时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install ntpdate</span><br><span class="line"></span><br><span class="line">ntpdate cn.pool.ntp.org</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-Demo1.4.2</title>
      <link href="/Seata/Seata-Demo1.4.2/"/>
      <url>/Seata/Seata-Demo1.4.2/</url>
      
        <content type="html"><![CDATA[<p>seata 1.4.2版本 代码示例</p><p><a href="https://gitee.com/aacopy/seata-learn/tree/1.4.2/">https://gitee.com/aacopy/seata-learn/tree/1.4.2/</a></p><h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><ul><li>seata 版本 1.4.2</li><li>mysql 版本 8.0</li><li>nacos 版本 2.0.2</li><li>SpringCloud 版本 2020.0.4 ，AlibabaCloud 版本 2021.1</li></ul><h2 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h2><p>四个服务：</p><ul><li>Account 账户服务</li><li>Order 订单服务</li><li>Storage 库存服务</li><li>Business 业务服务</li></ul><p>业务服务下单，调用库存服务，扣减库存，调用订单服务，下单，订单服务中再调用账户服务，扣款</p><p><img src="/images/Seata-Demo/architecture.png" alt="img"></p><h2 id="启动seata服务端"><a href="#启动seata服务端" class="headerlink" title="启动seata服务端"></a>启动seata服务端</h2><h3 id="下载服务端"><a href="#下载服务端" class="headerlink" title="下载服务端"></a>下载服务端</h3><p>下载地址：<a href="http://seata.io/zh-cn/blog/download.html">http://seata.io/zh-cn/blog/download.html</a> 点击1.4.2版本的binary</p><h3 id="创建数据库脚本"><a href="#创建数据库脚本" class="headerlink" title="创建数据库脚本"></a>创建数据库脚本</h3><ol><li>创建数据库seata</li><li>执行建表SQL脚本，脚本地址：<a href="https://github.com/seata/seata/blob/v1.4.2/script/server/db/mysql.sql">https://github.com/seata/seata/blob/v1.4.2/script/server/db/mysql.sql</a></li></ol><p>注意：</p><ul><li>seata在创建事务组的时候，如果在客户端中不指定配置<code>seata.tx-service-group</code>，则默认以：<code>spring.application.name</code>值+”<code>-seata-service-group</code>“拼接后的字符串作为分组名，例如：<code>seata-business-seata-service-group</code>。而在sql脚本中<code>global_table</code>表的<code>transaction_service_group</code>字段的长度默认为32，是不够的，会报以下错误：<ul><li>解决方案1：把<code>global_table</code>表的<code>transaction_service_group</code>字段长度加大，改为<code>64</code></li><li>解决方案2：在客户端配置文件中，配置<code>seata.tx-service-group</code>的值，使长度小于等于32</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io.seata.core.exception.TmTransactionException: TransactionException[begin global request failed. xid=null, msg=Data truncation: Data too long for column &#x27;transaction_service_group&#x27; at row 1]</span><br></pre></td></tr></table></figure><h3 id="nacos中添加seata配置文件"><a href="#nacos中添加seata配置文件" class="headerlink" title="nacos中添加seata配置文件"></a>nacos中添加seata配置文件</h3><ul><li><p>nacos中新增配置</p><ul><li><code>Data ID</code> 填写 <code>seata.properties</code></li><li><code>Group</code> 填写 <code>SEATA_GROUP</code></li><li><code>配置格式</code> 选择 <code>Properties</code></li><li><code>配置内容</code> 配置内容如下，以下为最小配置项，其他都有默认配置</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">store.mode</span>=<span class="string">db</span></span><br><span class="line"><span class="meta">store.db.datasource</span>=<span class="string">druid</span></span><br><span class="line"><span class="meta">store.db.dbType</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">store.db.driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">store.db.url</span>=<span class="string">jdbc:mysql://192.168.80.128:3306/seata?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line"><span class="meta">store.db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">store.db.password</span>=<span class="string">aacopy.cn</span></span><br></pre></td></tr></table></figure></li><li><p>其他配置项内容可以参考官方提供的配置文件内容，获取地址：<a href="https://github.com/seata/seata/blob/v1.4.2/script/config-center/config.txt">https://github.com/seata/seata/blob/v1.4.2/script/config-center/config.txt</a></p></li><li><p><strong>注意事项</strong>：</p><ul><li><code>store.db.driverClassName</code>配置项文档中给的值是<code>com.mysql.jdbc.Driver</code>，需要改为<code>com.mysql.cj.jdbc.Driver</code>，不然启动会报以下错误</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">21:48:30.295 ERROR --- [ionPool-Create-1741786839] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://192.168.80.128:3306/seata?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai, errorCode 0, state 08001</span><br><span class="line">==&gt;</span><br><span class="line">com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server.</span><br><span class="line">  ...</span><br><span class="line">Caused by: java.lang.NullPointerException: null</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><ul><li><code>store.mode</code>配置项数据库模式，配置项<code>db</code>一定要小写，一开始参考最新分支的注释，写成了大写，结果启动会报以下错误</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; io.seata.common.loader.EnhancedServiceNotFoundException: java.lang.IllegalStateException: Extension instance(definition: io.seata.common.loader.ExtensionDefinition@2edbda99, class: class io.seata.server.coordinator.AbstractCore)  could not be instantiated: null</span><br><span class="line">Caused by: java.lang.IllegalStateException: Extension instance(definition: io.seata.common.loader.ExtensionDefinition@2edbda99, class: class io.seata.server.coordinator.AbstractCore)  could not be instantiated: null</span><br><span class="line">...</span><br><span class="line">Caused by: java.lang.reflect.InvocationTargetException</span><br><span class="line">...</span><br><span class="line">Caused by: java.lang.ExceptionInInitializerError</span><br><span class="line">...</span><br><span class="line">Caused by: io.seata.common.loader.EnhancedServiceNotFoundException: not found service provider for : io.seata.server.lock.LockManager</span><br></pre></td></tr></table></figure><ul><li><code>store.db.datasource=druid</code>必须要配置，不配置会报如下错误</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; io.seata.common.loader.EnhancedServiceNotFoundException: not found service provider for : io.seata.server.session.SessionManager caused by java.lang.IllegalStateException: Extension instance(definition: io.seata.common.loader.ExtensionDefinition@c1d87e38, class: interface io.seata.server.session.SessionManager)  could not be instantiated: the name of service provider for [io.seata.core.store.db.DataSourceProvider] name is null</span><br><span class="line">...</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: the name of service provider for [io.seata.core.store.db.DataSourceProvider] name is null</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li><code>store.db.dbType=mysql</code>必须要配置，不配置会报如下错误</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; io.seata.common.loader.EnhancedServiceNotFoundException: not found service provider for : io.seata.server.session.SessionManager caused by java.lang.IllegalStateException: Extension instance(definition: io.seata.common.loader.ExtensionDefinition@aef73b8c, class: interface io.seata.server.session.SessionManager)  could not be instantiated: not found service provider for : io.seata.core.store.db.DataSourceProvider caused by java.lang.IllegalStateException: Extension instance(definition: io.seata.common.loader.ExtensionDefinition@bc3d4a39, class: interface io.seata.core.store.db.DataSourceProvider)  could not be instantiated: unknown dbtype:null</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改seata配置文件"><a href="#修改seata配置文件" class="headerlink" title="修改seata配置文件"></a>修改seata配置文件</h3><ul><li>打开根目录<code>conf</code>文件夹</li><li>编辑修改<code>registry.conf</code>配置文件</li><li>修改<code>registry</code>和<code>config</code>的<code>type</code>为<code>nacos</code>，并修改nacos的相关配置</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">registry</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="attr">type</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nacos</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">application</span> = <span class="string">&quot;seata-server&quot;</span></span><br><span class="line">    <span class="attr">serverAddr</span> = <span class="string">&quot;192.168.80.128:8848&quot;</span></span><br><span class="line">    <span class="attr">group</span> = <span class="string">&quot;SEATA_GROUP&quot;</span></span><br><span class="line">    <span class="attr">namespace</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">cluster</span> = <span class="string">&quot;default&quot;</span></span><br><span class="line">    <span class="attr">username</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line">    <span class="attr">password</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">config</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="attr">type</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nacos</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">serverAddr</span> = <span class="string">&quot;192.168.80.128:8848&quot;</span></span><br><span class="line">    <span class="attr">namespace</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">group</span> = <span class="string">&quot;SEATA_GROUP&quot;</span></span><br><span class="line">    <span class="attr">username</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line">    <span class="attr">password</span> = <span class="string">&quot;nacos&quot;</span></span><br><span class="line">    <span class="attr">dataId</span> = <span class="string">&quot;seata.properties&quot;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="启动seata服务端-1"><a href="#启动seata服务端-1" class="headerlink" title="启动seata服务端"></a>启动seata服务端</h3><ul><li>进入seata根目录中的bin目录下，执行命令（linux）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./seata-server.sh -h 192.168.80.128 -p 8091 &amp;</span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><ul><li>因为seata服务端在启动时，可能无法找到本机正确的ip，导致客户端连接时，会报错，并且查看nacos注册中心，服务的ip也不对，所以最好在启动的时候，加上<code>-h 192.168.80.128</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 82884 --- [eoutChecker_1_1] i.s.c.r.netty.NettyClientChannelManager  : 0101 can not connect to 172.17.0.1:8091 cause:can not register RM,err:can not connect to services-server.</span><br></pre></td></tr></table></figure><ul><li>非docker安装的服务，注意需要关闭服务器防火墙，不然客户端无法访问到seata服务端</li></ul></li><li><p>查看nohup日志没有报错，并且nacos服务管理，服务列表中有<code>seata-server</code>服务，即表示启动成功</p></li></ul><h2 id="客户端代码编写"><a href="#客户端代码编写" class="headerlink" title="客户端代码编写"></a>客户端代码编写</h2><p>完整代码gitee地址：<a href="https://gitee.com/aacopy/seata-learn/tree/1.4.2/">https://gitee.com/aacopy/seata-learn/tree/1.4.2/</a></p><p>客户端集成主要步骤</p><h3 id="添加maven依赖"><a href="#添加maven依赖" class="headerlink" title="添加maven依赖"></a>添加maven依赖</h3><ul><li>parent pom.xml</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.seata&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;seata-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.4.2&lt;/version&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/dependencyManagement&gt;</span><br></pre></td></tr></table></figure><ul><li>各微服务pom.xml添加seata依赖，和其他springcloud依赖</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-alibaba-seata&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="nacos新增配置"><a href="#nacos新增配置" class="headerlink" title="nacos新增配置"></a>nacos新增配置</h3><ul><li>各微服务配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">seata:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.128</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">nacos</span></span><br></pre></td></tr></table></figure><ul><li>seata.properties</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">service.vgroupMapping.seata-business-seata-service-group</span>=<span class="string">default</span></span><br><span class="line"><span class="meta">service.vgroupMapping.seata-storage-seata-service-group</span>=<span class="string">default</span></span><br><span class="line"><span class="meta">service.vgroupMapping.seata-order-seata-service-group</span>=<span class="string">default</span></span><br><span class="line"><span class="meta">service.vgroupMapping.seata-account-seata-service-group</span>=<span class="string">default</span></span><br></pre></td></tr></table></figure><h3 id="在调用入口处，添加注解"><a href="#在调用入口处，添加注解" class="headerlink" title="在调用入口处，添加注解"></a>在调用入口处，添加注解</h3><p>服务调用入口service方法上添加注解<code>@GlobalTransactional</code></p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>一般微服务有全局异常处理，直接调用会导致分布式事务失效</li><li>需要直接判断业务接口返回值，或者AOP统一处理，或者取消全局异常处理</li></ul><h3 id="启动服务测试"><a href="#启动服务测试" class="headerlink" title="启动服务测试"></a>启动服务测试</h3><p>至此，已全部集成完成，可以启动服务做相关测试</p><h2 id="1-4-2版本问题"><a href="#1-4-2版本问题" class="headerlink" title="1.4.2版本问题"></a>1.4.2版本问题</h2><h3 id="seata1-4-2中io-seata-spring-util-SpringProxyUtils-findTargetClass相关的代码影响了spring-security-oauth2的bean初始化"><a href="#seata1-4-2中io-seata-spring-util-SpringProxyUtils-findTargetClass相关的代码影响了spring-security-oauth2的bean初始化" class="headerlink" title="seata1.4.2中io.seata.spring.util.SpringProxyUtils#findTargetClass相关的代码影响了spring security oauth2的bean初始化"></a>seata1.4.2中io.seata.spring.util.SpringProxyUtils#findTargetClass相关的代码影响了spring security oauth2的bean初始化</h3><p><a href="https://github.com/seata/seata/issues/3709">https://github.com/seata/seata/issues/3709</a></p><p>启动报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[datacenter:10.66.38.102:9011] 2022-02-09 15:21:06.228 ERROR 23440 [main] org.springframework.boot.SpringApplication 826 Application run failed</span><br><span class="line"></span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;org.springframework.security.oauth2.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientContextConfiguration&#x27;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;accessTokenRequest&#x27;: Post-processing of FactoryBean&#x27;s singleton object failed; nested exception is java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#x27;scopedTarget.accessTokenRequest&#x27;: Scope &#x27;request&#x27; is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看当前develop版本已经修复了<a href="https://github.com/seata/seata/blob/develop/spring/src/main/java/io/seata/spring/util/SpringProxyUtils.java">https://github.com/seata/seata/blob/develop/spring/src/main/java/io/seata/spring/util/SpringProxyUtils.java</a></p><p>参照issues上的建议，当前版本将修复后的文件覆盖原有文件</p><p><a href="https://github.com/ls9527/seata/blob/ddaeaf7678368a8fad0f8c579446ca8ecde2b683/spring/src/main/java/io/seata/spring/util/SpringProxyUtils.java">https://github.com/ls9527/seata/blob/ddaeaf7678368a8fad0f8c579446ca8ecde2b683/spring/src/main/java/io/seata/spring/util/SpringProxyUtils.java</a></p>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-RestTemplate</title>
      <link href="/Spring/Spring-RestTemplate/"/>
      <url>/Spring/Spring-RestTemplate/</url>
      
        <content type="html"><![CDATA[<h2 id="RestTemplate"><a href="#RestTemplate" class="headerlink" title="RestTemplate"></a>RestTemplate</h2><ul><li><p>RestTemplate是Spring提供的用于访问Rest服务的客户端</p></li><li><p>底层通过使用java.net包下的实现创建HTTP 请求</p></li><li><p>通过使用ClientHttpRequestFactory指定不同的HTTP请求方式，主要提供了两种实现方式</p><ul><li>SimpleClientHttpRequestFactory（默认）<ul><li>底层使用J2SE提供的方式，既java.net包提供的方式，创建底层的Http请求连接</li><li>主要createRequest 方法（ 断点调试），每次都会创建一个新的连接，每次都创建连接会造成极大的资源浪费，而且若连接不能及时释放，会因为无法建立新的连接导致后面的请求阻塞</li></ul></li><li>HttpComponentsClientHttpRequestFactory<ul><li>底层使用HttpClient访问远程的Http服务</li></ul></li></ul></li></ul><h2 id="RestTemplate报错"><a href="#RestTemplate报错" class="headerlink" title="RestTemplate报错"></a>RestTemplate报错</h2><h3 id="Broken-pipe"><a href="#Broken-pipe" class="headerlink" title="Broken pipe"></a>Broken pipe</h3><ul><li>服务端向前端socket连接管道写返回数据时链接（pipe）已经断开了</li><li>从应用角度分析，这是因为客户端等待返回超时了，主动断开了与服务端链接</li><li>连接数设置太小，并发量增加后，造成大量请求排队等待</li><li>网络延迟，是否有丢包</li><li>内存是否足够多支持对应的并发量</li></ul><h2 id="问题解决思路"><a href="#问题解决思路" class="headerlink" title="问题解决思路"></a>问题解决思路</h2><ul><li>客户端每次请求都要和服务端建立新的连接，即三次握手将会非常耗时</li><li>通过http连接池可以减少连接建立与释放的时间，提升http请求的性能</li><li>Spring的restTemplate是对httpclient进行了封装, 而httpclient是支持池化机制</li><li>对httpclient进行封装的有：Apache的Fluent、es的restHighLevelClient、spring的restTemplate等</li></ul><h2 id="编码实践"><a href="#编码实践" class="headerlink" title="编码实践"></a>编码实践</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">(ClientHttpRequestFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ClientHttpRequestFactory <span class="title">httpComponentsClientHttpRequestFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory(httpClient());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpClient <span class="title">httpClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Registry&lt;ConnectionSocketFactory&gt; registry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</span><br><span class="line">                .register(<span class="string">&quot;http&quot;</span>, PlainConnectionSocketFactory.getSocketFactory())</span><br><span class="line">                .register(<span class="string">&quot;https&quot;</span>, SSLConnectionSocketFactory.getSocketFactory())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        PoolingHttpClientConnectionManager connectionManager = <span class="keyword">new</span> PoolingHttpClientConnectionManager(registry);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置整个连接池最大连接数</span></span><br><span class="line">        connectionManager.setMaxTotal(<span class="number">500</span>);</span><br><span class="line">        <span class="comment">//MaxPerRoute路由是对maxTotal的细分,每个主机的并发最大是300，这里route指的是域名</span></span><br><span class="line">        <span class="comment">//MaxPerRoute所有路由的并发数加起来不会超过最大连接数</span></span><br><span class="line">        connectionManager.setDefaultMaxPerRoute(<span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">        RequestConfig requestConfig = RequestConfig.custom()</span><br><span class="line">                <span class="comment">//返回数据的超时时间</span></span><br><span class="line">                .setSocketTimeout(<span class="number">20000</span>)</span><br><span class="line">                <span class="comment">//连接上服务器的超时时间</span></span><br><span class="line">                .setConnectTimeout(<span class="number">10000</span>)</span><br><span class="line">                <span class="comment">//从连接池中获取连接的超时时间</span></span><br><span class="line">                .setConnectionRequestTimeout(<span class="number">1000</span>)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> HttpClientBuilder.create()</span><br><span class="line">                .setDefaultRequestConfig(requestConfig)</span><br><span class="line">                .setConnectionManager(connectionManager)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-@Async</title>
      <link href="/Spring/Spring-@Async/"/>
      <url>/Spring/Spring-@Async/</url>
      
        <content type="html"><![CDATA[<p>@Async用于在Spring中执行异步任务</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><ul><li>启动类里面使用@EnableAsync注解开启功能，自动扫描</li><li>定义异步任务类并使用@Component标记组件被容器扫描,异步方法加上@Async</li></ul><h2 id="Async失效情况"><a href="#Async失效情况" class="headerlink" title="@Async失效情况"></a>@Async失效情况</h2><ul><li>注解@Async的方法不是public方法</li><li>注解@Async的返回值只能为void或者Future</li><li>注解@Async方法使用static修饰也会失效</li><li>spring无法扫描到异步类，没加注解@Async 或 @EnableAsync注解</li><li>调用方与被调方不能在同一个类<ul><li>Spring 在扫描bean的时候会扫描方法上是否包含@Async注解，动态地生成一个子类（即proxy代理类），当这个有注解的方法被调用的时候，实际上是由代理类来调用的，代理类在调用时增加异步作用</li><li>如果这个有注解的方法是被同一个类中的其他方法调用的，那么该方法的调用并没有通过代理类，而是直接通过原来的那个 bean，所以就失效了</li><li>所以调用方与被调方不能在同一个类，主要是使用了动态代理，同一个类的时候直接调用，不是通过生成的动态代理类调用</li><li>一般将要异步执行的方法单独抽取成一个类</li></ul></li><li>类中需要使用@Autowired或@Resource等注解自动注入，不能自己手动new对象</li><li>在Async 方法上标注@Transactional是没用的，但在Async 方法调用的方法上标注@Transactional 是有效的</li></ul><h2 id="编码实践"><a href="#编码实践" class="headerlink" title="编码实践"></a>编码实践</h2><h3 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h3><p>RestTemplate远程调用第三方地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoticeServiceImpl</span> <span class="keyword">implements</span> <span class="title">NoticeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> beginTime = CommonUtil.getCurrentTimestamp();</span><br><span class="line">        ResponseEntity&lt;String&gt; forEntity = restTemplate.getForEntity(<span class="string">&quot;http://xxx&quot;</span>, String.class);</span><br><span class="line">        String body = forEntity.getBody();</span><br><span class="line">        <span class="keyword">long</span> endTime = CommonUtil.getCurrentTimestamp();</span><br><span class="line">        log.info(<span class="string">&quot;耗时=&#123;&#125;,body=&#123;&#125;&quot;</span>,endTime-beginTime,body);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Jmeter压力测试："><a href="#Jmeter压力测试：" class="headerlink" title="Jmeter压力测试："></a>Jmeter压力测试：</h3><p>线程数：200，Ramp-Up时间：2，循环次数：500</p><table><thead><tr><th>Label</th><th># 样本</th><th>平均值</th><th>中位数</th><th>90% 百分位</th><th>95% 百分位</th><th>99% 百分位</th><th>最小值</th><th>最大值</th><th>异常 %</th><th>吞吐量</th><th>接收 KB/sec</th><th>发送 KB/sec</th></tr></thead><tbody><tr><td>HTTP请求</td><td>100000</td><td>73</td><td>31</td><td>282</td><td>346</td><td>440</td><td>27</td><td>3005</td><td>0.00%</td><td>2432.79406</td><td>488.72</td><td>337.36</td></tr><tr><td>总体</td><td>100000</td><td>73</td><td>31</td><td>282</td><td>346</td><td>440</td><td>27</td><td>3005</td><td>0.00%</td><td>2432.79406</td><td>488.72</td><td>337.36</td></tr></tbody></table><h3 id="异步调用"><a href="#异步调用" class="headerlink" title="异步调用"></a>异步调用</h3><ul><li><p>在启动类上添加注解<code>@EnableAsync</code></p></li><li><p>在service实现方法NoticeServiceImpl上添加注解<code>@Async</code></p></li></ul><p>再次压测</p><table><thead><tr><th>Label</th><th># 样本</th><th>平均值</th><th>中位数</th><th>90% 百分位</th><th>95% 百分位</th><th>99% 百分位</th><th>最小值</th><th>最大值</th><th>异常 %</th><th>吞吐量</th><th>接收 KB/sec</th><th>发送 KB/sec</th></tr></thead><tbody><tr><td>HTTP请求</td><td>100000</td><td>12</td><td>10</td><td>22</td><td>28</td><td>44</td><td>0</td><td>170</td><td>0.00%</td><td>13065.06402</td><td>2624.62</td><td>1811.76</td></tr><tr><td>总体</td><td>100000</td><td>12</td><td>10</td><td>22</td><td>28</td><td>44</td><td>0</td><td>170</td><td>0.00%</td><td>13065.06402</td><td>2624.62</td><td>1811.76</td></tr></tbody></table><h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>现象：压测后很快跑完全部内容，是因为都在线程池内部的阻塞队列里面</p><ul><li><p>极容易出现OOM，或者消息丢失</p></li><li><p>默认8个核心线程数占用满了之后, 新的调用就会进入队列, 最大值是Integer.MAX_VALUE</p></li><li><p>设置下idea启动进程的jvm参数： -Xms50M -Xmx50M，再次压测，会出现异常</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;http-nio-8001-Poller&quot;</span> java.lang.OutOfMemoryError: Java heap space</span><br></pre></td></tr></table></figure><p>代码位置：</p><ul><li>TaskExecutionProperties</li><li>TaskExecutionAutoConfiguration</li></ul><p>说明：</p><ul><li>直接使用 @Async 注解没指定线程池的话，即未设置TaskExecutor时</li><li>默认使用Spring创建ThreadPoolTaskExecutor</li><li>核心线程数：8</li><li>最大线程数：Integer.MAX_VALUE ( 21亿多)</li><li>队列使用LinkedBlockingQueue</li><li>容量是：Integer.MAX_VALUE</li><li>空闲线程保留时间：60s</li><li>线程池拒绝策略：AbortPolicy</li></ul><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="ThreadPoolTaskExecutor和ThreadPoolExecutor"><a href="#ThreadPoolTaskExecutor和ThreadPoolExecutor" class="headerlink" title="ThreadPoolTaskExecutor和ThreadPoolExecutor"></a>ThreadPoolTaskExecutor和ThreadPoolExecutor</h3><ul><li><code>ThreadPoolExecutor</code>，这个类是JDK中的线程池类，继承自<code>Executor</code>，里面有一个<code>execute()</code>方法，用来执行线程，线程池主要提供一个线程队列，队列中保存着所有等待状态的线程，避免了创建与销毁的额外开销</li><li><code>ThreadPoolTaskExecutor</code>，是spring包下的，是Spring为我们提供的线程池类，Spring异步线程池的接口类是<code>TaskExecutor</code>，本质还是<code>java.util.concurrent.Executor</code></li></ul><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><p>spring会先搜索<code>TaskExecutor</code>类型的bean或者名字为<code>taskExecutor</code>的<code>Executor</code>类型的<code>bean</code>，所以我们最好来自定义一个线程池，加入<code>Spring IOC</code>容器里面，即可覆盖</p><p>去掉启动类上的<code>@EnableAsync</code>注解，添加线程配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadPoolTaskConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;threadPoolTaskExecutor&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ThreadPoolTaskExecutor <span class="title">threadPoolTaskExecutor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ThreadPoolTaskExecutor threadPoolTaskExecutor = <span class="keyword">new</span> ThreadPoolTaskExecutor();</span><br><span class="line">        <span class="comment">//线程池创建的核心线程数，线程池维护线程的最少数量，即使没有任务需要执行，也会一直存活</span></span><br><span class="line">        <span class="comment">//如果设置allowCoreThreadTimeout=true（默认false）时，核心线程会超时关闭</span></span><br><span class="line">        threadPoolTaskExecutor.setCorePoolSize(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最大线程池数量，当线程数&gt;=corePoolSize，且任务队列已满时。线程池会创建新线程来处理任务</span></span><br><span class="line">        <span class="comment">//当线程数=maxPoolSize，且任务队列已满时，线程池会拒绝处理任务而抛出异常</span></span><br><span class="line">        threadPoolTaskExecutor.setMaxPoolSize(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//缓存队列（阻塞队列）当核心线程数达到最大时，新任务会放在队列中排队等待执行</span></span><br><span class="line">        threadPoolTaskExecutor.setQueueCapacity(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当线程空闲时间达到keepAliveTime时，线程会退出，直到线程数量=corePoolSize</span></span><br><span class="line">        <span class="comment">//允许线程空闲时间60秒，当maxPoolSize的线程在空闲时间到达的时候销毁</span></span><br><span class="line">        <span class="comment">//如果allowCoreThreadTimeout=true，则会直到线程数量=0</span></span><br><span class="line">        threadPoolTaskExecutor.setKeepAliveSeconds(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//spring 提供的 ThreadPoolTaskExecutor 线程池，是有setThreadNamePrefix() 方法的。</span></span><br><span class="line">        <span class="comment">//jdk 提供的ThreadPoolExecutor 线程池是没有 setThreadNamePrefix() 方法的</span></span><br><span class="line">        threadPoolTaskExecutor.setThreadNamePrefix(<span class="string">&quot;自定义线程：&quot;</span>);</span><br><span class="line">        threadPoolTaskExecutor.setWaitForTasksToCompleteOnShutdown(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// rejection-policy：当pool已经达到max size的时候，如何处理新任务</span></span><br><span class="line">        <span class="comment">// CallerRunsPolicy()：交由调用方线程运行，比如 main 线程；如果添加到线程池失败，那么主线程会自己去执行该任务，不会等待线程池中的线程去执行</span></span><br><span class="line">        <span class="comment">//AbortPolicy()：该策略是线程池的默认策略，如果线程池队列满了丢掉这个任务并且抛出RejectedExecutionException异常。</span></span><br><span class="line">        <span class="comment">//DiscardPolicy()：如果线程池队列满了，会直接丢掉这个任务并且不会有任何异常</span></span><br><span class="line">        <span class="comment">//DiscardOldestPolicy()：丢弃队列中最老的任务，队列满了，会将最早进入队列的任务删掉腾出空间，再尝试加入队列</span></span><br><span class="line">        threadPoolTaskExecutor.setRejectedExecutionHandler(<span class="keyword">new</span> ThreadPoolExecutor.AbortPolicy());</span><br><span class="line">        threadPoolTaskExecutor.initialize();</span><br><span class="line">        <span class="keyword">return</span> threadPoolTaskExecutor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Async(&quot;threadPoolTaskExecutor&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendCode</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><ul><li><p>线程判断规则：</p><p>先是CorePoolSize是否满足，然后是Queue阻塞队列是否满，最后才是MaxPoolSize是否满足</p></li><li><p>高并发下核心线程怎么设置？</p><ul><li>分IO密集还是CPU密集<ul><li>CPU密集设置为跟核心数一样大小</li><li>IO密集型设置为2倍CPU核心数</li></ul></li><li>非固定，根据实际情况压测进行调整</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证码-Kaptcha</title>
      <link href="/%E9%AA%8C%E8%AF%81%E7%A0%81/Kaptcha/"/>
      <url>/%E9%AA%8C%E8%AF%81%E7%A0%81/Kaptcha/</url>
      
        <content type="html"><![CDATA[<p>Kaptcha是谷歌开源的一个可高度配置的验证码生成工具</p><ul><li>验证码的字体/大小/颜色</li><li>验证码内容的范围(数字，字母，中文汉字！)</li><li>验证码图片的大小，边框，边框粗细，边框颜色</li><li>验证码的干扰线</li><li>验证码的样式(鱼眼样式、3D、普通模糊)</li></ul><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kaptcha-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="验证码配置"><a href="#验证码配置" class="headerlink" title="验证码配置"></a>验证码配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultKaptcha <span class="title">kaptcha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultKaptcha kaptcha = <span class="keyword">new</span> DefaultKaptcha();</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_BORDER, &quot;yes&quot;);</span></span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_BORDER_COLOR, &quot;220,220,220&quot;);</span></span><br><span class="line"><span class="comment">//    //properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_COLOR, &quot;38,29,12&quot;);</span></span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_IMAGE_WIDTH, &quot;147&quot;);</span></span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_IMAGE_HEIGHT, &quot;34&quot;);</span></span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_SIZE, &quot;25&quot;);</span></span><br><span class="line"><span class="comment">//    //properties.setProperty(Constants.KAPTCHA_SESSION_KEY, &quot;code&quot;);</span></span><br><span class="line">        <span class="comment">//验证码个数</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_CHAR_LENGTH, <span class="string">&quot;4&quot;</span>);</span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_FONT_NAMES, &quot;Courier&quot;);</span></span><br><span class="line">        <span class="comment">//字体间隔</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_CHAR_SPACE, <span class="string">&quot;8&quot;</span>);</span><br><span class="line">        <span class="comment">//干扰线颜色</span></span><br><span class="line"><span class="comment">//    properties.setProperty(Constants.KAPTCHA_NOISE_COLOR, &quot;white&quot;);</span></span><br><span class="line">        <span class="comment">//干扰实现类</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_NOISE_IMPL, <span class="string">&quot;com.google.code.kaptcha.impl.NoNoise&quot;</span>);</span><br><span class="line">        <span class="comment">//图片样式</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_OBSCURIFICATOR_IMPL, <span class="string">&quot;com.google.code.kaptcha.impl.WaterRipple&quot;</span>);</span><br><span class="line">        <span class="comment">//文字来源</span></span><br><span class="line">        properties.setProperty(Constants.KAPTCHA_TEXTPRODUCER_CHAR_STRING, <span class="string">&quot;0123456789&quot;</span>);</span><br><span class="line">        Config config = <span class="keyword">new</span> Config(properties);</span><br><span class="line">        kaptcha.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> kaptcha;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.dcloud.account.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.account.domain.enums.SendCodeEnum;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.account.domain.request.SendCodeRequest;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.account.service.NoticeService;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.common.enums.BizCodeEnum;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.common.util.CommonUtil;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.dcloud.common.util.JsonData;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.Producer;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cmyang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/2/1 21:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1/notice&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoticeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> NoticeService noticeService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Producer producer;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REDIS_CAPTCHA_KEY_PREFIX = <span class="string">&quot;account-service:captcha:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/captcha&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getCaptcha</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        String text = producer.createText();</span><br><span class="line">        log.debug(<span class="string">&quot;验证码内容：&#123;&#125;&quot;</span>, text);</span><br><span class="line">        <span class="comment">//保存在redis，设置10分钟过期</span></span><br><span class="line">        stringRedisTemplate.opsForValue().set(getRedisCaptchaKey(request), text, <span class="number">10</span>, TimeUnit.MINUTES);</span><br><span class="line">        BufferedImage image = producer.createImage(text);</span><br><span class="line">        <span class="keyword">try</span> (ServletOutputStream outputStream = response.getOutputStream())&#123;</span><br><span class="line">            ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, outputStream);</span><br><span class="line">            outputStream.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;获取流出错：&#123;&#125;&quot;</span>, e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取验证码，通过ip+浏览器User-Agent区分</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getRedisCaptchaKey</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String ip = CommonUtil.getIpAddr(request);</span><br><span class="line">        String userAgent = request.getHeader(HttpHeaders.USER_AGENT);</span><br><span class="line">        <span class="keyword">return</span> REDIS_CAPTCHA_KEY_PREFIX+CommonUtil.MD5(ip+userAgent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送短信验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sendCodeRequest</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/send_code&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JsonData <span class="title">sendCode</span><span class="params">(HttpServletRequest request, <span class="meta">@RequestBody</span> <span class="meta">@Validated</span> SendCodeRequest sendCodeRequest)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//验证图片验证码是否正确</span></span><br><span class="line">        String cacheKey = getRedisCaptchaKey(request);</span><br><span class="line">        String cacheValue = stringRedisTemplate.opsForValue().get(cacheKey);</span><br><span class="line">        <span class="comment">//先删除缓存key，验证一次后，需要重新获取验证码</span></span><br><span class="line">        stringRedisTemplate.delete(cacheKey);</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.equalsIgnoreCase(sendCodeRequest.getCaptcha(), cacheValue)) &#123;</span><br><span class="line">            <span class="keyword">return</span> JsonData.buildResult(BizCodeEnum.CODE_CAPTCHA_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> noticeService.sendCode(SendCodeEnum.USER_REGISTER, sendCodeRequest.getPhone());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取ip的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">       String ipAddress = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           ipAddress = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span> (ipAddress == <span class="keyword">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">               ipAddress = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (ipAddress == <span class="keyword">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">               ipAddress = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (ipAddress == <span class="keyword">null</span> || ipAddress.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ipAddress)) &#123;</span><br><span class="line">               ipAddress = request.getRemoteAddr();</span><br><span class="line">               <span class="keyword">if</span> (ipAddress.equals(<span class="string">&quot;127.0.0.1&quot;</span>)) &#123;</span><br><span class="line">                   <span class="comment">// 根据网卡取本机配置的IP</span></span><br><span class="line">                   InetAddress inet = <span class="keyword">null</span>;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       inet = InetAddress.getLocalHost();</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                       e.printStackTrace();</span><br><span class="line">                   &#125;</span><br><span class="line">                   ipAddress = inet.getHostAddress();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照&#x27;,&#x27;分割</span></span><br><span class="line">           <span class="keyword">if</span> (ipAddress != <span class="keyword">null</span> &amp;&amp; ipAddress.length() &gt; <span class="number">15</span>) &#123;</span><br><span class="line">               <span class="comment">// &quot;***.***.***.***&quot;.length()</span></span><br><span class="line">               <span class="comment">// = 15</span></span><br><span class="line">               <span class="keyword">if</span> (ipAddress.indexOf(<span class="string">&quot;,&quot;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                   ipAddress = ipAddress.substring(<span class="number">0</span>, ipAddress.indexOf(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           ipAddress = <span class="string">&quot;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> ipAddress;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 验证码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 验证码 </tag>
            
            <tag> Kaptcha </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>短信平台接入测试</title>
      <link href="/%E7%9F%AD%E4%BF%A1/%E7%9F%AD%E4%BF%A1%E5%B9%B3%E5%8F%B0%E6%8E%A5%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
      <url>/%E7%9F%AD%E4%BF%A1/%E7%9F%AD%E4%BF%A1%E5%B9%B3%E5%8F%B0%E6%8E%A5%E5%85%A5%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="短信平台"><a href="#短信平台" class="headerlink" title="短信平台"></a>短信平台</h2><ul><li>阿里云：<a href="https://www.aliyun.com/product/sms">https://www.aliyun.com/product/sms</a></li><li>腾讯云：<a href="https://cloud.tencent.com/product/sms">https://cloud.tencent.com/product/sms</a></li><li>第三方厂商：<a href="https://market.aliyun.com/products/57000002/cmapi00046920.html">https://market.aliyun.com/products/57000002/cmapi00046920.html</a></li></ul><h2 id="购买短信"><a href="#购买短信" class="headerlink" title="购买短信"></a>购买短信</h2><p>个人开发或者测试可以接入第三方厂商，费用很低，不需要审核</p><p><a href="https://market.aliyun.com/products/57000002/cmapi00046920.html">https://market.aliyun.com/products/57000002/cmapi00046920.html</a></p><p>购买3元75条和0元5条测试</p><p><img src="/images/%E7%9F%AD%E4%BF%A1%E5%B9%B3%E5%8F%B0%E6%8E%A5%E5%85%A5%E6%B5%8B%E8%AF%95/image-20220131113433013.png" alt="image-20220131113433013"></p><p>购买成功后，打开地址，查看订单和开发需要用到的AppKey，AppSecret，AppCode</p><h2 id="代码接入"><a href="#代码接入" class="headerlink" title="代码接入"></a>代码接入</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#短信配置</span></span><br><span class="line"><span class="attr">sms:</span></span><br><span class="line">  <span class="attr">app-code:</span> <span class="string">订单中的AppCode</span></span><br><span class="line">  <span class="attr">template-id:</span> <span class="string">M72CB42894</span></span><br></pre></td></tr></table></figure><h3 id="短信配置类"><a href="#短信配置类" class="headerlink" title="短信配置类"></a>短信配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;sms&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String appCode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String templateId;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTTP发送配置"><a href="#HTTP发送配置" class="headerlink" title="HTTP发送配置"></a>HTTP发送配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">(ClientHttpRequestFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ClientHttpRequestFactory <span class="title">simpleClientHttpRequestFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleClientHttpRequestFactory factory = <span class="keyword">new</span> SimpleClientHttpRequestFactory();</span><br><span class="line">        factory.setReadTimeout(<span class="number">3000</span>);</span><br><span class="line">        factory.setConnectTimeout(<span class="number">3000</span>);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsComponent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SmsConfig smsConfig;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL_TEMPLATE = <span class="string">&quot;https://jmsms.market.alicloudapi.com/sms/send?mobile=%s&amp;templateId=%s&amp;value=%s&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">(String to, String value)</span> </span>&#123;</span><br><span class="line">        String url = String.format(URL_TEMPLATE, to, smsConfig.getTemplateId(), value);</span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        headers.set(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;APPCODE &quot;</span> + smsConfig.getAppCode());</span><br><span class="line">        HttpEntity&lt;String&gt; entity = <span class="keyword">new</span> HttpEntity&lt;&gt;(headers);</span><br><span class="line">        ResponseEntity&lt;String&gt; response = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);</span><br><span class="line">        <span class="keyword">if</span> (response.getStatusCode() == HttpStatus.OK) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;发送短信成功,响应信息:&#123;&#125;&quot;</span>, response.getBody());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.error(<span class="string">&quot;发送短信失败,响应信息:&#123;&#125;：&#123;&#125;&quot;</span>, response.getStatusCode(), response.getBody());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SmsComponent smsComponent;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        smsComponent.send(<span class="string">&quot;18566668888&quot;</span>, <span class="string">&quot;666888&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="短信验证码失效时间"><a href="#短信验证码失效时间" class="headerlink" title="短信验证码失效时间"></a>短信验证码失效时间</h2><p>开发中短信验证码，一般有两个过期时间，一个是60秒防止重复发送，一个验证码10分钟有效，通过一个redis的key来判断，可以通过过期时间差来判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Long CODE_EXPIRE_SECONDS = <span class="number">600L</span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> JsonData <span class="title">sendCode</span><span class="params">(SendCodeEnum sendCodeEnum, String to)</span> </span>&#123;</span><br><span class="line">       String cacheKey = String.format(RedisKey.CHECK_CODE_KEY, sendCodeEnum.name(), to);</span><br><span class="line">       Long expireSeconds = stringRedisTemplate.getExpire(cacheKey, TimeUnit.SECONDS);</span><br><span class="line">       <span class="comment">//判断是否是60秒内重复发送</span></span><br><span class="line">       <span class="keyword">if</span>(CODE_EXPIRE_SECONDS - expireSeconds &lt; <span class="number">60</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> JsonData.buildResult(BizCodeEnum.CODE_LIMITED);</span><br><span class="line">       &#125;</span><br><span class="line">       String code = CommonUtil.getRandomCode(<span class="number">6</span>);</span><br><span class="line">       stringRedisTemplate.opsForValue().set(cacheKey, code, CODE_EXPIRE_SECONDS, TimeUnit.SECONDS);</span><br><span class="line">       <span class="keyword">if</span>(CheckUtil.isEmail(to)) &#123;</span><br><span class="line">           <span class="comment">//发送邮箱验证码</span></span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span>(CheckUtil.isPhone(to)) &#123;</span><br><span class="line">           <span class="comment">//发送短信验证码</span></span><br><span class="line">           smsComponent.send(to, smsConfig.getTemplateId(), code);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> JsonData.buildSuccess();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 短信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 短信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ安装-Docker</title>
      <link href="/RabbitMQ/RabbitMQ%E5%AE%89%E8%A3%85-Docker/"/>
      <url>/RabbitMQ/RabbitMQ%E5%AE%89%E8%A3%85-Docker/</url>
      
        <content type="html"><![CDATA[<h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><p>安装指定版本：3.8.15-management</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rabbitmq \</span><br><span class="line">-e RABBITMQ_DEFAULT_USER=admin \</span><br><span class="line">-e RABBITMQ_DEFAULT_PASS=aacopy.cn \</span><br><span class="line">-p 15672:15672 \</span><br><span class="line">-p 5672:5672 \</span><br><span class="line">rabbitmq:3.8.15-management</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://192.168.80.128:15672/">http://192.168.80.128:15672/</a></p><p>账号密码：admin/aacopy.cn</p>]]></content>
      
      
      <categories>
          
          <category> RabbitMQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 消息队列 </tag>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos安装-Docker</title>
      <link href="/SpringCloud/Nacos%E5%AE%89%E8%A3%85-Docker/"/>
      <url>/SpringCloud/Nacos%E5%AE%89%E8%A3%85-Docker/</url>
      
        <content type="html"><![CDATA[<h2 id="nacos安装"><a href="#nacos安装" class="headerlink" title="nacos安装"></a>nacos安装</h2><p>笔记安装版本 2.0.2</p><h3 id="创建数据库执行脚本"><a href="#创建数据库执行脚本" class="headerlink" title="创建数据库执行脚本"></a>创建数据库执行脚本</h3><h4 id="创建数据库：nacos-config"><a href="#创建数据库：nacos-config" class="headerlink" title="创建数据库：nacos_config"></a>创建数据库：nacos_config</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE `nacos_config` CHARACTER SET &#x27;utf8mb4&#x27; COLLATE &#x27;utf8mb4_bin&#x27;;</span><br></pre></td></tr></table></figure><h4 id="执行建表脚本"><a href="#执行建表脚本" class="headerlink" title="执行建表脚本"></a>执行建表脚本</h4><p>脚本地址：<a href="https://github.com/alibaba/nacos/blob/2.0.2/distribution/conf/nacos-mysql.sql">https://github.com/alibaba/nacos/blob/2.0.2/distribution/conf/nacos-mysql.sql</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Copyright 1999-2018 Alibaba Group Holding Ltd.</span><br><span class="line"> *</span><br><span class="line"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"> * you may not use this file except in compliance with the License.</span><br><span class="line"> * You may obtain a copy of the License at</span><br><span class="line"> *</span><br><span class="line"> *      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"> *</span><br><span class="line"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="line"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"> * See the License for the specific language governing permissions and</span><br><span class="line"> * limitations under the License.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(255) DEFAULT NULL,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  `c_desc` varchar(256) DEFAULT NULL,</span><br><span class="line">  `c_use` varchar(64) DEFAULT NULL,</span><br><span class="line">  `effect` varchar(64) DEFAULT NULL,</span><br><span class="line">  `type` varchar(64) DEFAULT NULL,</span><br><span class="line">  `c_schema` text,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_aggr   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_aggr` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(255) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `datum_id` varchar(255) NOT NULL COMMENT &#x27;datum_id&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;内容&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;增加租户字段&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_beta   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_beta` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `beta_ips` varchar(1024) DEFAULT NULL COMMENT &#x27;betaIps&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info_beta&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_info_tag   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_info_tag` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `tag_id` varchar(128) NOT NULL COMMENT &#x27;tag_id&#x27;,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL COMMENT &#x27;content&#x27;,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL COMMENT &#x27;md5&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  `src_user` text COMMENT &#x27;source user&#x27;,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL COMMENT &#x27;source ip&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_info_tag&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = config_tags_relation   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `config_tags_relation` (</span><br><span class="line">  `id` bigint(20) NOT NULL COMMENT &#x27;id&#x27;,</span><br><span class="line">  `tag_name` varchar(128) NOT NULL COMMENT &#x27;tag_name&#x27;,</span><br><span class="line">  `tag_type` varchar(64) DEFAULT NULL COMMENT &#x27;tag_type&#x27;,</span><br><span class="line">  `data_id` varchar(255) NOT NULL COMMENT &#x27;data_id&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL COMMENT &#x27;group_id&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `nid` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  PRIMARY KEY (`nid`),</span><br><span class="line">  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;config_tag_relation&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = group_capacity   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `group_capacity` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">  `group_id` varchar(128) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;Group ID，空字符表示整个集群&#x27;,</span><br><span class="line">  `quota` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;配额，0表示使用默认值&#x27;,</span><br><span class="line">  `usage` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;使用量&#x27;,</span><br><span class="line">  `max_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;聚合子配置最大个数，，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_history_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;最大变更历史数量&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;集群、各Group容量信息表&#x27;;</span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = his_config_info   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `his_config_info` (</span><br><span class="line">  `id` bigint(64) unsigned NOT NULL,</span><br><span class="line">  `nid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `data_id` varchar(255) NOT NULL,</span><br><span class="line">  `group_id` varchar(128) NOT NULL,</span><br><span class="line">  `app_name` varchar(128) DEFAULT NULL COMMENT &#x27;app_name&#x27;,</span><br><span class="line">  `content` longtext NOT NULL,</span><br><span class="line">  `md5` varchar(32) DEFAULT NULL,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `src_user` text,</span><br><span class="line">  `src_ip` varchar(50) DEFAULT NULL,</span><br><span class="line">  `op_type` char(10) DEFAULT NULL,</span><br><span class="line">  `tenant_id` varchar(128) DEFAULT &#x27;&#x27; COMMENT &#x27;租户字段&#x27;,</span><br><span class="line">  PRIMARY KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;多租户改造&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/******************************************/</span><br><span class="line">/*   数据库全名 = nacos_config   */</span><br><span class="line">/*   表名称 = tenant_capacity   */</span><br><span class="line">/******************************************/</span><br><span class="line">CREATE TABLE `tenant_capacity` (</span><br><span class="line">  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;Tenant ID&#x27;,</span><br><span class="line">  `quota` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;配额，0表示使用默认值&#x27;,</span><br><span class="line">  `usage` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;使用量&#x27;,</span><br><span class="line">  `max_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;聚合子配置最大个数&#x27;,</span><br><span class="line">  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;,</span><br><span class="line">  `max_history_count` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;最大变更历史数量&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;租户容量信息表&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE `tenant_info` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#x27;id&#x27;,</span><br><span class="line">  `kp` varchar(128) NOT NULL COMMENT &#x27;kp&#x27;,</span><br><span class="line">  `tenant_id` varchar(128) default &#x27;&#x27; COMMENT &#x27;tenant_id&#x27;,</span><br><span class="line">  `tenant_name` varchar(128) default &#x27;&#x27; COMMENT &#x27;tenant_name&#x27;,</span><br><span class="line">  `tenant_desc` varchar(256) DEFAULT NULL COMMENT &#x27;tenant_desc&#x27;,</span><br><span class="line">  `create_source` varchar(32) DEFAULT NULL COMMENT &#x27;create_source&#x27;,</span><br><span class="line">  `gmt_create` bigint(20) NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` bigint(20) NOT NULL COMMENT &#x27;修改时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT=&#x27;tenant_info&#x27;;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `users` (</span><br><span class="line">`username` varchar(50) NOT NULL PRIMARY KEY,</span><br><span class="line">`password` varchar(500) NOT NULL,</span><br><span class="line">`enabled` boolean NOT NULL</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE `roles` (</span><br><span class="line">`username` varchar(50) NOT NULL,</span><br><span class="line">`role` varchar(50) NOT NULL,</span><br><span class="line">UNIQUE INDEX `idx_user_role` (`username` ASC, `role` ASC) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">CREATE TABLE `permissions` (</span><br><span class="line">    `role` varchar(50) NOT NULL,</span><br><span class="line">    `resource` varchar(255) NOT NULL,</span><br><span class="line">    `action` varchar(8) NOT NULL,</span><br><span class="line">    UNIQUE INDEX `uk_role_permission` (`role`,`resource`,`action`) USING BTREE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO users (username, password, enabled) VALUES (&#x27;nacos&#x27;, &#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;, TRUE);</span><br><span class="line"></span><br><span class="line">INSERT INTO roles (username, role) VALUES (&#x27;nacos&#x27;, &#x27;ROLE_ADMIN&#x27;);</span><br></pre></td></tr></table></figure><h2 id="docker创建命令"><a href="#docker创建命令" class="headerlink" title="docker创建命令"></a>docker创建命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-e NACOS_AUTH_ENABLE=true \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-e JVM_XMS=128m \</span><br><span class="line">-e JVM_XMX=128m \</span><br><span class="line">-e JVM_XMN=128m \</span><br><span class="line">-p 8848:8848 \</span><br><span class="line">-e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">-e MYSQL_SERVICE_HOST=192.168.80.128 \</span><br><span class="line">-e MYSQL_SERVICE_PORT=3306 \</span><br><span class="line">-e MYSQL_SERVICE_USER=root \</span><br><span class="line">-e MYSQL_SERVICE_PASSWORD=aacopy.cn \</span><br><span class="line">-e MYSQL_SERVICE_DB_NAME=nacos_config \</span><br><span class="line">-e MYSQL_SERVICE_DB_PARAM=&#x27;characterEncoding=utf8&amp;connectTimeout=10000&amp;socketTimeout=30000&amp;autoReconnect=true&amp;useSSL=false&#x27; \</span><br><span class="line">--restart=always \</span><br><span class="line">--privileged=true \</span><br><span class="line">-v /home/dockerdata/nacos/logs:/home/nacos/logs \</span><br><span class="line">--name nacos \</span><br><span class="line">nacos/nacos-server:2.0.2</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><p>NACOS_AUTH_ENABLE=true</p><p>开源版本不会对客户端鉴权，任何能访问 Nacos server 的用户，都可以直接获取 Nacos 中存储的配置，需要开启 Nacos server 的鉴权,在 Nacos server 中修改 application.properties 的 nacos.core.auth.enabled 值为 true </p></li></ul><h2 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h2><p>访问地址：<a href="http://192.168.80.128:8848/nacos/">http://192.168.80.128:8848/nacos/</a></p><p>默认账号密码：nacos/nacos</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-SpringBoot</title>
      <link href="/ElasticSearch/ElasticSearch-SpringBoot/"/>
      <url>/ElasticSearch/ElasticSearch-SpringBoot/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-搜索</title>
      <link href="/ElasticSearch/ElasticSerach-%E6%90%9C%E7%B4%A2/"/>
      <url>/ElasticSearch/ElasticSerach-%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="查询方式："><a href="#查询方式：" class="headerlink" title="查询方式："></a>查询方式：</h2><ul><li><p>词条查询（<code>term</code>）</p><p>不分析查询条件，当词条完全匹配时，才返回文档</p></li><li><p>全文查询（<code>full text</code>）</p><p>对搜索关键字进行解析，拆分成多个分词，只要文档中包含任意一个分词，就返回该文档</p></li></ul><h2 id="词条查询（term）"><a href="#词条查询（term）" class="headerlink" title="词条查询（term）"></a>词条查询（term）</h2>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-文档</title>
      <link href="/ElasticSearch/ElasticSerach-%E6%96%87%E6%A1%A3/"/>
      <url>/ElasticSearch/ElasticSerach-%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="新增文档"><a href="#新增文档" class="headerlink" title="新增文档"></a>新增文档</h2>为ES服务地址：http://192.168.80.128:9200/<p>在aacopy索引中新增自定id为1的文档，如果不指定id，ES也会自动生产一个id</p><ul><li><p>请求方式：<code>PUT</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_doc/1</code></p><p>接口可以添加参数<code>?op_type=create</code>，指定为新增，防止修改已存在的数据</p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;小明&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>:<span class="string">&quot;A&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;created&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">7</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看文档"><a href="#查看文档" class="headerlink" title="查看文档"></a>查看文档</h2><h3 id="单个文档"><a href="#单个文档" class="headerlink" title="单个文档"></a>单个文档</h3><p>查看aacopy索引中id为1的文档</p><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_doc/1</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">&quot;found&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;A&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="多个文档"><a href="#多个文档" class="headerlink" title="多个文档"></a>多个文档</h3><p>在aacopy索引中新增自定id为1和2两个文档，再查出来</p><h4 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h4><ul><li><p>请求方式：<code>GET/POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/_mget</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;docs&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;docs&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">&quot;found&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;A&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;_version&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">&quot;found&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;三三三&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h4><ul><li><p>请求方式：<code>GET/POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_doc/_mget</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;ids&quot;</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：同方式一</p></li></ul><h2 id="更新文档"><a href="#更新文档" class="headerlink" title="更新文档"></a>更新文档</h2><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><ul><li><p>请求方式：<code>POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_update/1</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;doc&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;AA&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="新增字段"><a href="#新增字段" class="headerlink" title="新增字段"></a>新增字段</h3><ul><li><p>请求方式：<code>POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_update/1</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;script&quot;</span>: <span class="string">&quot;ctx._source.age = 18&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h3><p>请求方式和接口与新增字段相同，参数不同</p><ul><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;script&quot;</span>: <span class="string">&quot;ctx._source.remove(\&quot;age\&quot;)&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="传递参数更新文档"><a href="#传递参数更新文档" class="headerlink" title="传递参数更新文档"></a>传递参数更新文档</h3><p>请求方式和接口与新增字段相同，参数不同</p><ul><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;script&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;ctx._source.tags += params.tags&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;params&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;tags&quot;</span>: <span class="string">&quot;S&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="upsert"><a href="#upsert" class="headerlink" title="upsert"></a>upsert</h3><p>如果执行更新的文档不存在，则创建文档，并设置upsert中的初始值，如果文档存在，则执行script中的更新操作</p><p>更新id为3的这个不存在的文档</p><ul><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_update/3</code></p></li><li><p>请求参数</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;script&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;source&quot;</span>: <span class="string">&quot;ctx._source.num += params.num&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;params&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;num&quot;</span>: <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;upsert&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;num&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h2><ul><li><p>请求方式：<code>DELETE</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_doc/3</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_version&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;result&quot;</span>: <span class="string">&quot;deleted&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span>: <span class="number">8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-映射</title>
      <link href="/ElasticSearch/ElasticSerach-%E6%98%A0%E5%B0%84/"/>
      <url>/ElasticSearch/ElasticSerach-%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<h2 id="新增映射"><a href="#新增映射" class="headerlink" title="新增映射"></a>新增映射</h2>为ES服务地址：http://192.168.80.128:9200/<ul><li><p>请求方式：<code>PUT</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_mapping</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;tags&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看映射"><a href="#查看映射" class="headerlink" title="查看映射"></a>查看映射</h2><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_mapping</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;tags&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看多个索引的映射"><a href="#查看多个索引的映射" class="headerlink" title="查看多个索引的映射"></a>查看多个索引的映射</h2><p>查看aacopy和hello两个索引的映射</p><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy,hello/_mapping</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;hello&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;tags&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查看所有索引的映射"><a href="#查看所有索引的映射" class="headerlink" title="查看所有索引的映射"></a>查看所有索引的映射</h2><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：</p><ul><li><code>&#123;&#123;es_server&#125;&#125;/_mapping</code></li><li><code>&#123;&#123;es_server&#125;&#125;/_all/_mapping</code></li></ul></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;hello&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;name&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;tags&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="增加映射字段"><a href="#增加映射字段" class="headerlink" title="增加映射字段"></a>增加映射字段</h2><p>新增一个<code>description</code>的字段</p><ul><li><p>请求方式：<code>PUT</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_mapping</code></p></li><li><p>Content-Type：application/json</p></li><li><p>请求参数：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;description&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-索引</title>
      <link href="/ElasticSearch/ElasticSerach-%E7%B4%A2%E5%BC%95/"/>
      <url>/ElasticSearch/ElasticSerach-%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h2 id="新增索引"><a href="#新增索引" class="headerlink" title="新增索引"></a>新增索引</h2><p>新增一个aacopy的索引，为ES服务地址：<a href="http://192.168.80.128:9200/">http://192.168.80.128:9200/</a></p><ul><li><p>请求方式：<code>PUT</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;shards_acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;index&quot;</span>: <span class="string">&quot;aacopy&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="获取索引"><a href="#获取索引" class="headerlink" title="获取索引"></a>获取索引</h2><p>获取索引名为aacopy的索引信息</p><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;allocation&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;include&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;_tier_preference&quot;</span>: <span class="string">&quot;data_content&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;provided_name&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;creation_date&quot;</span>: <span class="string">&quot;1641403730051&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;18l1JVJBQKKZWS0BHob8Ag&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;7160299&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><p>删除索引名为aacopy的索引</p><ul><li><p>请求方式：<code>DELETE</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="获取多个索引"><a href="#获取多个索引" class="headerlink" title="获取多个索引"></a>获取多个索引</h2><p>先创建两个索引，hello和aacopy，再同时获取这两个索引</p><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/hello,aacopy</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;allocation&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;include&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;_tier_preference&quot;</span>: <span class="string">&quot;data_content&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;provided_name&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;creation_date&quot;</span>: <span class="string">&quot;1641404107223&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;5u-oJh8xSPivutUt6plnnA&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;7160299&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;hello&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;allocation&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;include&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;_tier_preference&quot;</span>: <span class="string">&quot;data_content&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;provided_name&quot;</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;creation_date&quot;</span>: <span class="string">&quot;1641404112594&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;295E_bNYSgGcSmU_FvXB-g&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;7160299&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="获取所有索引"><a href="#获取所有索引" class="headerlink" title="获取所有索引"></a>获取所有索引</h2><p>获取所有索引的索引信息</p><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/_all</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;allocation&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;include&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;_tier_preference&quot;</span>: <span class="string">&quot;data_content&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;provided_name&quot;</span>: <span class="string">&quot;aacopy&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;creation_date&quot;</span>: <span class="string">&quot;1641404107223&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;5u-oJh8xSPivutUt6plnnA&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;7160299&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;hello&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;index&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;allocation&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;include&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;_tier_preference&quot;</span>: <span class="string">&quot;data_content&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">&quot;number_of_shards&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;provided_name&quot;</span>: <span class="string">&quot;hello&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;creation_date&quot;</span>: <span class="string">&quot;1641404112594&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;uuid&quot;</span>: <span class="string">&quot;295E_bNYSgGcSmU_FvXB-g&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;version&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="string">&quot;7160299&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><ul><li><p>请求方式：<code>GET</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/_cat/indices?v</code></p></li><li><p>响应结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">health status index            uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   .geoip_databases XpWGyzoNQFKMixWiBt-Ffg   1   0         44            0     40.8mb         40.8mb</span><br><span class="line">yellow open   hello            295E_bNYSgGcSmU_FvXB-g   1   1          0            0       226b           226b</span><br><span class="line">yellow open   aacopy           5u-oJh8xSPivutUt6plnnA   1   1          0            0       226b           226b</span><br></pre></td></tr></table></figure></li></ul><h2 id="索引是否存在"><a href="#索引是否存在" class="headerlink" title="索引是否存在"></a>索引是否存在</h2><p>判断是否存在索引名为aacopy的索引</p><ul><li>请求方式：<code>HEAD</code></li><li>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy</code></li><li>响应结果：如果存在Status为<code>200</code>，如果不存在Status为<code>404</code></li></ul><h2 id="关闭索引"><a href="#关闭索引" class="headerlink" title="关闭索引"></a>关闭索引</h2><p>关闭名为aacopy的索引</p><ul><li><p>请求方式：<code>POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_close</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;shards_acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;indices&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;aacopy&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;closed&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="打开索引"><a href="#打开索引" class="headerlink" title="打开索引"></a>打开索引</h2><p>打开名为aacopy的索引</p><ul><li><p>请求方式：<code>POST</code></p></li><li><p>请求接口：<code>&#123;&#123;es_server&#125;&#125;/aacopy/_open</code></p></li><li><p>响应结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;shards_acknowledged&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch-HelloWorld</title>
      <link href="/ElasticSearch/Elasticsearch-HelloWorld/"/>
      <url>/ElasticSearch/Elasticsearch-HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ElasticSerach（简称ES）是⼀个基于Apache Lucene库构建的Restful开源搜索引擎，提供了⼀个分布式，多租户的全⽂搜索引擎，具有HTTP Web界⾯（REST）和⽆架构JSON⽂档，提供了Java，Groovy，PHP，Ruby，Perl，Python，.NET和Javascript客户端库</p><p>官方网站：<a href="https://www.elastic.co/cn/elasticsearch/">https://www.elastic.co/cn/elasticsearch/</a></p><h2 id="单节点安装docker版"><a href="#单节点安装docker版" class="headerlink" title="单节点安装docker版"></a>单节点安装docker版</h2><ol><li>创建挂载目录并分配权限：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /dockerData/elasticsearch/config</span><br><span class="line">mkdir -p /dockerData/elasticsearch/data</span><br><span class="line">chmod 777 -R /dockerData/elasticsearch</span><br></pre></td></tr></table></figure><ol start="2"><li>修改配置文件，让ES可以对外访问</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http.host: 0.0.0.0&quot; &gt;&gt; /dockerData/elasticsearch/config/elasticsearch.yml</span><br></pre></td></tr></table></figure><ol start="3"><li>启动应用</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name elasticsearch --privileged=true -p 9200:9200 -p 9300:9300 \</span><br><span class="line">  -e &quot;discovery.type=single-node&quot; \</span><br><span class="line">  -e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \</span><br><span class="line">  -v /dockerData/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">  -v /dockerData/elasticsearch/data:/usr/share/elasticsearch/data \</span><br><span class="line">  -v /dockerData/elasticsearch/plugins:/usr/share/elasticsearch/plugins elasticsearch:7.16.2</span><br></pre></td></tr></table></figure><ul><li>9200是HTTP访问接口，9300是内部TCP通信端口</li><li><code>discovery.type=single-node</code>表示单节点运行</li><li><code>ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot;</code>设置内存大小</li></ul><ol start="4"><li><p>验证是否启动</p><p>在浏览器输入<a href="http://192.168.80.128:9200/">http://192.168.80.128:9200/</a> (IP根据环境更换)，看到类似如下返回内容表示成功</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;eece1579f720&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span> : <span class="string">&quot;elasticsearch&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;-WJ6WjtMQpGG10HlGUrC-w&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;number&quot;</span> : <span class="string">&quot;7.16.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span> : <span class="string">&quot;docker&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span> : <span class="string">&quot;2b937c44140b6559905130a8650c64dbd0879cfb&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span> : <span class="string">&quot;2021-12-18T19:42:46.604893745Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.10.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>ES类似于一个数据库，在数据库操作中有，库，表，表结构，字段，数据</p><h3 id="索引（index）"><a href="#索引（index）" class="headerlink" title="索引（index）"></a>索引（index）</h3><p>索引可以类比成数据库的库</p><h3 id="类型（type）"><a href="#类型（type）" class="headerlink" title="类型（type）"></a><del>类型（type）</del></h3><p>7.X版本已废弃，type可以类比成数据库的表</p><h3 id="映射（mapping）"><a href="#映射（mapping）" class="headerlink" title="映射（mapping）"></a>映射（mapping）</h3><p>映射可以类比成数据库的表结构</p><h3 id="字段（field）"><a href="#字段（field）" class="headerlink" title="字段（field）"></a>字段（field）</h3><p>对应数据库的字段</p><h3 id="文档（document）"><a href="#文档（document）" class="headerlink" title="文档（document）"></a>文档（document）</h3><p>对应数据库中的一行记录</p><h3 id="分片（shard）"><a href="#分片（shard）" class="headerlink" title="分片（shard）"></a>分片（shard）</h3><p>分片分为主分片和副本分片，一个索引数据分布在多个主分片上，每个主分片有多个副本，是主分片的备份</p>]]></content>
      
      
      <categories>
          
          <category> ElasticSearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO-HelloWorld</title>
      <link href="/MinIO/MinIO-HelloWorld/"/>
      <url>/MinIO/MinIO-HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>高性能对象存储，高性能，可扩展性，云的原生支持</p><p>官方网站：<a href="http://www.minio.org.cn/">http://www.minio.org.cn/</a></p><p>英文官网：<a href="https://min.io/">https://min.io/</a></p><p>中文文档：<a href="http://docs.minio.org.cn/docs/">http://docs.minio.org.cn/docs/</a></p><h2 id="单机版docker安装"><a href="#单机版docker安装" class="headerlink" title="单机版docker安装"></a>单机版docker安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -p 9000:9000 \</span><br><span class="line">  -p 9001:9001 \</span><br><span class="line">  --name minio \</span><br><span class="line">  -v /home/dockerdata/minio/data:/data \</span><br><span class="line">  -e &quot;MINIO_ROOT_USER=root&quot; \</span><br><span class="line">  -e &quot;MINIO_ROOT_PASSWORD=aacopy.cn&quot; \</span><br><span class="line">  minio/minio server /data --console-address &quot;:9001&quot;</span><br></pre></td></tr></table></figure><ul><li>客户端访问地址：<a href="http://192.168.80.128:9001/">http://192.168.80.128:9001/</a></li></ul><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ul><li>Object<ul><li>存储到MinIO的基本对象，如文件</li></ul></li><li>Bucket<ul><li>用来存放Object的空间，每个Bucket之间的数据是相互隔离的，相当于文件的顶层目录</li></ul></li><li>Drive<ul><li>存储数据的磁盘</li></ul></li><li>Set<ul><li>一组Drive集合，分布式部署，根据集群规模划分一个或多个Set，每个Set中的Drive分布在不同的位置。</li><li>一个对象存储在一个set上</li><li>一个集群划分为多个Set</li><li>一个Set包含的Drive数量是固定的，默认根据集群规模自动计算</li><li>Set中的Drive尽可能的分布在不同的节点上</li></ul></li></ul><h2 id="纠错码EC"><a href="#纠错码EC" class="headerlink" title="纠错码EC"></a>纠错码EC</h2><ul><li>MinIO通过纠错码来保证数据高可用，使用highwayhash来处理数据损坏。通过算法将丢失的数据进行还原。</li><li>将n份原始数据，增加m份，并能够通过m+n份文件中的任意n份数据还原数据</li></ul><h2 id="纠删码模式启动"><a href="#纠删码模式启动" class="headerlink" title="纠删码模式启动"></a>纠删码模式启动</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">podman <span class="keyword">run</span><span class="bash"> \</span></span><br><span class="line"><span class="bash">  -p 9000:9000 \</span></span><br><span class="line"><span class="bash">  -p 9001:9001 \</span></span><br><span class="line"><span class="bash">  --name minio \</span></span><br><span class="line"><span class="bash">  -v /mnt/data1:/data1 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data2:/data2 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data3:/data3 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data4:/data4 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data5:/data5 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data6:/data6 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data7:/data7 \</span></span><br><span class="line"><span class="bash">  -v /mnt/data8:/data8 \</span></span><br><span class="line"><span class="bash">  minio/minio server /data&#123;1...8&#125; --console-address <span class="string">&quot;:9001&quot;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MinIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-事务消息</title>
      <link href="/Kafka/Kafka-%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/"/>
      <url>/Kafka/Kafka-%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>事务消息可以保障多个消息写入操作的原子性</p><ul><li><p>配置</p><ul><li>事务消息的acks必须为all或-1</li><li>事务消息id前缀：transaction-id-prefix</li></ul></li><li><p>创建事务消息</p><ul><li><p>注解方式</p><p>方法上添加注解@Transactional(rollbackFor = Exception.class)</p></li><li><p>executeInTransaction</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kafkaTemplate.executeInTransaction(<span class="keyword">new</span> KafkaOperations.OperationsCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">doInOperations</span><span class="params">(KafkaOperations kafkaOperations)</span> </span>&#123;</span><br><span class="line">                kafkaOperations.send(TOPIC_NAME,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> i=<span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">                kafkaOperations.send(TOPIC_NAME,<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="相关报错"><a href="#相关报错" class="headerlink" title="相关报错"></a>相关报错</h2><ul><li><p>Producer factory does not support transactions</p><ul><li><p>加上事务前缀</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.kafka.producer.transaction-id-prefix</span>=<span class="string">tx_</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Must set retries to non-zero when using the idempotent producer.</p><ul><li><p>增加重试次数</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.kafka.producer.retries</span>=<span class="string">3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>Must set acks to all in order to use the idempotent producer. Otherwise we cannot guarantee idempotence.</p><ul><li><p>修改ACK确认方式</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.kafka.producer.acks</span>=<span class="string">-1</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-高性能总结</title>
      <link href="/Kafka/Kafka-%E9%AB%98%E6%80%A7%E8%83%BD%E6%80%BB%E7%BB%93/"/>
      <url>/Kafka/Kafka-%E9%AB%98%E6%80%A7%E8%83%BD%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<ul><li><p>消息文件存储机制</p><ul><li><p>一个Kafka集群有多个broker</p></li><li><p>一个broker包含多个topic</p></li><li><p>一个topic中分为多个partition，每个partition是一个有序的队列，是topic物理上的分组</p></li><li><p>一个partition分为多个segment</p></li></ul></li><li><p>索引机制</p><ul><li>采用二分法和稀疏索引快速查找</li></ul></li><li><p>消息缓冲区</p><ul><li>生产的消息不会直接到队列中，而是经过一个缓冲区，等缓冲区满了或者超时后再批量发送</li></ul></li><li><p>磁盘顺序写入</p></li><li><p>采用操作系统的页缓存（Page cache），而不是JVM的缓存，使用JVM的缓存会导致GC</p></li><li><p>零拷贝（ZeroCopy）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-消息可靠性</title>
      <link href="/Kafka/Kafka-%E6%B6%88%E6%81%AF%E5%8F%AF%E9%9D%A0%E6%80%A7/"/>
      <url>/Kafka/Kafka-%E6%B6%88%E6%81%AF%E5%8F%AF%E9%9D%A0%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="Kafka的副本"><a href="#Kafka的副本" class="headerlink" title="Kafka的副本"></a>Kafka的副本</h2><p>kafka的每个partition可以有多个副本（replication），在这些副本中有一个leader和多个follower，leader负责与消息生产者和消费者进行交互，follower负责从leader拉去消息做数据备份，如果leader挂了，会从follower中选举一个新的leader。</p><h2 id="消息发送流程中的ACK"><a href="#消息发送流程中的ACK" class="headerlink" title="消息发送流程中的ACK"></a>消息发送流程中的ACK</h2><p>消息生产者producer发送消息到topic中的leader patition，patition收到消息后需要向producer发送ack确认消息已经收到。</p><h3 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h3><p>CAP: 指的是在一个分布式系统中，Consistency（一致性）、 Availability（可用性）、Partition tolerance（分区容错性）</p><p>三者是不能同时满足的，只能保证其二，P一般是要保证的，一致性和可用性根据具体业务情况选择，</p><h3 id="ACK级别"><a href="#ACK级别" class="headerlink" title="ACK级别"></a>ACK级别</h3><p>Kafka通过ACK的级别来确定消息的可靠性级别，如果消息要可靠性偏高选择CP，如果要性能偏高选择AP</p><p>Kafka通过acks参数来设置ACK级别</p><ul><li><p>acks=0</p><p>不确认，producer只发送一次消息，不管服务端是否收到消息。性能最高，但消息可靠性最低。如果在发生期间，leader partition所在的broker宕机了，就会消息丢失</p></li><li><p>acks=1</p><p>默认级别，leader patition收到消息并写入磁盘后就返回确认收到消息，不关心follower partition是否同步成功。</p></li><li><p>acks=all，leader等所有ISR中的follower都同步完成后，再返回确认收到消息。消息可靠性最高。也可以设置成-1，和all等同</p></li></ul><p>这一部分可以查看官方注释：ProducerConfig.ACKS_DOC</p><h3 id="ISR（in-sync-replica）"><a href="#ISR（in-sync-replica）" class="headerlink" title="ISR（in-sync replica）"></a>ISR（in-sync replica）</h3><p>一个副本集合，该集合中的副本都会保持与leader同步，leader也在该集合中。</p><ul><li>通过配置项<a href="https://kafka.apache.org/documentation/#topicconfigs_min.insync.replicas">min.insync.replicas</a>来设置ISR中的最小副本数，默认为1，当ISR中的副本数小于配置项中的值时，会返回异常。</li><li>当一个follower长时间未从leader同步消息时（通过<a href="https://kafka.apache.org/documentation/#brokerconfigs_replica.lag.time.max.ms">replica.lag.time.max.ms</a>配置超时时间，默认30秒），就会从ISR集合中移除，进入OSR集合</li><li>如果leader发生故障，会从ISR集合中选举一个新leader</li></ul><h3 id="OSR（out-of-sync-replica）"><a href="#OSR（out-of-sync-replica）" class="headerlink" title="OSR（out-of-sync-replica）"></a>OSR（out-of-sync-replica）</h3><p>与leader副本分区同步滞后过多的副本集合</p><h3 id="High-Watermark"><a href="#High-Watermark" class="headerlink" title="High Watermark"></a>High Watermark</h3><p><img src="/images/Kafka-%E6%B6%88%E6%81%AF%E5%8F%AF%E9%9D%A0%E6%80%A7/image-20220103233304020.png" alt="image-20220103233304020"></p><ul><li><p>HW (High Watermark) </p><ul><li>ISR中所有副本都同步过的offset位置</li><li>HW线之前的数据才对消费者可见</li></ul></li><li><p>LEO（log end offset）</p><ul><li>partition中最后一条消息所在的offset位置</li></ul></li><li><p>HW用来保证消费数据的一致性和各个副本数据的一致性</p><ul><li>如果leader宕机，会从ISR中选举一个新的leader，此时其他follower会将log文件件中高于HW的数据删掉，然后从leader重新同步，这样可以确保各个副本数据的一致性</li><li>如果follower宕机，会被leader从ISR集合中移除，等follower再次恢复，会读取本地记录的宕机前的HW之后的数据删掉，然后重新同步，等follower的LEO追上新的HW时，重新加入ISR集合中</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>partition的多副本机制保障了消息存储的可靠性</li><li>ACK机制保障了producer消息投递的可靠性</li><li>High Watermark保障了消费数据的一致性和副本数据的一致性</li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mpush-Server</title>
      <link href="/Mpush/Mpush-Server/"/>
      <url>/Mpush/Mpush-Server/</url>
      
        <content type="html"><![CDATA[<h2 id="启动类ServerTestMain"><a href="#启动类ServerTestMain" class="headerlink" title="启动类ServerTestMain"></a>启动类ServerTestMain</h2><p>com.mpush.test.sever.ServerTestMain</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerTestMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        start();</span><br><span class="line">        <span class="comment">//使主线程处于阻塞状态</span></span><br><span class="line">        LockSupport.park();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置Netty内存泄漏检测级别</span></span><br><span class="line"><span class="comment">         * DISABLED:不检测，</span></span><br><span class="line"><span class="comment">         * SIMPLE：默认级别，简单抽样，部分方法检测，消耗小，延迟报告</span></span><br><span class="line"><span class="comment">         * ADVANCED：对最近几次调用记录进行抽样检测，延迟报告</span></span><br><span class="line"><span class="comment">         * PARANOID：每次都检测，记录详细记录了，消耗大，测试时使用</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.setProperty(<span class="string">&quot;io.netty.leakDetection.level&quot;</span>, <span class="string">&quot;PARANOID&quot;</span>);</span><br><span class="line">        <span class="comment">//关闭Netty对Selector中selectedKeys的优化</span></span><br><span class="line">        System.setProperty(<span class="string">&quot;io.netty.noKeySetOptimization&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">        <span class="comment">//com.mpush.bootstrap.Main启动入口</span></span><br><span class="line">        Main.main(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法入口Main-main-null"><a href="#方法入口Main-main-null" class="headerlink" title="方法入口Main.main(null);"></a>方法入口Main.main(null);</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 源码启动请不要直接运行此方法，否则不能正确加载配置文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 启动参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//初始化日志</span></span><br><span class="line">        Logs.init();</span><br><span class="line">        Logs.Console.info(<span class="string">&quot;launch mpush server...&quot;</span>);</span><br><span class="line">        <span class="comment">//初始化服务</span></span><br><span class="line">        ServerLauncher launcher = <span class="keyword">new</span> ServerLauncher();</span><br><span class="line">        launcher.init();</span><br><span class="line">        <span class="comment">//启动服务</span></span><br><span class="line">        launcher.start();</span><br><span class="line">        <span class="comment">//添加钩子，JVM退出时，停止服务</span></span><br><span class="line">        addHook(launcher);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注意点</span></span><br><span class="line"><span class="comment">     * 1.不要ShutdownHook Thread 里调用System.exit()方法，否则会造成死循环。</span></span><br><span class="line"><span class="comment">     * 2.如果有非守护线程，只有所有的非守护线程都结束了才会执行hook</span></span><br><span class="line"><span class="comment">     * 3.Thread默认都是非守护线程，创建的时候要注意</span></span><br><span class="line"><span class="comment">     * 4.注意线程抛出的异常，如果没有被捕获都会跑到Thread.dispatchUncaughtException</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> launcher</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addHook</span><span class="params">(ServerLauncher launcher)</span> </span>&#123;</span><br><span class="line">        Runtime.getRuntime().addShutdownHook(</span><br><span class="line">                <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        launcher.stop();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        Logs.Console.error(<span class="string">&quot;mpush server stop ex&quot;</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    Logs.Console.info(<span class="string">&quot;jvm exit, all service stopped.&quot;</span>);</span><br><span class="line"></span><br><span class="line">                &#125;, <span class="string">&quot;mpush-shutdown-hook-thread&quot;</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始化服务launcher-init-："><a href="#初始化服务launcher-init-：" class="headerlink" title="初始化服务launcher.init()："></a>初始化服务launcher.init()：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerLauncher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MPushServer mPushServer;</span><br><span class="line">    <span class="keyword">private</span> BootChain chain;</span><br><span class="line">    <span class="keyword">private</span> ServerEventListener serverEventListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//MpushServer初始化</span></span><br><span class="line">        <span class="keyword">if</span> (mPushServer == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mPushServer = <span class="keyword">new</span> MPushServer();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//初始化服务启动链</span></span><br><span class="line">        <span class="keyword">if</span> (chain == <span class="keyword">null</span>) &#123;</span><br><span class="line">            chain = BootChain.chain();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//通过SPI获取ServerEventListenerFactory中的实例</span></span><br><span class="line">        <span class="keyword">if</span> (serverEventListener == <span class="keyword">null</span>) &#123;</span><br><span class="line">            serverEventListener = ServerEventListenerFactory.create();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//貌似啥也没干</span></span><br><span class="line">        serverEventListener.init(mPushServer);</span><br><span class="line"></span><br><span class="line">        chain.boot()</span><br><span class="line">                .setNext(<span class="keyword">new</span> CacheManagerBoot())<span class="comment">//1.初始化缓存模块</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> ServiceRegistryBoot())<span class="comment">//2.启动服务注册与发现模块</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> ServiceDiscoveryBoot())<span class="comment">//2.启动服务注册与发现模块</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> ServerBoot(mPushServer.getConnectionServer(), mPushServer.getConnServerNode()))<span class="comment">//3.启动接入服务</span></span><br><span class="line">                .setNext(() -&gt; <span class="keyword">new</span> ServerBoot(mPushServer.getWebsocketServer(), mPushServer.getWebsocketServerNode()), wsEnabled())<span class="comment">//4.启动websocket接入服务</span></span><br><span class="line">                .setNext(() -&gt; <span class="keyword">new</span> ServerBoot(mPushServer.getUdpGatewayServer(), mPushServer.getGatewayServerNode()), udpGateway())<span class="comment">//5.启动udp网关服务</span></span><br><span class="line">                .setNext(() -&gt; <span class="keyword">new</span> ServerBoot(mPushServer.getGatewayServer(), mPushServer.getGatewayServerNode()), tcpGateway())<span class="comment">//6.启动tcp网关服务</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> ServerBoot(mPushServer.getAdminServer(), <span class="keyword">null</span>))<span class="comment">//7.启动控制台服务</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> RouterCenterBoot(mPushServer))<span class="comment">//8.启动路由中心组件</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> PushCenterBoot(mPushServer))<span class="comment">//9.启动推送中心组件</span></span><br><span class="line">                .setNext(() -&gt; <span class="keyword">new</span> HttpProxyBoot(mPushServer), CC.mp.http.proxy_enabled)<span class="comment">//10.启动http代理服务，dns解析服务</span></span><br><span class="line">                .setNext(<span class="keyword">new</span> MonitorBoot(mPushServer))<span class="comment">//11.启动监控服务</span></span><br><span class="line">                .end();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//通过start中的startNext依次启动启动链中的各个服务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        chain.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        chain.stop();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//get set ......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MPushServer初始化"><a href="#MPushServer初始化" class="headerlink" title="MPushServer初始化"></a>MPushServer初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">MPushServer</span> <span class="keyword">implements</span> <span class="title">MPushContext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServiceNode connServerNode;</span><br><span class="line">    <span class="keyword">private</span> ServiceNode gatewayServerNode;</span><br><span class="line">    <span class="keyword">private</span> ServiceNode websocketServerNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ConnectionServer connectionServer;</span><br><span class="line">    <span class="keyword">private</span> WebsocketServer websocketServer;</span><br><span class="line">    <span class="keyword">private</span> GatewayServer gatewayServer;</span><br><span class="line">    <span class="keyword">private</span> AdminServer adminServer;</span><br><span class="line">    <span class="keyword">private</span> GatewayUDPConnector udpGatewayServer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HttpClient httpClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PushCenter pushCenter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ReusableSessionManager reusableSessionManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouterCenter routerCenter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MonitorService monitorService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MPushServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//初始化connect server长连接</span></span><br><span class="line">        connServerNode = ServerNodes.cs();</span><br><span class="line">        <span class="comment">//初始化网关</span></span><br><span class="line">        gatewayServerNode = ServerNodes.gs();</span><br><span class="line">        <span class="comment">//初始化websocket</span></span><br><span class="line">        websocketServerNode = ServerNodes.ws();</span><br><span class="line">        <span class="comment">//初始化监控服务,收集JVM和线程信息</span></span><br><span class="line">        monitorService = <span class="keyword">new</span> MonitorService();</span><br><span class="line">        <span class="comment">//初始化事件总线</span></span><br><span class="line">        EventBus.create(monitorService.getThreadPoolManager().getEventBusExecutor());</span><br><span class="line">        <span class="comment">//初始化可复用的session管理器</span></span><br><span class="line">        reusableSessionManager = <span class="keyword">new</span> ReusableSessionManager();</span><br><span class="line">        <span class="comment">//初始化推送服务和ACK服务</span></span><br><span class="line">        pushCenter = <span class="keyword">new</span> PushCenter(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//初始化路由服务</span></span><br><span class="line">        routerCenter = <span class="keyword">new</span> RouterCenter(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//初始化长连接服务</span></span><br><span class="line">        connectionServer = <span class="keyword">new</span> ConnectionServer(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//初始化webSocket服务</span></span><br><span class="line">        websocketServer = <span class="keyword">new</span> WebsocketServer(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">//初始化admin服务</span></span><br><span class="line">        adminServer = <span class="keyword">new</span> AdminServer(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (tcpGateway()) &#123;</span><br><span class="line">            <span class="comment">//初始化TCP网关服务</span></span><br><span class="line">            gatewayServer = <span class="keyword">new</span> GatewayServer(<span class="keyword">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//初始化UDP网关服务</span></span><br><span class="line">            udpGatewayServer = <span class="keyword">new</span> GatewayUDPConnector(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTargetMachine</span><span class="params">(String host, <span class="keyword">int</span> port)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> port == gatewayServerNode.getPort() &amp;&amp; gatewayServerNode.getHost().equals(host);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceNode <span class="title">getConnServerNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> connServerNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceNode <span class="title">getGatewayServerNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gatewayServerNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceNode <span class="title">getWebsocketServerNode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> websocketServerNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConnectionServer <span class="title">getConnectionServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> connectionServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GatewayServer <span class="title">getGatewayServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gatewayServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AdminServer <span class="title">getAdminServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> adminServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GatewayUDPConnector <span class="title">getUdpGatewayServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> udpGatewayServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebsocketServer <span class="title">getWebsocketServer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> websocketServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpClient <span class="title">getHttpClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (httpClient == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (httpClient == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    httpClient = <span class="keyword">new</span> NettyHttpClient();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> httpClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PushCenter <span class="title">getPushCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pushCenter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReusableSessionManager <span class="title">getReusableSessionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> reusableSessionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RouterCenter <span class="title">getRouterCenter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> routerCenter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MonitorService <span class="title">getMonitor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> monitorService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceDiscovery <span class="title">getDiscovery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ServiceDiscoveryFactory.create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServiceRegistry <span class="title">getRegistry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ServiceRegistryFactory.create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">getCacheManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> CacheManagerFactory.create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MQClient <span class="title">getMQClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MQClientFactory.create();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ServerNodes初始化"><a href="#ServerNodes初始化" class="headerlink" title="ServerNodes初始化"></a>ServerNodes初始化</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerNodes</span> </span>&#123;</span><br><span class="line">    <span class="comment">//connect serve长连接初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ServiceNode <span class="title">cs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CommonServiceNode node = <span class="keyword">new</span> CommonServiceNode();</span><br><span class="line">        <span class="comment">//设置公网ip</span></span><br><span class="line">        node.setHost(ConfigTools.getConnectServerRegisterIp());</span><br><span class="line">        <span class="comment">//设置公网端口</span></span><br><span class="line">        node.setPort(CC.mp.net.connect_server_port);</span><br><span class="line">        node.setPersistent(<span class="keyword">false</span>);</span><br><span class="line">        node.setServiceName(ServiceNames.CONN_SERVER);</span><br><span class="line">        <span class="comment">//设置ZK中的权重</span></span><br><span class="line">        node.setAttrs(CC.mp.net.connect_server_register_attr);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//webSocket服务初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ServiceNode <span class="title">ws</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CommonServiceNode node = <span class="keyword">new</span> CommonServiceNode();</span><br><span class="line">        <span class="comment">//设置公网ip</span></span><br><span class="line">        node.setHost(ConfigTools.getConnectServerRegisterIp());</span><br><span class="line">        <span class="comment">//设置公网端口</span></span><br><span class="line">        node.setPort(CC.mp.net.ws_server_port);</span><br><span class="line">        node.setPersistent(<span class="keyword">false</span>);</span><br><span class="line">        node.setServiceName(ServiceNames.WS_SERVER);</span><br><span class="line">        <span class="comment">//node.addAttr(ATTR_PUBLIC_IP, ConfigTools.getPublicIp());</span></span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//网关服务初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ServiceNode <span class="title">gs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CommonServiceNode node = <span class="keyword">new</span> CommonServiceNode();</span><br><span class="line">        <span class="comment">//设置本地ip</span></span><br><span class="line">        node.setHost(ConfigTools.getGatewayServerRegisterIp());</span><br><span class="line">        <span class="comment">//设置网关端口</span></span><br><span class="line">        node.setPort(CC.mp.net.gateway_server_port);</span><br><span class="line">        node.setPersistent(<span class="keyword">false</span>);</span><br><span class="line">        node.setServiceName(ServiceNames.GATEWAY_SERVER);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ConnectionServer初始化"><a href="#ConnectionServer初始化" class="headerlink" title="ConnectionServer初始化"></a>ConnectionServer初始化</h4>]]></content>
      
      
      <categories>
          
          <category> Mpush </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mpush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mpush-官方文档</title>
      <link href="/Mpush/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
      <url>/Mpush/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<p>由于官方文档<a href="http://mpush.mydoc.io/%E7%BB%8F%E5%B8%B8%E6%89%93%E4%B8%8D%E5%BC%80%EF%BC%8C%E8%BF%99%E9%87%8C%E9%87%8D%E6%96%B0%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%8B%EF%BC%8C%E6%96%B9%E4%BE%BF%E6%9F%A5%E9%98%85%EF%BC%8C%E5%8E%9F%E5%A7%8B%E6%96%87%E6%A1%A3%EF%BC%8C%E6%9C%AA%E5%81%9A%E4%BB%BB%E4%BD%95%E6%94%B9%E5%8A%A8">http://mpush.mydoc.io/经常打不开，这里重新发布一下，方便查阅，原始文档，未做任何改动</a></p><h3 id="系统介绍"><a href="#系统介绍" class="headerlink" title="系统介绍"></a>系统介绍</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/21113422_dBgn.png" alt="输入图片说明"></p><blockquote><p>基于Netty的开源实时消息推送系统</p></blockquote><h3 id="发展状况"><a href="#发展状况" class="headerlink" title="发展状况"></a>发展状况</h3><blockquote><p>2015.12 项目启动<br>2016.2 1.0-beta<br>2016.3 1.0-release 上线<br>2016.5 开源预研,业务剥离<br>2016.8 正式开源v0.0.1<br>2016.9 v0.0.2, v0.0.3<br>2016.10 v0.0.4, v0.0.5<br>2016.11 v0.0.6<br>2016.12 v0.6.1<br>2017.1 v0.7.0<br>2017.2 v0.7.1<br>2017.8 v0.8.0</p></blockquote><h3 id="后续目标"><a href="#后续目标" class="headerlink" title="后续目标"></a>后续目标</h3><p>因为Java的开源消息系统非常少，希望有兴趣的朋友可以一起参与进来，做一个最好的java开源消息推送系统。参与方式:<a href="http://www.jianshu.com/p/a8de24f8a845">如何参与Github开源项目</a></p><h3 id="项目成员"><a href="#项目成员" class="headerlink" title="项目成员"></a>项目成员</h3><p>夜色[QQ:251939168]、黄志磊、魏永霖、老佛爷</p><h3 id="帮助与支持"><a href="#帮助与支持" class="headerlink" title="帮助与支持"></a>帮助与支持</h3><p>QQ群: 114583699</p><h3 id="捐助"><a href="#捐助" class="headerlink" title="捐助"></a>捐助</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/09152814_k2YZ.png" alt="捐助"></p><h3 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h3><ol><li>源码全部开放，包括server、android、ios 等</li><li>代码质量高，全部模块化设计，真正的商用级产品，考虑到推送中遇到的大部分场景</li><li>安全性高，基于RSA精简的加密握手协议，简单，高效，安全</li><li>支持断线重连，及弱网下的快速重连，无网络下自动休眠节省电量和资源</li><li>协议简洁，接口流畅，支持数据压缩，更加节省流量</li><li>支持集群部署，支持负载均衡，基于成熟的zookeeper实现</li><li>用户路由使用redis集群，支持单写，双写，集群分组；性能好，可用性高</li><li>支持http代理，一根TCP链接接管应用大部分请求，让http请求更加及时</li><li>高度可配置化，基本上通过修改配置可满足大部分场景</li><li>扩展性强，高度模块化，基于SPI模式的可拔插设计，以满足特殊需求</li><li>监控完善，日志详细，可快速排查线上问题及服务调优</li></ol><h2 id="第二章-快速上手"><a href="#第二章-快速上手" class="headerlink" title="第二章 快速上手"></a>第二章 快速上手</h2><h3 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h3><h3 id="Github源码"><a href="#Github源码" class="headerlink" title="Github源码"></a>Github源码</h3><ul><li>group <a href="https://github.com/mpusher/">https://github.com/mpusher/</a> 源代码空间</li><li>server <a href="https://github.com/mpusher/mpush">https://github.com/mpusher/mpush</a> 服务端源码</li><li>alloc <a href="https://github.com/mpusher/alloc">https://github.com/mpusher/alloc</a> 调度器源码</li><li>mpns <a href="https://github.com/mpusher/mpns">https://github.com/mpusher/mpns</a> 个性化推送中心源码</li><li>java-client <a href="https://github.com/mpusher/mpush-client-java">https://github.com/mpusher/mpush-client-java</a> 纯java客户端源码</li><li>android sdk&amp;demo <a href="https://github.com/mpusher/mpush-android">https://github.com/mpusher/mpush-android</a> 安卓SDK和DEMO源码</li><li>IOS sdk(swift) <a href="https://github.com/mpusher/mpush-client-swift">https://github.com/mpusher/mpush-client-swift</a> swift版客户端源码</li><li>IOS sdk(OC) <a href="https://github.com/mpusher/mpush-client-oc">https://github.com/mpusher/mpush-client-oc</a> Object C 客户端源码</li><li>websoket(JS) <a href="https://github.com/mpusher/mpush-client-js">https://github.com/mpusher/mpush-client-js</a> websocket js 客户端源码</li></ul><h3 id="码云源码"><a href="#码云源码" class="headerlink" title="码云源码"></a>码云源码</h3><ul><li>group <a href="http://git.oschina.net/mpush">http://git.oschina.net/mpush</a> 源代码空间</li><li>server <a href="http://git.oschina.net/mpush/mpush">http://git.oschina.net/mpush/mpush</a> 服务端源码</li><li>alloc <a href="http://git.oschina.net/mpush/alloc">http://git.oschina.net/mpush/alloc</a> 调度器源码</li><li>java-client <a href="http://git.oschina.net/mpush/mpush-client-java">http://git.oschina.net/mpush/mpush-client-java</a> 纯java客户端源码</li><li>android sdk&amp;demo <a href="http://git.oschina.net/mpush/mpush-android">http://git.oschina.net/mpush/mpush-android</a> 安卓SDK和DEMO源码</li><li>IOS sdk(swift) <a href="http://git.oschina.net/mpush/mpush-client-swift">http://git.oschina.net/mpush/mpush-client-swift</a> swift版客户端源码</li></ul><h3 id="服务部署"><a href="#服务部署" class="headerlink" title="服务部署"></a>服务部署</h3><h3 id="部署提示："><a href="#部署提示：" class="headerlink" title="部署提示："></a>部署提示：</h3><ol><li><a href="https://github.com/mywiki/mpush-doc/blob/master/SUMMARY.md">详细部署文档请点此查看</a>，以下仅仅是mpush server 本身的部署</li><li>mpush 服务只依赖于zookeeper和redis，当然还有JDK&gt;=1.8</li></ol><h3 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h3><ol><li>安装<code>jdk 1.8</code> 以上版本并设置<code>%JAVA_HOME％</code></li><li>安装<code>zookeeper</code> (安装配置步骤略)</li><li>安装<code>Redis</code> (安装配置步骤略)</li><li>下载<code>mpush server</code>最新的正式包<a href="https://github.com/mpusher/mpush/releases">https://github.com/mpusher/mpush/releases</a><br>(也可以自己根据源码构建:<code>mvn clean package -Pzip,pub</code>)</li><li>解压下载的tar包<code>tar -zvxf mpush-release-x.y.z.tar.gz</code>到 mpush 目录, 结构如下</li></ol><p>&gt;drwxrwxr-x 2 shinemo shinemo 4096 Aug 20 09:30 bin —&gt; 启动脚本<br>&gt;drwxrwxr-x 2 shinemo shinemo 4096 Aug 20 09:52 conf —&gt; 配置文件<br>&gt;drwxrwxr-x 2 shinemo shinemo 4096 Aug 20 09:29 lib —&gt; 核心类库<br>&gt;drwxrwxr-x 1 shinemo shinemo 1357 May 31 11:07 LICENSE<br>&gt;drwxrwxr-x 2 shinemo shinemo 4096 Aug 20 09:32 logs —&gt; 日志目录<br>&gt;drwxrwxr-x 1 shinemo shinemo 4096 May 31 11:07 README.md<br>&gt;drwxrwxr-x 2 shinemo shinemo 4096 Aug 20 09:52 tmp</p><ol><li><p>修改 conf 目录下的 <code>vi mpush.conf</code>文件, <code>mpush.conf</code>里的配置项会覆盖同目录下的<code>reference.conf</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> mp.log.level=debug</span><br><span class="line"> mp.core.min-heartbeat=10s</span><br><span class="line"> mp.core.max-heartbeat=10s</span><br><span class="line"> mp.core.compress-threshold=10k //启用压缩阀值</span><br><span class="line"> mp.zk.server-address=&quot;127.0.0.1:2181&quot; //zookeeper地址</span><br><span class="line"> mp.redis &#123;// redis 集群配置</span><br><span class="line">nodes:[&quot;127.0.0.1:6379&quot;]//格式是ip:port,密码可以没有ip:port</span><br><span class="line"> &#125;</span><br><span class="line"> mp.http.proxy-enabled=true //启用http代理</span><br><span class="line"> mp.net.gateway-server-net=udp //网关服务使用的网络类型tcp/udp</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>如果要修改其他配置请参照</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reference.conf</span><br></pre></td></tr></table></figure><p>文件</p></li><li><p>给bin目录下的脚本增加执行权限<code>chmod u+x *.sh</code></p></li><li><p>执行<code>./mp.sh start</code> 启动服务, 查看帮助<code>./mp.sh</code> 目前支持的命令：</p></li></ol><p>&gt;<code>Usage: ./mp.sh &#123;start|start-foreground|stop|restart|status|upgrade|print-cmd&#125;</code><br>&gt;<br>&gt;<code>set-env.sh</code>用于增加和修改jvm启动参数，比如堆内存、开启远程调试端口、开启jmx等</p><ol><li><code>cd logs</code>目录，<code>cat mpush.out</code>查看服务是否启动成功</li></ol><h3 id="集成开发"><a href="#集成开发" class="headerlink" title="集成开发"></a>集成开发</h3><ol><li>添加Maven依赖到工程</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.github.mpusher&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mpush-boot&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;x.y.z&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>启动入口类 <code>com.mpush.bootstrap.ServerLauncher.java</code><br>&gt;启动调用 start 方法，停止调用 stop 方法</li><li>在工程里添加classpath下添加<code>application.conf</code>配置文件，配置方式参照<a href="http://mpush.mydoc.io/?v=24639&t=134336">服务部署</a>第6点</li><li>spring bean 方式配置</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean class=&quot;com.mpush.bootstrap.ServerLauncher&quot; init-method=&quot;start&quot; destroy-method=&quot;stop&quot;/&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="源码测试"><a href="#源码测试" class="headerlink" title="源码测试"></a>源码测试</h3><ol><li><p><code>git clone https://github.com/mpusher/mpush.git</code></p></li><li><p>导入到eclipse或Intellij IDEA</p></li><li><p>打开<code>mpush-test</code>模块，所有的测试代码都在该模块下</p></li><li><p>如果没有安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">     </span><br></pre></td></tr></table></figure><p>java</p><p>com.mpush.test.spi.SimpleCacheMangerFactory //模拟Redis</p><p>com.mpush.test.spi.SimpleMQClientFactory //模拟MQ pub/sub</p><p>com.mpush.test.spi.SimpleRegistryFactory //模拟ZK服务注册</p><p>com.mpush.test.spi.SimpleDiscoveryFactory //模拟ZK服务发现</p><p>```</p></li><li><p>修改配置文件<code>src/test/resource/application.conf</code>文件修改方式参照<a href="http://mpush.mydoc.io/?v=24639&t=134336">服务部署</a>第6点</p></li><li><p>运行<code>com.mpush.test.sever.ServerTestMain.java</code>启动长链接服务</p></li><li><p>运行<code>com.mpush.test.client.ConnClientTestMain.java</code> 模拟一个客户端</p></li><li><p>运行<code>com.mpush.test.push.PushClientTestMain.java</code> 模拟给用户下发消息</p></li><li><p>可以在控制台观察日志看服务是否正常运行，消息是否下发成功</p></li><li><p>websocket 客户端测试地址 <code>http://127.0.0.1:8080/index.html</code></p></li><li><p>alloc 启动入口 <code>com.shinemo.mpush.alloc.AllocServerMainTest.java</code></p></li></ol><h2 id="第三章-架构分析"><a href="#第三章-架构分析" class="headerlink" title="第三章 架构分析"></a>第三章 架构分析</h2><h3 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/29215003_BWQU.png" alt="架构图"></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li>最左侧三大组件分别是日志系统、监控系统、控制台治理服务</li></ol><ul><li>Log System 主要负责业务日志大输出，主要有链接相关日志、推送链路日志、心跳日志、监控日志等</li><li>Monitor 主要用作系统状态监控，可用于系统调优，包括jvm内存，线程，线程池，系统堆栈，垃圾回收情况，内存泄漏情况等。</li><li>AdminServer主要用于在控制台对单台机器进行控制与探查，比如参看连接数量，在线用户数，取消本级ZK注册，关闭服务等</li></ul><ol><li>右侧三个分别是ZK服务，配置中心和安全工具箱</li></ol><ul><li>ZK Client 主要负责注册长链接ip:port,网关ip:port以及监听各个节点变化，同时增加了缓存</li><li>ConfigCenter 是MPUSH Server 配置化的关键，贯穿到各个模块，非常重要</li><li>Sercutity Box 主要实现了RSA加密，DES加密，会话密钥生成及Session复用(用于快速重连)</li></ul><ol><li>Core模块分别是长链接服务，网关服务，Packet编解码及分发模块，Message序列化及处理模块</li></ol><ul><li>ConnectServer用于维持和客户端之间的TCP通道，主要负责和客户端交互</li><li>GatewayServer用于处理Mpush Server之间的消息交互比如踢人，发送PUSH</li><li>Packet主要是协议部分的编解码和包的完整性校验，最大长度校验等</li><li>PacketReceiver主要负责消息的分发，分发是根据Command来的</li><li>Connection/ConnectionManager主要负责链接管理，定时检查链接空闲情况，是否读写超时，如果链接断开发出相应的事件给路由中心去处理</li><li>Message部分是整个的业务核心处理了处理消息的序列化，还有压缩、加密等，MessageHandler会根据不同消息独立处理自己所属的业务，主要有：心跳响应、握手及密钥交换、快速重连、绑定/解绑用户、http代理、消息推送等</li></ul><ol><li>路由中心主要包括：本地路由，远程路由，用户在线管理三大块</li></ol><ul><li>LocalRouterManager负责维护用户＋设备与链接(connection)之间的关系</li><li>RemoteRouterManager负责维护用户＋设备与链接所在机器IP之间的关系</li><li>UserManager主要处理用户上下线事件的广播，以及单台机器的在线用户及数量的维护和查询</li></ul><ol><li>是MPUSH的缓存部分，目前只支持Redis,支持双写，主备，hash 等特性</li></ol><h3 id="服务依赖关系"><a href="#服务依赖关系" class="headerlink" title="服务依赖关系"></a>服务依赖关系</h3><h3 id="系统调用关系图"><a href="#系统调用关系图" class="headerlink" title="系统调用关系图"></a>系统调用关系图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/29222817_jMc7.png" alt="系统调用关系图"></p><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><ol><li>业务系统是要发送业务消息的服务，所有要推送的消息直接转给MPNS</li><li>MPNS是我们的业务推送系统，负责消息推送，长链接的检查，离线消息存储，用户打标等</li><li>APNS、JPUSH、MPUSH等分别是我们的客户端已经接入的推送系统</li><li>MPNS主要是为了隔离业务系统和各种推送系统，用户使用哪个长链接服务，业务系统不需要感知，统一有MPNS去选择、去切换</li><li>Alloc负责调度维护MPushServer集群，提供查询可用机器列表的接口，详细参见[Alloc实现]</li></ol><h3 id="协议格式"><a href="#协议格式" class="headerlink" title="协议格式"></a>协议格式</h3><h3 id="协议说明"><a href="#协议说明" class="headerlink" title="协议说明"></a>协议说明</h3><ul><li>mpush使用的为自定义私有协议，定长Header + body, 其中header部分固定13个字节。</li><li>心跳固定为一个字节，值为 -33。</li></ul><h3 id="Header-说明"><a href="#Header-说明" class="headerlink" title="Header 说明"></a>Header 说明</h3><table><thead><tr><th>名称</th><th>类型</th><th>长度</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>int</td><td>4</td><td>表示body的长度</td></tr><tr><td>cmd</td><td>byte</td><td>1</td><td>表示消息协议类型</td></tr><tr><td>checkcode</td><td>short</td><td>2</td><td>是根据body生成的一个校验码</td></tr><tr><td>flags</td><td>byte</td><td>1</td><td>表示当前包启用的特性，比如是否启用加密，是否启用压缩</td></tr><tr><td>sessionId</td><td>int</td><td>4</td><td>消息会话标识用于消息响应</td></tr><tr><td>lrc</td><td>byte</td><td>1</td><td>纵向冗余校验，用于校验header</td></tr></tbody></table><h3 id="消息类型"><a href="#消息类型" class="headerlink" title="消息类型"></a>消息类型</h3><h3 id="mpush-目前支持如下消息类型"><a href="#mpush-目前支持如下消息类型" class="headerlink" title="mpush 目前支持如下消息类型"></a>mpush 目前支持如下消息类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public enum Command &#123;</span><br><span class="line">    HEARTBEAT(1),          // 心跳</span><br><span class="line">    HANDSHAKE(2),          // 握手</span><br><span class="line">    LOGIN(3),</span><br><span class="line">    LOGOUT(4),</span><br><span class="line">    BIND(5),               // 绑定用户</span><br><span class="line">    UNBIND(6),             // 解绑用户</span><br><span class="line">    FAST_CONNECT(7),       // 快速重连</span><br><span class="line">    PAUSE(8),</span><br><span class="line">    RESUME(9),</span><br><span class="line">    ERROR(10),             // 错误消息</span><br><span class="line">    OK(11),                // 成功消息</span><br><span class="line">    HTTP_PROXY(12),        // HTTP代理</span><br><span class="line">    KICK(13),              // 踢人</span><br><span class="line">    GATEWAY_KICK(14),</span><br><span class="line">    PUSH(15),              // 推送</span><br><span class="line">    GATEWAY_PUSH(16),</span><br><span class="line">    NOTIFICATION(17),</span><br><span class="line">    GATEWAY_NOTIFICATION(18),</span><br><span class="line">    CHAT(19),</span><br><span class="line">    GATEWAY_CHAT(20),</span><br><span class="line">    GROUP(21),</span><br><span class="line">    GATEWAY_GROUP(22),</span><br><span class="line">    ACK(23),</span><br><span class="line">    UNKNOWN(-1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">##################################################################################################################</span><br><span class="line">#</span><br><span class="line"># NOTICE：</span><br><span class="line">#</span><br><span class="line"># 系统配置文件，所有列出的项是系统所支持全部配置项</span><br><span class="line"># 如果要覆盖某项的值可以添加到mpush.conf中。</span><br><span class="line">#</span><br><span class="line"># 配置文件格式采用HOCON格式。解析库由https://github.com/typesafehub/config提供。</span><br><span class="line"># 具体可参照器说明文档，比如含有特殊字符的字符串必须用双引号包起来。</span><br><span class="line">#</span><br><span class="line">##################################################################################################################</span><br><span class="line"></span><br><span class="line">mp &#123;</span><br><span class="line">    #基础配置</span><br><span class="line">    home=$&#123;user.dir&#125; //程序工作目前</span><br><span class="line"></span><br><span class="line">    #日志配置</span><br><span class="line">    log-level=warn</span><br><span class="line">    log-dir=$&#123;mp.home&#125;/logs</span><br><span class="line">    log-conf-path=$&#123;mp.home&#125;/conf/logback.xml</span><br><span class="line"></span><br><span class="line">    #核心配置</span><br><span class="line">    core &#123;</span><br><span class="line">        max-packet-size=10k //系统允许传输的最大包的大小</span><br><span class="line">        compress-threshold=10k //数据包启用压缩的临界值，超过该值后对数据进行压缩</span><br><span class="line">        min-heartbeat=3m //最小心跳间隔</span><br><span class="line">        max-heartbeat=3m //最大心跳间隔</span><br><span class="line">        max-hb-timeout-times=2 //允许的心跳连续超时的最大次数</span><br><span class="line">        session-expired-time=1d //用于快速重连的session 过期时间默认1天</span><br><span class="line">        epoll-provider=netty //nio:jdk自带，netty:由netty实现</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #安全配置</span><br><span class="line">    security &#123;</span><br><span class="line">        #rsa 私钥、公钥key长度为1024;可以使用脚本bin/rsa.sh生成, @see com.mpush.tools.crypto.RSAUtils#main</span><br><span class="line">        private-key=&quot;MIIBNgIBADANBgkqhkiG9w0BAQEFAASCASAwggEcAgEAAoGBAKCE8JYKhsbydMPbiO7BJVq1pbuJWJHFxOR7L8Hv3ZVkSG4eNC8DdwAmDHYu/wadfw0ihKFm2gKDcLHp5yz5UQ8PZ8FyDYvgkrvGV0ak4nc40QDJWws621dm01e/INlGKOIStAAsxOityCLv0zm5Vf3+My/YaBvZcB5mGUsPbx8fAgEAAoGAAy0+WanRqwRHXUzt89OsupPXuNNqBlCEqgTqGAt4Nimq6Ur9u2R1KXKXUotxjp71Ubw6JbuUWvJg+5Rmd9RjT0HOUEQF3rvzEepKtaraPhV5ejEIrB+nJWNfGye4yzLdfEXJBGUQzrG+wNe13izfRNXI4dN/6Q5npzqaqv0E1CkCAQACAQACAQACAQACAQA=&quot;</span><br><span class="line">        public-key=&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCghPCWCobG8nTD24juwSVataW7iViRxcTkey/B792VZEhuHjQvA3cAJgx2Lv8GnX8NIoShZtoCg3Cx6ecs+VEPD2fBcg2L4JK7xldGpOJ3ONEAyVsLOttXZtNXvyDZRijiErQALMTorcgi79M5uVX9/jMv2Ggb2XAeZhlLD28fHwIDAQAB&quot;</span><br><span class="line">        aes-key-length=16 //AES key 长度</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #网络配置</span><br><span class="line">    net &#123;</span><br><span class="line">        connect-server-port=3000 //长链接服务对外端口, 公网端口</span><br><span class="line">        admin-server-port=3002 //控制台服务端口, 内部端口</span><br><span class="line">        gateway-server-port=3001 //网关服务端口, 内部端口</span><br><span class="line">        gateway-client-port=4000 //UDP 客户端端口</span><br><span class="line">        gateway-server-net=udp //网关服务使用的网络类型tcp/udp</span><br><span class="line">        gateway-server-multicast=&quot;239.239.239.88&quot; //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效</span><br><span class="line">        gateway-client-multicast=&quot;239.239.239.99&quot; //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效</span><br><span class="line">        public-host-mapping &#123; //本机局域网IP和公网IP的映射关系</span><br><span class="line">            //&quot;10.0.10.156&quot;:&quot;111.1.32.137&quot;</span><br><span class="line">            //&quot;10.0.10.166&quot;:&quot;111.1.33.138&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        traffic-shaping &#123; //流量整形配置</span><br><span class="line">            gateway-client &#123;</span><br><span class="line">                enabled:true</span><br><span class="line">                check-interval:100ms</span><br><span class="line">                write-global-limit:30k</span><br><span class="line">                read-global-limit:0</span><br><span class="line">                write-channel-limit:3k</span><br><span class="line">                read-channel-limit:0</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            gateway-server &#123;</span><br><span class="line">                enabled:true</span><br><span class="line">                check-interval:100ms</span><br><span class="line">                write-global-limit:0</span><br><span class="line">                read-global-limit:30k</span><br><span class="line">                write-channel-limit:0</span><br><span class="line">                read-channel-limit:3k</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            connect-server &#123;</span><br><span class="line">                enabled:false</span><br><span class="line">                check-interval:100ms</span><br><span class="line">                write-global-limit:0</span><br><span class="line">                read-global-limit:100k</span><br><span class="line">                write-channel-limit:3k</span><br><span class="line">                read-channel-limit:3k</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #Zookeeper配置</span><br><span class="line">    zk &#123;</span><br><span class="line">        server-address=&quot;127.0.0.1:2181&quot;</span><br><span class="line">        namespace=mpush</span><br><span class="line">        digest=mpush //zkCli.sh acl 命令 addauth digest mpush</span><br><span class="line">        local-cache-path=/</span><br><span class="line">        retry &#123;</span><br><span class="line">            #initial amount of time to wait between retries</span><br><span class="line">            baseSleepTimeMs=3s</span><br><span class="line">            #max number of times to retry</span><br><span class="line">            maxRetries=3</span><br><span class="line">            #max time in ms to sleep on each retry</span><br><span class="line">            maxSleepMs=5s</span><br><span class="line">        &#125;</span><br><span class="line">        connectionTimeoutMs=5s</span><br><span class="line">        sessionTimeoutMs=5s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #Redis集群配置</span><br><span class="line">    redis &#123;</span><br><span class="line">        write-to-zk=false</span><br><span class="line">        password=&quot;&quot;//your password</span><br><span class="line">        cluster-model=single//single,cluster</span><br><span class="line">        nodes:[]//[&quot;127.0.0.1:6379&quot;]格式ip:port:password,密码可以不设置ip:port</span><br><span class="line">        config &#123;</span><br><span class="line">            maxTotal:8,</span><br><span class="line">            maxIdle:4,</span><br><span class="line">            minIdle:1,</span><br><span class="line">            lifo:true,</span><br><span class="line">            fairness:false,</span><br><span class="line">            maxWaitMillis:5000,</span><br><span class="line">            minEvictableIdleTimeMillis:300000,</span><br><span class="line">            softMinEvictableIdleTimeMillis:1800000,</span><br><span class="line">            numTestsPerEvictionRun:3,</span><br><span class="line">            testOnCreate:false,</span><br><span class="line">            testOnBorrow:false,</span><br><span class="line">            testOnReturn:false,</span><br><span class="line">            testWhileIdle:false,</span><br><span class="line">            timeBetweenEvictionRunsMillis:60000,</span><br><span class="line">            blockWhenExhausted:true,</span><br><span class="line">            jmxEnabled:false,</span><br><span class="line">            jmxNamePrefix:pool,</span><br><span class="line">            jmxNameBase:pool</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #HTTP代理配置</span><br><span class="line">    http &#123;</span><br><span class="line">        proxy-enabled=false //启用Http代理</span><br><span class="line">        max-conn-per-host=5 //每个域名的最大链接数, 建议web服务nginx超时时间设长一点, 以便保持长链接</span><br><span class="line">        default-read-timeout=10s //请求超时时间</span><br><span class="line">        max-content-length=5m //response body 最大大小</span><br><span class="line">        dns-mapping &#123; //域名映射外网地址转内部IP, 域名部分不包含端口号</span><br><span class="line">            //&quot;mpush.com&quot;:[&quot;127.0.0.1:8080&quot;, &quot;127.0.0.1:8081&quot;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #线程池配置</span><br><span class="line">    thread &#123;</span><br><span class="line">        pool &#123;</span><br><span class="line">            boss &#123; //netty server boss</span><br><span class="line">                min:1 //boss 只需要一个线程即可</span><br><span class="line">                max:1</span><br><span class="line">                queue-size:0</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            work &#123; //netty server boss</span><br><span class="line">                min:0 //0表示线程数根据cpu核数动态调整(2*cpu)</span><br><span class="line">                max:0</span><br><span class="line">                queue-size:0</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            event-bus &#123;</span><br><span class="line">                min:4</span><br><span class="line">                max:4</span><br><span class="line">                queue-size:10000 //大量的online，offline，</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            http-proxy &#123;</span><br><span class="line">                min:0 //0表示线程数根据cpu核数动态调整(2*cpu)</span><br><span class="line">                max:0</span><br><span class="line">                queue-size:0</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            biz &#123; //其他业务</span><br><span class="line">                min:1</span><br><span class="line">                max:4</span><br><span class="line">                queue-size:16</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            mq &#123; //用户上下线消息, 踢人等</span><br><span class="line">                min:2</span><br><span class="line">                max:4</span><br><span class="line">                queue-size:10000</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            push-callback &#123; //消息推送</span><br><span class="line">                min:2</span><br><span class="line">                max:2</span><br><span class="line">                queue-size:0</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            push-center &#123; //消息推送</span><br><span class="line">                min:4</span><br><span class="line">                max:4</span><br><span class="line">                queue-size:0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #推送消息流控</span><br><span class="line">    push &#123;</span><br><span class="line">       flow-control &#123; //qps = limit/(duration)</span><br><span class="line">            global:&#123; //针对非广播推送的流控，全局有效</span><br><span class="line">                limit:5000 //qps = 5000</span><br><span class="line">                max:0 //UN limit</span><br><span class="line">                duration:1s //1s</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            broadcast:&#123; //针对广播消息的流控，单次任务有效</span><br><span class="line">                limit:3000 //qps = 3000</span><br><span class="line">                max:100000 //10w</span><br><span class="line">                duration:1s //1s</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #系统监控配置</span><br><span class="line">    monitor &#123;</span><br><span class="line">        dump-dir=$&#123;mp.home&#125;/tmp</span><br><span class="line">        dump-stack=false //是否定时dump堆栈</span><br><span class="line">        dump-period=1m  //多久监控一次</span><br><span class="line">        print-log=true //是否打印监控日志</span><br><span class="line">        profile-enabled=true //开启性能监控</span><br><span class="line">        profile-slowly-duration=10ms //耗时超过10ms打印日志</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #SPI扩展配置</span><br><span class="line">    spi &#123;</span><br><span class="line">        thread-pool-factory:&quot;com.mpush.tools.thread.pool.DefaultThreadPoolFactory&quot;</span><br><span class="line">        dns-mapping-manager:&quot;com.mpush.common.net.HttpProxyDnsMappingManager&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h3><h3 id="模块依赖关系图"><a href="#模块依赖关系图" class="headerlink" title="模块依赖关系图"></a>模块依赖关系图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/29224431_zx6f.jpg" alt="系统模块"></p><h3 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```mpush-boot```：是服务端启动入口模块，主要控制server启动、停止流程</span><br><span class="line">```mpush-tools```：mpush用到的一些工具类，包括线程池，加密，配置文件解析等等</span><br><span class="line">```mpush-common```：定义了mpush-client模块和mpush-core模块都会用到的类，主要是消息、路由等</span><br></pre></td></tr></table></figure><p><code>mpush-monitor</code>：服务监控模块主要监控JVM，线程池，JMX，服务状态统计，性能统计等</p><h3 id="SPI定制化"><a href="#SPI定制化" class="headerlink" title="SPI定制化"></a>SPI定制化</h3><h3 id="什么是-建议直接百度java-spi-mpush-使用SPI的目的-肯定是为了扩展性，在不想修改源码的情况下，去替换系统原有的实现，代价最小也最灵活。-mpush目前支持的SPI列表-所有受支持的SPI都在mpuhs-api-ServerEventListenerFactory-BindValidatorFactory-ClientClassifierFactory-PushHandlerFactory-ExecutorFactory-CacheManagerFactory-MQClientFactory-ServiceRegistryFactory-ServiceDiscoveryFactory-PushListenerFactory-开发流程-新建一个maven工程，并加入mpush-api模块的依赖-实现要定制的接口和其对应的Factory-在resources目录下创建META-INF-services目录-创建名字为com-mpush-api-spi-xxx-XXXFactory-的文件，即对应的接口名"><a href="#什么是-建议直接百度java-spi-mpush-使用SPI的目的-肯定是为了扩展性，在不想修改源码的情况下，去替换系统原有的实现，代价最小也最灵活。-mpush目前支持的SPI列表-所有受支持的SPI都在mpuhs-api-ServerEventListenerFactory-BindValidatorFactory-ClientClassifierFactory-PushHandlerFactory-ExecutorFactory-CacheManagerFactory-MQClientFactory-ServiceRegistryFactory-ServiceDiscoveryFactory-PushListenerFactory-开发流程-新建一个maven工程，并加入mpush-api模块的依赖-实现要定制的接口和其对应的Factory-在resources目录下创建META-INF-services目录-创建名字为com-mpush-api-spi-xxx-XXXFactory-的文件，即对应的接口名" class="headerlink" title="什么是  建议直接百度java spi### mpush 使用SPI的目的    肯定是为了扩展性，在不想修改源码的情况下，去替换系统原有的实现，代价最小也最灵活。 ### mpush目前支持的SPI列表    __所有受支持的SPI都在mpuhs-api* ServerEventListenerFactory* BindValidatorFactory* ClientClassifierFactory* PushHandlerFactory* ExecutorFactory* CacheManagerFactory* MQClientFactory* ServiceRegistryFactory* ServiceDiscoveryFactory* PushListenerFactory### 开发流程 * 新建一个maven工程，并加入mpush-api模块的依赖 * 实现要定制的接口和其对应的Factory * 在resources目录下创建META-INF.services目录 * 创建名字为com.mpush.api.spi.xxx.XXXFactory```的文件，即对应的接口名"></a>什么是<code>  建议直接百度</code>java spi<code>### mpush 使用SPI的目的    肯定是为了扩展性，在不想修改源码的情况下，去替换系统原有的实现，代价最小也最灵活。 ### mpush目前支持的SPI列表    __所有受支持的SPI都在</code>mpuhs-api<code>* </code>ServerEventListenerFactory<code>* </code>BindValidatorFactory<code>* </code>ClientClassifierFactory<code>* </code>PushHandlerFactory<code>* </code>ExecutorFactory<code>* </code>CacheManagerFactory<code>* </code>MQClientFactory<code>* </code>ServiceRegistryFactory<code>* </code>ServiceDiscoveryFactory<code>* </code>PushListenerFactory<code>### 开发流程 * 新建一个maven工程，并加入mpush-api模块的依赖 * 实现要定制的接口和其对应的Factory * 在resources目录下创建META-INF.services目录 * 创建名字为</code>com.mpush.api.spi.xxx.XXXFactory```的文件，即对应的接口名</h3><ul><li>文件的内容为实现类的全名(packageName+className)</li><li>通过mvn打成jar包，并把其放到mpush/lib目录</li><li>重启mpush server 就会优先加载用户提供的实现来覆盖原有的默认实现</li></ul><h2 id="第四章-深度进阶"><a href="#第四章-深度进阶" class="headerlink" title="第四章 深度进阶"></a>第四章 深度进阶</h2><h3 id="密钥交换"><a href="#密钥交换" class="headerlink" title="密钥交换"></a>密钥交换</h3><h3 id="交换方案"><a href="#交换方案" class="headerlink" title="交换方案"></a>交换方案</h3><ol><li>算法上同时使用了非对称加密算法(RSA)和对称加密算法(AES)。</li><li>在客户端预埋好由服务端生成好的公钥。</li><li>客户端生成随机数R1，并通过RSA公钥加密后发送给服务端。</li><li>服务端用RSA私钥解密客户端发送的数据取得R1,同时生成随机数R2,并以R1为Key使用AES加密R2然后把加密后的数据发送到客户端。</li><li>客户端以R1为Key使用AES解密服务发送的数据取得R2</li><li>此时客户端和服务的同时都拥有随机数R1、R2，然后使用相同的混淆算法生成会话密钥(sessionKey), 之后传输的数据都以此值作为AES加密的密钥。</li></ol><h3 id="交换流程"><a href="#交换流程" class="headerlink" title="交换流程"></a>交换流程</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/29235425_gXHU.png" alt="密钥交换流程图"></p><h3 id="握手及快速重连"><a href="#握手及快速重连" class="headerlink" title="握手及快速重连"></a>握手及快速重连</h3><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01184038_oHrJ.png" alt="握手快速重连"></p><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ol><li>tcp连接建立后，第一个消息就是握手或快速重连消息。</li><li>Handshake的目的是为了生成会话密钥，同时会把生成好的密钥存储到redis，并把key返回给客户端，为快速重连使用</li><li>FastConnect是基于Handshake生成的sessionId来配合使用的，目的是为了减少RSA加密的使用次数，特别是网络较差的情况，毕竟RSA加密想对还是比较耗时的，客户端只需把sessionId传给服务端，其就能从redis中取出上次会话信息，恢复到上次握手成功之后的会话状态，这个过程不需要任何加密和密钥交换，相对会比较快速。</li></ol><h3 id="给连接绑定用户"><a href="#给连接绑定用户" class="headerlink" title="给连接绑定用户"></a>给连接绑定用户</h3><h3 id="时序图-1"><a href="#时序图-1" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01185848_Uf42.png" alt="给连接绑定用户"></p><h3 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h3><ol><li>握手成功后表示安全通道已经建立，但同时还要给连接设置用户甚至标签，只有这样业务才能更好的去识别用户（没有用户的业务是另外一回事）。</li><li>设置用户非常简单，只需把其存储到session即可，但因为要支持集群的，就必须把用户的位置信息（或者叫路由信息）发布出去，让集群里的其他机器能够通过useId来查找用户的位置（在哪台机器），因为客户端的TCP连接在哪台机器，那么和这个客户端的所有数据传输都必须经过这台机器的这个连接！(很多同学会问为什么不把connection存储到redis)。</li><li>路由中心有两部分组成：本地路由和远程路由，本地路由数据结构为userId-&gt;connection的map，数据存储在本机内存；远程路由数据结构为userId-&gt;connServer机器ip，数据存储在redis;所以要给一个用户发信息必须先查远程路由，找到用户在哪台机器，然后把消息发给这台机器，让其去本地路由查找connection并通过查找到的TCP连接把消息发给用户。</li><li>MessageCenter之前使用的redis提供的pub/sub实现的，也可以自己搭建MQ来实现，最新版踢人已经不再使用pub/sub，而是直接使用udp网关实现。</li><li>踢人：之所以会有踢人的情况是根据业务需要来的，有些业务系统是不允许同一个用户在多个设备同时在线的，或者只允许不同类型的终端同时在线，比如QQ,手机和PC可以同时在线，但同一个帐号在两台PC登录时其中一个肯定会被踢下线，mpush的踢人要表达的也是同一个意思。</li><li>顺便提一下关于同时在线的策略，或者说端的类型的定义mpush已经支持SPI定制化。</li></ol><h3 id="消息推送流程"><a href="#消息推送流程" class="headerlink" title="消息推送流程"></a>消息推送流程</h3><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01193442_ABeq.png" alt="消息推送流程"></p><h3 id="说明-4"><a href="#说明-4" class="headerlink" title="说明"></a>说明</h3><ol><li>PushSender是消息推送的入口，它的实现在mpush-client模块属于服务端SDK，主要包含有GatewayClient, RemoteRouterManager; RemoteRouterManager用于定位用户在哪台机器，有没有在线等，而GatewayClient用于把要发送的的业务消息发给用户TCP连接所在的机器。</li><li>GatewayServer负责接收GatewayClient发送过来的消息，然后到LocalRouterManager查找用户的Connection，然后把消息交由其下发。</li><li>ConnectionServer 负责维持所有连接到当前机器的客户端连接，所以消息最终还是尤其下发（图比较简单，但能表达核心流程）。</li></ol><h3 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h3><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ul><li>问题<br>&gt; 前面有提到过http代理这个东西，但很多人不知道这个东西该怎么用，或者说有什么用？以及在什么场景下使用？</li><li>移动APP通信场景分析<br>&gt; 从使用的链接情况来看，一般可以分为两大类：TCP长链接，HTTP短链接；长链接用于消息推送或IM等场景，HTTP用于业务数据的查询或修改。虽然不是所有的APP都需要IM功能，但大多应用都需要消息推送功能。为了推送消息，APP必须维持一根长链接，但大部分时间除了心跳这根链接上是没多少消息在传输的，特别是非IM类的APP，因为这类应用并没大量的消息要不停的推送，维持长链接只是为了消息的及时到达，这势必造成了很大的资源浪费！</li><li>解决方案</li></ul><p>&gt; 针对上述情况MPUSH提供了Http代理方案，目的一是充分利用push通道，而是提高数据传输效率节省电量，节省流量，提供比http更高的安全性。</p><ul><li>实现原理</li></ul><p>&gt; MPushClient 提供了一个叫<code>sendHttp</code>的方法，该方法用于把客户端原本要通过HTTP方式发送的请求，__全部通过PUSH通道转发__，实现整个链路的长链接化；通过这种方式应用大大减少Http短链接频繁的创建，不仅仅节省电量，经过测试证明请求时间比原来至少缩短一倍，而且MPush提供的还有数据压缩功能，对于比较大的数据还能大大节省流量(压缩率4-10倍)，更重要的是所有通过代理的数据都是加密后传输的，大大提高了安全性！</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><ul><li>服务端</li></ul><ol><li><p>修改<code>mpush.conf</code>增加<code>mp.http.proxy-enabled=true</code>启用http代理</p></li><li><p>修改<code>mpush.conf</code>增加<code>dns-mapping</code>配置，示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mp.http.dns-mapping=&#123;//域名映射外网地址转内部IP</span><br><span class="line">  &quot;api.jituancaiyun.com&quot;:[&quot;10.0.10.1:8080&quot;, &quot;10.0.10.2:8080&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&gt; 说明：因为<code>mpush server</code>要做http代理转发，而客户端传过来的一般是域名比如<code>http://api.jituancaiyun.com/get/userInfo.json</code>为了不到公网上再绕一圈建议把mpush server 和业务服务(api.jituancaiyun.com)部署到同一个局域网，并增域名api.jituancaiyun.com到提供该服务的集群机器内网ip之间的一个映射，这样<code>mpush server</code>就可以通过局域网把请求转发到具体到业务服务，效率更高！</p></li></ol><ul><li>客户端</li></ul><ol><li><p>设置<code>ClientConfig.setEnableHttpProxy(true)</code>来启用客户端代理。</p></li><li><p>通过<code>Client.sendHttp(HttpRequest request)</code>方法来发送请求。</p><p>&gt; AndroidSDK通过<code>com.mpush.android.MPush#sendHttpProxy(HttpRequest request)</code>来发送比较合适。</p></li></ol><h3 id="流程分析"><a href="#流程分析" class="headerlink" title="流程分析"></a>流程分析</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01195523_qymD.png" alt="http proxy 流程图"></p><h3 id="说明-5"><a href="#说明-5" class="headerlink" title="说明"></a>说明</h3><ol><li><code>Client</code>代表App业务比如查询用户信息的接口</li><li><code>MPushApiProxy</code>是一个工具类用于负责处理当前请求是使用普通的HTTP还是使用MPush长链接通道，这个类在SDK中说不存在的，是我们公司内部的业务，实现起来也很简单，建议Android工程中增加这么一个角色，而不是到处直接去依赖Mpush的代码，方便以后解耦。</li><li><code>MPushClient</code>这个SDK已经提供，用于把Http协议打包成mpush协议。</li><li><code>HttpProxyHandler</code>__包括后面的几个组件都是服务端业务组件。__用于接收客户端传过来的请求并反解为Http协议，然后通过DNSMapping找到域名对应的局域网IP，再通过内置的HttpClient，把请求转发给业务WEB服务，并把业务服务的返回值(HttpResponse)打包成MPush协议发送到客户端。</li><li><code>DNSMapping</code>负责通过域名解析成局域网IP，并具有负载均衡以及简单的健康检查功能(针对所配置的WEB服务)</li><li><code>HttpClient</code>目前使用的是用<code>Netty</code>实现的全异步的一个<code>HttpClient</code>，负责通过http的方式请求业务服务。</li><li>Nginx是业务服务，也可以是Tomcat，<strong>特别需要建议的是链接超时时间配置长一些。</strong></li></ol><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>为什么要这样实现？因为这样做对原有的业务系统侵入特别低，如果<code>MPushApiProxy</code>这个组件设计的好，对于最两边的业务组件/服务(Client,Nginx)，对请求方式应该是无感知的，这个角色是无法区分到底请求是通过普通的Http方式发送出去的还是通过长链接代理的方式发送的！！！</p><p><strong>另附上通过Http Proxy 实现双向通信交互图</strong></p><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01195617_S2ll.png" alt="Http Proxy 实现双向通信"></p><h3 id="消息分发"><a href="#消息分发" class="headerlink" title="消息分发"></a>消息分发</h3><h3 id="消息序列化"><a href="#消息序列化" class="headerlink" title="消息序列化"></a>消息序列化</h3><h3 id="消息加密与压缩"><a href="#消息加密与压缩" class="headerlink" title="消息加密与压缩"></a>消息加密与压缩</h3><h3 id="线程池配置与定制"><a href="#线程池配置与定制" class="headerlink" title="线程池配置与定制"></a>线程池配置与定制</h3><h3 id="上行PUSH"><a href="#上行PUSH" class="headerlink" title="上行PUSH"></a>上行PUSH</h3><h3 id="接口产生背景"><a href="#接口产生背景" class="headerlink" title="接口产生背景"></a>接口产生背景</h3><p>作为一个纯粹推送系统，最初是没有发送上行消息接口的只有下行的消息，毕竟MPush不是IM系统。<br>后来在很多同学的要求下，就增加了此接口用于cleint上报消息。</p><h3 id="接口的使用"><a href="#接口的使用" class="headerlink" title="接口的使用"></a>接口的使用</h3><ol><li>此接口和服务端下行Push保持相同的协议，可以互发消息，默认服务端没有对消息做任何业务上的处理，收到后直接丢弃。</li><li>同时MPush提供了SPI的方式来接管客户端发过来的消息，具体请参考<a href="http://mpush.mydoc.io/?v=24639&t=134851">第三章 系统架构 - SPI定制化</a>。</li><li>如果没有特殊需求客户端上行消息建议使用Http Proxy模式。</li></ol><h3 id="广播推送与流控"><a href="#广播推送与流控" class="headerlink" title="广播推送与流控"></a>广播推送与流控</h3><h3 id="什么是广播推送？"><a href="#什么是广播推送？" class="headerlink" title="什么是广播推送？"></a>什么是广播推送？</h3><p>按推送用户范围来划分，MPush目前支持三种方式的推送：<br>\1. 单用户推送，推送消息给指定的某个用户。<br>\2. 批量推送，业务自己圈定一批用户，推送同一条消息给圈定的用户。<br>\3. 全网推送，推送消息给所有的在线用户。<br>这里所说的广播推送指的就是第三种用户范围的推送。</p><h3 id="为什么广播推送要控制流量？"><a href="#为什么广播推送要控制流量？" class="headerlink" title="为什么广播推送要控制流量？"></a>为什么广播推送要控制流量？</h3><p>因为要推送消息给全网在线用户，用户量可能非常大，为了防止瞬时流量过大，所有加了入了防过载保护：流量控制。</p><h3 id="流量控制的使用"><a href="#流量控制的使用" class="headerlink" title="流量控制的使用"></a>流量控制的使用</h3><h4 id="1-单任务流量控制"><a href="#1-单任务流量控制" class="headerlink" title="1. 单任务流量控制"></a>1. 单任务流量控制</h4><h4 id="2-全局流量控制"><a href="#2-全局流量控制" class="headerlink" title="2. 全局流量控制"></a>2. 全局流量控制</h4><h3 id="广播推送条件过滤"><a href="#广播推送条件过滤" class="headerlink" title="广播推送条件过滤"></a>广播推送条件过滤</h3><h3 id="为什么要对用户进行过滤？"><a href="#为什么要对用户进行过滤？" class="headerlink" title="为什么要对用户进行过滤？"></a>为什么要对用户进行过滤？</h3><p>因为广播是针对所有在线用户，为了更精准的推送，必须对目标用户进行筛选，才能满足个性化的业务需求。</p><h3 id="目前支持的筛选纬度"><a href="#目前支持的筛选纬度" class="headerlink" title="目前支持的筛选纬度"></a>目前支持的筛选纬度</h3><ol><li><code>tag</code>：业务自己打的标签</li><li><code>userId</code>：用户登录ID</li><li><code>clientVersion</code>：客户端版本</li><li><code>osName</code>：客户端系统平台</li><li><code>osVersion</code>：客户端系统版本</li></ol><h3 id="目前支持的表达式"><a href="#目前支持的表达式" class="headerlink" title="目前支持的表达式"></a>目前支持的表达式</h3><p>目前只支持</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### 使用用例</span><br><span class="line">具体请参照</span><br></pre></td></tr></table></figure><p>com.mpush.api.push.PushContext.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 灰度20%的在线用户：</span><br></pre></td></tr></table></figure><p>userId % 100 &lt; 20</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 包含test标签的用户：</span><br></pre></td></tr></table></figure><p>tags!=null &amp;&amp; tags.indexOf(“test”)!=-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 客户端版本号大于2.0的安卓用户：</span><br></pre></td></tr></table></figure><p>clientVersion.indexOf(“android”)!=-1 &amp;&amp; clientVersion.replace(/[^\d]/g,””) &gt; 20```</p><h3 id="消息ACK"><a href="#消息ACK" class="headerlink" title="消息ACK"></a>消息ACK</h3><h3 id="离线消息"><a href="#离线消息" class="headerlink" title="离线消息"></a>离线消息</h3><ol><li>请参考<code>demo</code>工程<a href="https://github.com/mpusher/mpns">https://github.com/mpusher/mpns</a></li><li>用户上线后客户端如何推送(获取)离线消息</li></ol><p>&gt; 推荐采用拉取的方式，可以通过一个http接口，分页拉取</p><h3 id="服务端启动流程分析"><a href="#服务端启动流程分析" class="headerlink" title="服务端启动流程分析"></a>服务端启动流程分析</h3><h3 id="日志模块性能优化"><a href="#日志模块性能优化" class="headerlink" title="日志模块性能优化"></a>日志模块性能优化</h3><h3 id="JVM监控与性能分析"><a href="#JVM监控与性能分析" class="headerlink" title="JVM监控与性能分析"></a>JVM监控与性能分析</h3><h2 id="第五章-关联服务"><a href="#第五章-关联服务" class="headerlink" title="第五章 关联服务"></a>第五章 关联服务</h2><h3 id="Alloc服务"><a href="#Alloc服务" class="headerlink" title="Alloc服务"></a>Alloc服务</h3><h3 id="alloc-的作用"><a href="#alloc-的作用" class="headerlink" title="alloc 的作用"></a>alloc 的作用</h3><blockquote><ul><li>alloc 是针对client提供的一个轻量级的负载均衡服务</li><li>每次客户端在链接MPUSH server之前都要调用下该服务</li><li>以获取可用的MPUSH server列表,然后按顺序去尝试建立TCP链接,直到链接建立成功</li></ul></blockquote><h3 id="对外提供的接口定义"><a href="#对外提供的接口定义" class="headerlink" title="对外提供的接口定义"></a>对外提供的接口定义</h3><blockquote><p>接口类型 ：HTTP</p><p>Method :GET 参数 ：无 返回值格式 : ip:port,ip:port content-type : text/plain;charset=utf-8</p></blockquote><h3 id="服务部署-1"><a href="#服务部署-1" class="headerlink" title="服务部署"></a>服务部署</h3><ol><li>下载alloc最新包<a href="https://github.com/mpusher/alloc/releases">https://github.com/mpusher/alloc/releases</a></li><li>解压下载的tar包<code>tar -zvxf alloc-release-x.x.x.tar.gz</code></li><li>修改 conf 目录下的 <code>vi mpush.conf</code>文件, 修改方式参照<code>mpush server</code> 部署</li><li>给bin目录下的脚本增加执行权限<code>chmod u+x *.sh</code></li><li>执行<code>./mp.sh start</code> 启动服务, 查看帮助直接执行<code>./mp.sh</code></li><li><code>cd logs</code>目录，<code>cat mpush.out</code>查看服务是否启动成功</li></ol><h3 id="客户端建立连接流程"><a href="#客户端建立连接流程" class="headerlink" title="客户端建立连接流程"></a>客户端建立连接流程</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01201926_2SMA.png" alt="mpush连接建立流程"></p><h3 id="实现讲解"><a href="#实现讲解" class="headerlink" title="实现讲解"></a>实现讲解</h3><ol><li>服务部署可以集成Tomcat或自己实现一个HttpServer比如基于Netty实现</li><li>mpush server 集群列表可以从Zookeeper查询，目前提供的有ZK查询客户端</li><li>如果要实现负载均衡可以考虑使用以下几种方式实现：</li></ol><p>&gt; 随机，每次从mpush server列表随机选取一个地址返回给客户端<br>&gt;<br>&gt; 轮播，每次把mpush server列表依次返回给客户端<br>&gt;<br>&gt; 按链接数量排序，链接数少的排最前面</p><h3 id="Alloc服务存在的意义"><a href="#Alloc服务存在的意义" class="headerlink" title="Alloc服务存在的意义"></a>Alloc服务存在的意义</h3><p>刚开始看MPUSH的童鞋可能会有疑问，这玩意有什么用，为什么不直接连mpush server ?</p><p>如果直连你可能遇到一些问题，比如你的mpush server 可能不止一台，你怎么去选择连哪一台？</p><p>其中某台服务挂了怎么办？要更换机器又怎么办？这时你必然希望有一台前置服务来对整个mpush集群进行统一调度。</p><h3 id="MPNS"><a href="#MPNS" class="headerlink" title="MPNS"></a>MPNS</h3><h3 id="个性化推送平台"><a href="#个性化推送平台" class="headerlink" title="个性化推送平台"></a>个性化推送平台</h3><h2 id="第六章-SDK接入"><a href="#第六章-SDK接入" class="headerlink" title="第六章 SDK接入"></a>第六章 SDK接入</h2><h3 id="服务端SDK"><a href="#服务端SDK" class="headerlink" title="服务端SDK"></a>服务端SDK</h3><h3 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h3><ol><li><p>添加maven依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.github.mpusher&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;mpush-client&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;x.y.z&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在工程<code>resources</code>目录增加配置文件<code>application.conf</code>，并配置<code>zookeeper</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mp.zk.server-address=&quot;127.0.0.1:2181&quot;</span><br><span class="line">mp.redis.nodes=[&quot;127.0.0.1:6379&quot;]</span><br><span class="line">     </span><br></pre></td></tr></table></figure></li><li><p>使用<code>com.mpush.api.push.PushSende.java</code>进行推送，使用其<code>create</code>方法创建服务，<code>start</code>方法启动服务，<code>stop</code>方法停止服务。推送接口定义如下：</p><p>```java<br>public interface PushSender extends Service {</p><p>/**<br>* 创建PushSender实例<br>*<br>* @return PushSender<br>*/<br>static PushSender create() {<br>return SpiLoader.load(PusherFactory.class).get();<br>}</p><p>/**<br>* 推送push消息<br>*<br>* @param context 推送参数<br>* @return FutureTask 可用于同步调用<br>*/<br>FutureTask send(PushContext context);</p><p>}<br>```</p></li></ol><h3 id="推送流程"><a href="#推送流程" class="headerlink" title="推送流程"></a>推送流程</h3><h3 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01211537_dfNK.png" alt="推送流程"></p><h3 id="流程分析-1"><a href="#流程分析-1" class="headerlink" title="流程分析"></a>流程分析</h3><ol><li><code>PushSender</code>启动后首先从ZK里获取可用的<code>GatewayServer</code>列表，然后创建相应的<code>Client</code>分别连接到对应的<code>GatewayServer</code></li><li>当调用<code>send</code>方法去推送时，<code>PushSender</code>首先会通过<code>RemoteRouterManager</code>查询要推送的用户当前所登录的机器IP，然后通过IP选择<code>GatewayServer</code>并通过第1中对应的<code>Client</code>把消息发送到该机器，因为该机器拥有用户的链接。</li><li><code>GatewayServer</code>接收到<code>Client</code>发送过来的消息后，首先通过查询本地路由<code>LocalRouterManager</code>找到用户连接<code>Connection</code>，该链接是连接到<code>ConnectionServer</code>的。</li><li>如果连接存在，<code>ConnectionServer</code>会通过此连接把消息下发到客户端。</li><li>如果推送成功，<code>GatewayServer</code>会发送消息推送成功的消息给<code>PushSender</code>所持有的<code>Client</code></li><li><code>PushSender</code>收到推送成功消息后，会通过<code>Callback#onSuccess</code>回调调用方，整个推送流程结束。</li><li>如果中间有任何失败则回调<code>Callback#onFailure</code>。</li><li>如果用户不在线则回调<code>Callback#onOffline</code>。</li><li>如果在一定时间内<code>PushSender</code>没有收到<code>GatewayServer</code>响应的消息则推送超时，回调<code>Callback#onTimeout</code>通知调用方。</li></ol><h3 id="源码解读"><a href="#源码解读" class="headerlink" title="源码解读"></a>源码解读</h3><ol><li><code>PushSender</code>的实现类为<code>com.mpush.client.push.PushClient.java</code></li><li><code>PushClient</code>使用的是<code>ConnectionRouterManager</code>该类继承自<code>RemoteRouterManager</code>增加了本地缓存可在消息频繁时减轻<code>Redis</code>压力，但会存在一定情况的误判。</li><li><code>com.mpush.client.push.PushRequestBus.java</code>用于维持异步推送任务，线程的调整可通过配置设置，任务的拒绝策略为__在调用线程执行Callback__。具体见<code>DefaultThreadPoolFactory.java</code>。线程池默认配置如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mp.thread.pool.push-client=2</span><br><span class="line">   </span><br></pre></td></tr></table></figure><ol><li><code>GatewayClient</code>会根据<code>GatewayServer</code>的运行状态自行调整，如果有<code>GatewayServer</code>宕机对应的<code>Client</code>会及时销毁，如果有新的机器进来，对应<code>Client</code>也会自动创建。具体参见<code>GatewayConnectionFactory.java</code>。</li></ol><h3 id="MPushClient-Java"><a href="#MPushClient-Java" class="headerlink" title="MPushClient(Java)"></a>MPushClient(Java)</h3><h3 id="MPushClient-架构图"><a href="#MPushClient-架构图" class="headerlink" title="MPushClient 架构图"></a>MPushClient 架构图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01212400_lyC5.png" alt="mpushClient"></p><h3 id="说明-6"><a href="#说明-6" class="headerlink" title="说明"></a>说明</h3><ol><li><code>MpushClient</code>主要是为Android客户端设计，作为Android底层通信组件</li><li><code>MpushClient</code>实现了所有Mpush的协议，也包加密，压缩等特性</li><li><code>MpushClient</code>对SDK只暴露了3个对象：<code>Client、ClientConfig、ClientListener</code></li><li><code>ClientConfig</code>提供了所有支持对配置设置项，所有的配置都必须使用此对象设置</li><li><code>Client</code>主要暴露一些往服务端上行的方法，常用的有：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public interface MPushProtocol &#123;</span><br><span class="line"></span><br><span class="line">    boolean healthCheck();//健康检查，读写超时检查，发送心跳</span><br><span class="line"></span><br><span class="line">    void fastConnect();//快速重连</span><br><span class="line"></span><br><span class="line">    void handshake();//握手交互密钥</span><br><span class="line"></span><br><span class="line">    void bindUser(String userId);//绑定用户到链接</span><br><span class="line"></span><br><span class="line">    void unbindUser();//解绑</span><br><span class="line"></span><br><span class="line">    Future&lt;HttpResponse&gt; sendHttp(HttpRequest request);//发送HTTP代理亲求</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>所有服务端下行的消息都直接转交给<code>ClientListener</code>来处理:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public interface ClientListener &#123;</span><br><span class="line"></span><br><span class="line">    void onConnected(Client client);</span><br><span class="line"></span><br><span class="line">    void onDisConnected(Client client);</span><br><span class="line"></span><br><span class="line">    void onHandshakeOk(Client client, int heartbeat);</span><br><span class="line"></span><br><span class="line">    void onReceivePush(Client client, byte[] content);</span><br><span class="line"></span><br><span class="line">    void onKickUser(String deviceId, String userId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>定时发送心跳部分的定时功能，<code>MpushClient</code>没有去实现，因为Android有比<code>Timer</code>更好的实现<code>AlarmManager</code>, 所以定时功能由SDK收到<code>onHandshakeOk</code>事件时去触发。</li><li>内部组件主要有:<code>Connection、PacketReader、PacketWriter、PacketDispatcher、MessageHandler、ExecutorManager、AllotClient</code> 等</li><li><code>Connection</code>负责TCP链接创建、维护、关闭、重连及校验读写超时时间等</li><li><code>AllotClient</code>负责从<code>AllotServer</code>获取最新的MpushServer IP地址列表</li><li><code>PacketReader</code> 负责数据包的解码及沾包、半包的处理，独占一个线程负责消息的读取。</li><li><code>PacketWriter</code>负责数据发送数据内部维护一个只有一个线程的线程池，如果发送失败，会尝试重发直到超时。</li><li><code>PacketReader、PacketWriter</code>内部还分别维护了一个<code>ByteBuf</code>使用的是堆外内存(<code>allocateDirect</code>)该buffer只分配一次后续一直重复使用，__避免反复的分配内存和垃圾回收__，这点对于客户端还是非常有意义的。</li><li><code>PacketDispatcher</code>负责根据<code>Packet</code>的<code>Command</code>把包分发到相应的<code>MessageHander</code>。</li><li><code>MessageHandler</code>主要负责把<code>Packet</code>反序列化为业务<code>Message</code>包括解码和解压，并处理相应的业务逻辑，比如触发下一步的请求，或通知<code>Listener</code>。</li><li><code>ExecutorManager</code>负责整个客户端的线程、线程池的分配和销毁。</li></ol><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><h3 id="系统架构图"><a href="#系统架构图" class="headerlink" title="系统架构图"></a>系统架构图</h3><p><img src="/images/Mpush-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/01212307_WHqh.png" alt="Android SDK架构图"></p><h3 id="说明-7"><a href="#说明-7" class="headerlink" title="说明"></a>说明</h3><ol><li>整个图非常简单清晰的分为Server、SDK、BIZ三部分。</li><li>MpushClient负责和server通信，屏蔽网络，协议，断线重连等所有和长链接相关的东西。</li><li>MpushService是常驻服务，持有MpushClient,并把自身作为MpushClient的ClientListener，监听MpushClient的变化事件。</li><li>MpushReceiver主要负责监听网络变化和AlarmManager，以便暂停和恢复推送服务以及健康检查。</li><li>线1表示上行的请求，比如握手，心跳，绑定用户，业务HTTP代理请求等。</li><li>线2表示下行响应或推送，比如握手成功，心跳响应，HTTP代理响应等。</li><li>线3表示Client下发的事件，主要有：链接建立/断开，握手成功，收到PUSH，设备被踢下线等事件，其中PUSH和KICK_USER事件会广播出去，由业务(MyReceiver)接收；其他事件会通知给MpushReceiver以便其能更好的控制MpushClient的起停，而MpushService就比较轻量基本没有什么业务逻辑，只负责维持后台服务。</li><li>线4表示由MpushService广播出去的PUSH消息，由于采用的是广播的形式，所有也可以分进程。</li><li>线5表示消息有MyReceiver过滤处理后，转交给业务去显示或存DB等。</li><li>线6表示业务可以直接调用MpushClient提供的接口发送消息，目前支持的有绑定usreId，发送Http请求等。</li><li>线7表示一些不需要业务处理的消息都交由MpuhReceiver处理，比如握手成功后启动AlarmManager，当链接断开后取消AlarmManager。</li><li>线8表示MpushReceiver接收到AlarmManager的提醒后去调用MpshClient的healthCheck方法发送心跳。</li><li>线9表示MpushReceiver接收到网络变化后暂停或恢复MpushClient，这样做主要是为了省电，因为在网络断开后，MpushClient会去尝试重连而这时候去重连是没有意义的，因为没有网络。</li></ol><h3 id="MPushClient-Swift"><a href="#MPushClient-Swift" class="headerlink" title="MPushClient(Swift)"></a>MPushClient(Swift)</h3><p>架构同 MPushClient(java)</p><h3 id="MPushClient-Obj-C"><a href="#MPushClient-Obj-C" class="headerlink" title="MPushClient(Obj-C)"></a>MPushClient(Obj-C)</h3><h2 id="第七张-常见问题"><a href="#第七张-常见问题" class="headerlink" title="第七张 常见问题"></a>第七张 常见问题</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h3 id="1-修改配置文件为什么不生效？"><a href="#1-修改配置文件为什么不生效？" class="headerlink" title="1.修改配置文件为什么不生效？"></a>1.修改配置文件为什么不生效？</h3><p>如果是源码测试，请修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果是独立部署，请修改</span><br></pre></td></tr></table></figure><p>conf/mpush.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请不要修改</span><br></pre></td></tr></table></figure><p>reference.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###2.Alloc返回的外网地址不对</span><br><span class="line">  请在修改mpush server 里的</span><br></pre></td></tr></table></figure><p>mpush.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式查考</span><br></pre></td></tr></table></figure><p>reference.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###3.怎么开启http proxy?</span><br><span class="line">  请在</span><br></pre></td></tr></table></figure><p>mpush.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###4. redis.clients.jedis.exceptions.JedisMovedDataException: MOVED 3456</span><br><span class="line"> 请设置redis为集群模式</span><br></pre></td></tr></table></figure><p>mp.redis.cluster-model=cluster</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###5. 广播推送收不到推送的消息，指定用户发送能收到</span><br><span class="line"> 请修改网关模式为</span><br></pre></td></tr></table></figure><p>mp.net.gateway-server-net=tcp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###6. 如何根据源码构建安装包？</span><br><span class="line">  构建命令为 </span><br></pre></td></tr></table></figure><p>mvn clean package -Pzip,pub</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###7. Alloc源码启动报错</span><br><span class="line">   alloc 启动入口</span><br></pre></td></tr></table></figure><p>com.shinemo.mpush.alloc.AllocServerMainTest.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###8. PushSender推送建立连接超时</span><br><span class="line">   错误如下:</span><br></pre></td></tr></table></figure><p>io.netty.channel.ConnectionTimeOutException:connection timed out: /xxx.xxx.xxx.xxx:3001```</p><p>解决方式:<br>a.) 首先检查ip是否正确 telnet xxx.xxx.xxx.xxx 3001是否通<br>b.) 如果ip不正确增加配置mp.net.local-ip=“指定具体的ip”</p><h3 id="9-get-gateway-connection-failure"><a href="#9-get-gateway-connection-failure" class="headerlink" title="9. get gateway connection failure"></a>9. get gateway connection failure</h3><p>如果使用mpush-client出现这个错误日志，建议检查下Guava的版本是否冲突。</p><h3 id="10-如何生成RSA密钥对"><a href="#10-如何生成RSA密钥对" class="headerlink" title="10. 如何生成RSA密钥对"></a>10. 如何生成RSA密钥对</h3><p>1.) 安装<code>openssl</code><br>2.) 生成私钥 <code>openssl genrsa -out rsa_private_key.pem 1024</code><br>3.) 生成公钥 <code>openssl rsa -in rsa_private_key.pem -out rsa_public_key.pem -pubout</code><br>4.) 修改私钥格式 <code>openssl pkcs8 -topk8 -in rsa_private_key.pem -out rsa_private_key_pkcs8.pem -nocrypt</code><br>5.) 分别复制<code>rsa_public_key.pem</code>和<code>rsa_private_key_pkcs8.pem</code>中的内容(不包含<code>-----</code>开始的头尾两行，并去除其中的换行符）到<code>mpush.conf</code>配置文件里</p><h3 id="系统压测"><a href="#系统压测" class="headerlink" title="系统压测"></a>系统压测</h3>]]></content>
      
      
      <categories>
          
          <category> Mpush </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mpush </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VB-Excel发送邮件</title>
      <link href="/Util/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/Util/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="设置OutLook"><a href="#设置OutLook" class="headerlink" title="设置OutLook"></a>设置OutLook</h2><ol><li><p>管理员模式启动OutLook</p><p>文件 -&gt; 选项 -&gt; 信任中心 -&gt; 信任中心设置 -&gt; 宏设置 -&gt; 选择启用所有宏，并勾选加载项：将宏安全设置应用于已安装的加载项 -&gt; 编程问题-&gt;选择从不向我发出可疑活动警告 -&gt; 确定</p><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229094726365.png"><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229094844423.png" alt="image-20211229094844423"></p></li></ol><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229094943107.png" alt="image-20211229095032284" style="zoom: 80%;" /><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229095315203.png" alt="image-20211229095315203"><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229095331464.png" alt="image-20211229095331464"></p><h2 id="设置Excel"><a href="#设置Excel" class="headerlink" title="设置Excel"></a>设置Excel</h2><ol><li><p>新建一个excel文件，另存为xlsm，只有xlsm文件才可以执行宏</p></li><li><p>设置：文件 -&gt; 选项 -&gt; 信任中心 -&gt; 信任中心设置 -&gt; 宏设置 -&gt; 启用所有宏 -&gt; 勾选信任对VBA工程对象模型的访问 -&gt; 确定</p><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229095806437.png" alt="image-20211229095806437"></p></li></ol><h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><ol><li><p>alt + F11 打开编辑器</p></li><li><p>编写代码</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> 全自动发送邮件_Click()</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;要能正确发送并需要对Microseft Outlook进行有效配置</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> rowCount, endRowNo, endColumnNo, sFile$, sFile1$, A&amp;, B&amp;, lastM$, C&amp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> objOutlook <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> objMail <span class="keyword">As</span> MailItem</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;取得当前工作表数据区行数列数</span></span><br><span class="line"></span><br><span class="line">    endRowNo = ActiveSheet.UsedRange.Rows.Count</span><br><span class="line"></span><br><span class="line">    endColumnNo = ActiveSheet.UsedRange.Columns.Count</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;取得当前工作表的名称，用来作为邮件主题进行发送</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;sFile1 = ActiveSheet.Name</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;创建objOutlook为Outlook应用程序对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> objOutlook = CreateObject(<span class="string">&quot;Outlook.Application&quot;</span>)</span><br><span class="line"></span><br><span class="line">   <span class="comment">&#x27;开始循环发送电子邮件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;For rowCount = 2 To endRowNo</span></span><br><span class="line">    rowCount = <span class="number">2</span></span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> rowCount &lt; endRowNo</span><br><span class="line"></span><br><span class="line">   <span class="comment">&#x27;创建objMail为一个邮件对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> objMail = objOutlook.CreateItem(olMailItem)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">With</span> objMail</span><br><span class="line">   </span><br><span class="line">    <span class="comment">&#x27;设置收件人地址，数据源所在列数</span></span><br><span class="line"></span><br><span class="line">    .<span class="keyword">To</span> = Cells(rowCount, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;设置抄送人地址（从通讯录表的&#x27;E-mail地址&#x27;字段中获得）</span></span><br><span class="line">    <span class="comment">&#x27;.CC = &quot;969312613@qq.com;969312613@qq.com&quot;</span></span><br><span class="line">    <span class="comment">&#x27; Cells(rowCount, 0)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;设置邮件主题,取值工作表名，</span></span><br><span class="line"></span><br><span class="line">            .Subject = <span class="string">&quot;主题：&quot;</span> &amp; <span class="type">Date</span> <span class="comment">&#x27;sFile1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&#x27;设置邮件内容(从通讯录表的“内容”字段中获得)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&#x27;align  单元格文本显示方式 left(向左)、center(居中)、right(向右)，默认是center, width-宽 height-高  border 单元格线粗细,bordercolor返回或设置对象的边框颜色</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&#x27;colSpan是一种编程语言，其属性可设置或返回表元横跨的列数</span></span><br><span class="line"></span><br><span class="line"> sFile = <span class="string">&quot;&lt;tr&gt;您好！&lt;br&gt;XXXXX！&lt;/tr&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">    sFile = sFile + <span class="string">&quot;&lt;table align=&#x27;left&#x27; width=&#x27;500&#x27; height=&#x27;25&#x27; border= 1   bordercolor=&#x27;#000000&#x27;&gt; &lt;tbody&gt; &quot;</span></span><br><span class="line">    C = <span class="number">1</span></span><br><span class="line">    lastM = Cells(rowCount, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">Do</span> <span class="keyword">While</span> rowCount &lt; endRowNo <span class="built_in">And</span> Cells(rowCount, <span class="number">2</span>) = lastM</span><br><span class="line">    lastM = Cells(rowCount, <span class="number">2</span>)</span><br><span class="line">    sFile = sFile + <span class="string">&quot;&lt;tr&gt;  &lt;td colspan =&#x27;8&#x27; align=&#x27;center&#x27;&gt; XXX明细 &quot;</span> + Str(C) + <span class="string">&quot;&lt;/td&gt; &lt;/tr&gt; &quot;</span></span><br><span class="line">    C = C + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    B = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> A = <span class="number">1</span> <span class="keyword">To</span> endColumnNo</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;数据表头中添加“X”后将不发送此字段</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">If</span> Application.WorksheetFunction.CountIf(Cells(<span class="number">1</span>, A), <span class="string">&quot;*X*&quot;</span>) = <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">If</span> B = <span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">         sFile = sFile + <span class="string">&quot;&lt;tr&gt;  &lt;td width=&#x27;20%&#x27; height=&#x27;25&#x27;&gt; &quot;</span> + Cells(<span class="number">1</span>, A).<span class="keyword">Text</span> + <span class="string">&quot;   &lt;/td&gt; &lt;td  width=&#x27;30%&#x27; height=&#x27;25&#x27;&gt; &quot;</span> + Cells(rowCount, A).<span class="keyword">Text</span> + <span class="string">&quot;&lt;/td&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">         B = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">        sFile = sFile + <span class="string">&quot;&lt;td width=&#x27;20%&#x27; height=&#x27;25&#x27;&gt; &quot;</span> + Cells(<span class="number">1</span>, A).<span class="keyword">Text</span> + <span class="string">&quot;   &lt;/td&gt; &lt;td  width=&#x27;30%&#x27; height=&#x27;25&#x27;&gt; &quot;</span> + Cells(rowCount, A).<span class="keyword">Text</span> + <span class="string">&quot;&lt;/td&gt; &lt;/tr&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">        B = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    rowCount = rowCount + <span class="number">1</span></span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"></span><br><span class="line">   .HTMLBody = sFile</span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;设置附件(从通讯录表的“附件”字段中获得)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&#x27;  .Attachments.Add Cells(rowCount, 24).Value</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;自动发送邮件</span></span><br><span class="line"></span><br><span class="line">    .Send</span><br><span class="line"></span><br><span class="line">     <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;销毁objMail对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> objMail = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Loop</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;销毁objOutlook对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> objOutlook = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&#x27;所有电子邮件发送完成时提示</span></span><br><span class="line"></span><br><span class="line">     MsgBox Time &amp; <span class="string">&quot;XXX邮件发送成功！请持续跟进&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li><li><p>功能为获取第一列的邮件地址，循环后面的列的内容并创建table表格发送，如果遇到第二列上下相同的行，合并多行一起发送</p><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229100656466.png" alt="image-20211229100656466"></p></li><li><p>点击绿色小箭头可以直接运行发送邮件，或者点击调试，通过编译，逐语句，运行到光标处等测试代码</p></li></ol><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229101145282.png" alt="image-20211229101145282"></p><ol start="5"><li><p>运行效果</p><p><img src="/images/VB-Excel%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/image-20211229101521594.png" alt="image-20211229101521594"></p></li><li><p>如果设置完还是发不了邮件，重启下电脑，或者再看下工具-&gt;引用中是否引入outlook包（Microsoft Outlook 16.0 Object Library）16.0是版本号，也可以通过调试代码，看下Set objOutlook = CreateObject(“Outlook.Application”) 这一行的返回值objOutlook 是不是Nothing，如果是则是配置哪里没有配好，检查outlook和excel的配置。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Util </tag>
            
            <tag> VB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-@ConfigurationProperties</title>
      <link href="/SpringBoot/SpringBoot-@ConfigurationProperties/"/>
      <url>/SpringBoot/SpringBoot-@ConfigurationProperties/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-AdminApi</title>
      <link href="/Kafka/Kafka-AdminApi/"/>
      <url>/Kafka/Kafka-AdminApi/</url>
      
        <content type="html"><![CDATA[<p>admin api操作kafka</p><p>gitee：<a href="https://gitee.com/aacopy/kafka-learn">https://gitee.com/aacopy/kafka-learn</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaAdminApiTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建AdminClient</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AdminClient adminClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.setProperty(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, <span class="string">&quot;127.0.0.1:9092&quot;</span>);</span><br><span class="line">        adminClient = AdminClient.create(properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建topic</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createTopic</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//（topic名称，partition分区数量，副本数量）</span></span><br><span class="line">        NewTopic newTopic = <span class="keyword">new</span> NewTopic(<span class="string">&quot;adminApiTest&quot;</span>, <span class="number">5</span>, (<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">        CreateTopicsResult topics = adminClient.createTopics(Arrays.asList(newTopic));</span><br><span class="line">        topics.all().get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看topic</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">viewTopic</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        ListTopicsResult listTopicsResult = adminClient.listTopics();</span><br><span class="line">        Set&lt;String&gt; topicNames = listTopicsResult.names().get();</span><br><span class="line">        topicNames.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看topic详情</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">describeTopic</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        DescribeTopicsResult describeTopicsResult = adminClient.describeTopics(Arrays.asList(<span class="string">&quot;adminApiTest&quot;</span>));</span><br><span class="line">        Map&lt;String, TopicDescription&gt; topicDescriptionMap = describeTopicsResult.all().get();</span><br><span class="line">        topicDescriptionMap.forEach((k, v) -&gt; System.out.println(k + <span class="string">&quot; -&gt; &quot;</span> + v));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除topic</span></span><br><span class="line"><span class="comment">//    @Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteTopic</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        DeleteTopicsResult deleteTopics = adminClient.deleteTopics(Arrays.asList(<span class="string">&quot;adminApiTest&quot;</span>));</span><br><span class="line">        deleteTopics.all().get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加partition数量</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increasePartition</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        Map&lt;String, NewPartitions&gt; partitionsMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        NewPartitions newPartitions = NewPartitions.increaseTo(<span class="number">7</span>);</span><br><span class="line">        partitionsMap.put(<span class="string">&quot;adminApiTest&quot;</span>, newPartitions);</span><br><span class="line">        CreatePartitionsResult partitions = adminClient.createPartitions(partitionsMap);</span><br><span class="line">        partitions.all().get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-消费者</title>
      <link href="/Kafka/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/"/>
      <url>/Kafka/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/</url>
      
        <content type="html"><![CDATA[<h2 id="获取消息策略"><a href="#获取消息策略" class="headerlink" title="获取消息策略"></a>获取消息策略</h2><p>拉取（pull）的方式，消费者从partition中主动拉取消息。</p><p>优点：</p><ul><li>消费者可以根据性能处理消息，如果是push模式，可能会导致服务并发不够处理不过来，MQ的削峰也就没有了意义</li><li>如果服务端没有消息，客户端会定时发送请求，根据超时时间，阻塞一段时间后再返回</li></ul><h2 id="分区分配策略"><a href="#分区分配策略" class="headerlink" title="分区分配策略"></a>分区分配策略</h2><p>通过partition.assignment.strategy配置，ConsumerConfig.PARTITION_ASSIGNMENT_STRATEGY_CONFIG获取</p><p>默认策略：RangeAssignor（按照主题进行范围分配）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.define(PARTITION_ASSIGNMENT_STRATEGY_CONFIG,</span><br><span class="line">            Type.LIST,</span><br><span class="line">            Arrays.asList(RangeAssignor.class, CooperativeStickyAssignor.class),<span class="comment">//默认值</span></span><br><span class="line">            <span class="keyword">new</span> ConfigDef.NonNullValidator(),</span><br><span class="line">            Importance.MEDIUM,</span><br><span class="line">            PARTITION_ASSIGNMENT_STRATEGY_DOC)</span><br></pre></td></tr></table></figure><p>kafka的分配策略</p><ul><li><p>RangeAssignor</p><p>按照主题进行范围分配</p></li><li><p>RoundRobinAssignor</p><p>轮询分配，以循环方式将分区分配给消费者</p></li><li><p>StickyAssignor</p><p>保证分配是最大限度的平衡，同时保留尽可能多的现有分区分配。</p></li><li><p>CooperativeStickyAssignor</p><p>遵循StickyAssignor相同的逻辑，但允许合作再平衡。</p></li></ul><p>默认的assignor是[RangeAssignor, CooperativeStickyAssignor]，默认使用RangeAssignor，但是允许升级到CooperativeStickyAssignor，只需从列表中移除RangeAssignor。</p><p>也可以自定义策略，通过实现org.apache.kafka.clients.consumer.ConsumerPartitionAssignor</p><h3 id="RoundRobinAssignor"><a href="#RoundRobinAssignor" class="headerlink" title="RoundRobinAssignor"></a>RoundRobinAssignor</h3><p>实现方式：获取一个消费者组中订阅的所有的Topic中的所有partition，和消费者组中所有的消费者列表，外层遍历partition列表，内存遍历消费者列表，将每个partition依次分配给消费者。</p><p>示例1：</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20211230112141081.png" alt="image-20211230112141081"></p><p>示例2：</p><p>官方示例：</p><blockquote><p>When subscriptions differ across consumer instances, the assignment process still considers each consumer instance in round robin fashion but skips over an instance if it is not subscribed to the topic. Unlike the case when subscriptions are identical, this can result in imbalanced assignments. For example, we have three consumers C0, C1, C2, and three topics t0, t1, t2, with 1, 2, and 3 partitions, respectively. Therefore, the partitions are t0p0, t1p0, t1p1, t2p0, t2p1, t2p2. C0 is subscribed to t0; C1 is subscribed to t0, t1; and C2 is subscribed to t0, t1, t2.<br>That assignment will be:<br>C0: [t0p0]<br>C1: [t1p0]<br>C2: [t1p1, t2p0, t2p1, t2p2]</p></blockquote><p>我们有三个消费者C0、C1、C2和三个主题t0、t1、t2，分别有1、2和3个分区。因此，分区为t0p0, t1p0, t1p1, t2p0, t2p1, t2p2。C0订阅到t0;C1订阅t0, t1;C2订阅了t0 t1 t2。</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20211230112332363.png" alt="image-20211230112332363"></p><p>如果同一个消费者组中不同的消费者订阅了不同的主题，就会不均匀分配，上面的T1P1完全可以分配给消费者2</p><p>源码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoundRobinAssignor</span> <span class="keyword">extends</span> <span class="title">AbstractPartitionAssignor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;TopicPartition&gt;&gt; assign(Map&lt;String, Integer&gt; partitionsPerTopic,</span><br><span class="line">                                                    Map&lt;String, Subscription&gt; subscriptions) &#123;</span><br><span class="line">        Map&lt;String, List&lt;TopicPartition&gt;&gt; assignment = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取消费者组中所有的消费者</span></span><br><span class="line">        List&lt;MemberInfo&gt; memberInfoList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Subscription&gt; memberSubscription : subscriptions.entrySet()) &#123;</span><br><span class="line">            assignment.put(memberSubscription.getKey(), <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">            memberInfoList.add(<span class="keyword">new</span> MemberInfo(memberSubscription.getKey(),</span><br><span class="line">                                              memberSubscription.getValue().groupInstanceId()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        CircularIterator&lt;MemberInfo&gt; assigner = <span class="keyword">new</span> CircularIterator&lt;&gt;(Utils.sorted(memberInfoList));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (TopicPartition partition : allPartitionsSorted(partitionsPerTopic, subscriptions)) &#123;</span><br><span class="line">            <span class="keyword">final</span> String topic = partition.topic();</span><br><span class="line">            <span class="comment">//判断当前遍历的partition所属的主题在当前消费者是否订阅，如果没有订阅继续获取下一个消费者</span></span><br><span class="line">            <span class="keyword">while</span> (!subscriptions.get(assigner.peek().memberId).topics().contains(topic))</span><br><span class="line">                assigner.next();</span><br><span class="line">            assignment.get(assigner.next().memberId).add(partition);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> assignment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取消费者组内订阅的topic中所有的patition集合</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;TopicPartition&gt; <span class="title">allPartitionsSorted</span><span class="params">(Map&lt;String, Integer&gt; partitionsPerTopic,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                     Map&lt;String, Subscription&gt; subscriptions)</span> </span>&#123;</span><br><span class="line">        SortedSet&lt;String&gt; topics = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Subscription subscription : subscriptions.values())</span><br><span class="line">            topics.addAll(subscription.topics());</span><br><span class="line"></span><br><span class="line">        List&lt;TopicPartition&gt; allPartitions = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String topic : topics) &#123;</span><br><span class="line">            Integer numPartitionsForTopic = partitionsPerTopic.get(topic);</span><br><span class="line">            <span class="keyword">if</span> (numPartitionsForTopic != <span class="keyword">null</span>)</span><br><span class="line">                allPartitions.addAll(AbstractPartitionAssignor.partitions(topic, numPartitionsForTopic));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> allPartitions;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;roundrobin&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RangeAssignor"><a href="#RangeAssignor" class="headerlink" title="RangeAssignor"></a>RangeAssignor</h3><p>实现方式：获取消费者组中的所有主题，遍历主题，获取每个主题下面的所有消费者的数量和分区数量，用分区数量除以消费者数量，获取每个消费者应该分配到的分区数，如果有余数，按照顺序，排在前面的消费者每个多分配一个分区。</p><p>示例1：</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20211230114834382.png" alt="image-20211230114834382"></p><p>官方示例2：</p><blockquote><p>For example, suppose there are two consumers C0 and C1, two topics t0 and t1, and each topic has 3 partitions, resulting in partitions t0p0, t0p1, t0p2, t1p0, t1p1, and t1p2.<br>The assignment will be:<br>C0: [t0p0, t0p1, t1p0, t1p1]<br>C1: [t0p2, t1p2]</p></blockquote><p>假设有两个消费者C0和C1，两个主题t0和t1，每个主题有3个分区，导致分区t0p0、t0p1、t0p2、t1p0、t1p1和t1p2。</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20211230132133763.png" alt="image-20211230132133763"></p><p>如果有很多topic，这种方案会导致排在前面的消费者压力比后面的大</p><p>源码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RangeAssignor</span> <span class="keyword">extends</span> <span class="title">AbstractPartitionAssignor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;range&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, List&lt;MemberInfo&gt;&gt; consumersPerTopic(Map&lt;String, Subscription&gt; consumerMetadata) &#123;</span><br><span class="line">        Map&lt;String, List&lt;MemberInfo&gt;&gt; topicToConsumers = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Subscription&gt; subscriptionEntry : consumerMetadata.entrySet()) &#123;</span><br><span class="line">            String consumerId = subscriptionEntry.getKey();</span><br><span class="line">            MemberInfo memberInfo = <span class="keyword">new</span> MemberInfo(consumerId, subscriptionEntry.getValue().groupInstanceId());</span><br><span class="line">            <span class="keyword">for</span> (String topic : subscriptionEntry.getValue().topics()) &#123;</span><br><span class="line">                put(topicToConsumers, topic, memberInfo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> topicToConsumers;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;TopicPartition&gt;&gt; assign(Map&lt;String, Integer&gt; partitionsPerTopic,</span><br><span class="line">                                                    Map&lt;String, Subscription&gt; subscriptions) &#123;</span><br><span class="line">        Map&lt;String, List&lt;MemberInfo&gt;&gt; consumersPerTopic = consumersPerTopic(subscriptions);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, List&lt;TopicPartition&gt;&gt; assignment = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String memberId : subscriptions.keySet())</span><br><span class="line">            assignment.put(memberId, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line"><span class="comment">//遍历所有的topic</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, List&lt;MemberInfo&gt;&gt; topicEntry : consumersPerTopic.entrySet()) &#123;</span><br><span class="line">            String topic = topicEntry.getKey();</span><br><span class="line">            <span class="comment">//获取topic的订阅者</span></span><br><span class="line">            List&lt;MemberInfo&gt; consumersForTopic = topicEntry.getValue();</span><br><span class="line"><span class="comment">//获取topic的分区数量</span></span><br><span class="line">            Integer numPartitionsForTopic = partitionsPerTopic.get(topic);</span><br><span class="line">            <span class="keyword">if</span> (numPartitionsForTopic == <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">//对消费者进行排序</span></span><br><span class="line">            Collections.sort(consumersForTopic);</span><br><span class="line"><span class="comment">//计算每个消费者需要分配的分区数量</span></span><br><span class="line">            <span class="keyword">int</span> numPartitionsPerConsumer = numPartitionsForTopic / consumersForTopic.size();</span><br><span class="line">            <span class="comment">//计算没法平均分配的分区数量</span></span><br><span class="line">            <span class="keyword">int</span> consumersWithExtraPartition = numPartitionsForTopic % consumersForTopic.size();</span><br><span class="line"></span><br><span class="line">            List&lt;TopicPartition&gt; partitions = AbstractPartitionAssignor.partitions(topic, numPartitionsForTopic);</span><br><span class="line">            <span class="comment">//遍历订阅过的每个消费者</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = consumersForTopic.size(); i &lt; n; i++) &#123;</span><br><span class="line">                <span class="comment">//计算每个消费者分配的分区的开始index</span></span><br><span class="line">                <span class="keyword">int</span> start = numPartitionsPerConsumer * i + Math.min(i, consumersWithExtraPartition);</span><br><span class="line">                <span class="comment">//计算每个消费者是否需要额外分配一个分区</span></span><br><span class="line">                <span class="keyword">int</span> length = numPartitionsPerConsumer + (i + <span class="number">1</span> &gt; consumersWithExtraPartition ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">                assignment.get(consumersForTopic.get(i).memberId).addAll(partitions.subList(start, start + length));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> assignment;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="StickyAssignor"><a href="#StickyAssignor" class="headerlink" title="StickyAssignor"></a>StickyAssignor</h3><p>粘性分配器有两个目的</p><ol><li>保证尽可能平衡的分配</li><li>当重新分配发生时，它尽可能多地保留了现有的分配。这有助于在主题分区从一个消费者转移到另一个消费者时节省一些开销处理。</li></ol><h4 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h4><p>假设有三个消费者C0、C1、C2，四个主题t0、t1、t2、t3，每个主题有2个分区，形成分区t0p0、t0p1、t1p0、t1p1、t2p0、t2p1、t3p0、t3p1。每个消费者都订阅了所有三个主题。</p><p>粘性分配器和轮询分配器的分配结果相同：</p><p>C0: [t0p0, t1p1, t3p0]<br>C1: [t0p1, t2p0, t3p1]<br>C2: [t1p0, t2p1]</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20220101165705649.png" alt="image-20220101165705649"></p><p>假设C1被删除，</p><ul><li>轮询策略将会重新分配如下结果：</li></ul><p>C0: [t0p0, t1p0, t2p0, t3p0]<br>C2: [t0p1, t1p1, t2p1, t3p1]</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20220101170347490.png" alt="image-20220101170347490"></p><ul><li>粘性分配器策略将会重新分配如下结果：</li></ul><p>C0 [t0p0, t1p1, t3p0, t2p0]<br>C2 [t1p0, t2p1, t0p1, t3p1]</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20220101170400295.png" alt="image-20220101170400295"></p><p><strong>可以看出粘性分配器策略保留所有以前的分配</strong></p><h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><p>有三个消费者C0、C1、C2，以及三个主题t0、t1、t2，分别有1、2、3个分区。因此，分区为t0p0, t1p0, t1p1, t2p0, t2p1, t2p2。C0被订阅为t0；C1被订阅为t0、t1；C2被订阅为t0、t1、t2。</p><ul><li>轮询策略分配结果：</li></ul><p>C0 [t0p0]<br>C1 [t1p0]<br>C2 [t1p1, t2p0, t2p1, t2p2]</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20220101171354358.png" alt="image-20220101171354358"></p><ul><li>粘性策略分配结果：</li></ul><p>C0 [t0p0]<br>C1 [t1p0, t1p1]<br>C2 [t2p0, t2p1, t2p2]</p><p><img src="/images/Kafka-%E6%B6%88%E8%B4%B9%E8%80%85/image-20220101171446089.png" alt="image-20220101171446089"></p><p>如果删除C0消费者</p><p>Round Robin重新分配结果如下：</p><p>C1 [t0p0, t1p1]<br>C2 [t1p0, t2p0, t2p1, t2p2]</p><p>Sticky重新分配结果如下：</p><p>C1 [t1p0, t1p1, t0p0]<br>C2 [t2p0, t2p1, t2p2]</p><h3 id="CooperativeStickyAssignor"><a href="#CooperativeStickyAssignor" class="headerlink" title="CooperativeStickyAssignor"></a>CooperativeStickyAssignor</h3><p>AbstractStickyAssignor的一个合作版本。它遵循与StickyAssignor相同的（粘性）分配逻辑，但允许合作式再平衡</p><p>Kafka的两种协议：EAGER，COOPERATIVE</p><ul><li><p>EAGER再平衡协议要求消费者在参与再平衡事件之前总是撤销其所有分区。因此，它允许完全重新洗牌分配。</p></li><li><p>COOPERATIVE重新平衡协议允许消费者在参与重新平衡事件之前保留其当前拥有的分区。而不是立即重新分配任何拥有的分区，分配者可以向消费者表示需要撤销该分区，这样被撤销的分区就可以在下一次重新平衡事件中重新分配给另一个消费者。这是为粘性分配逻辑设计的，该逻辑试图通过合作调整来尽量减少分区的重新分配。</p></li></ul><p>EAGER协议：RangeAssignor，RoundRobinAssignor，StickyAssignor</p><p>COOPERATIVE协议：CooperativeStickyAssignor</p><p>在集群庞大的情况下，频繁的发生集群节点上下线，消费订阅变更频繁，EAGER会操作全部的分区，COOPERATIVE只会操作部分，达到最终平衡</p><h2 id="消费记录offset"><a href="#消费记录offset" class="headerlink" title="消费记录offset"></a>消费记录offset</h2><ul><li><p>消费者利用offset记录每个消费者组消费到哪个位置</p><ul><li><p>通过group.id+topic+patitin.id来确定唯一的offset的key，value为offset的值</p></li><li><p>kafka通过将offset存放在一个名称为__consumer_offsets的内置topic中。默认有50个partition</p></li></ul></li><li><p>如何从头消费partition中的数据</p><ul><li>从头开始消费消息，需要两点<ul><li>设置auto.offset.reset属性为earliest，默认是latest</li><li>创建一个新的消费者组</li></ul></li></ul></li><li><p>offset手动提交</p><ul><li><p>offset默认是自动提交的，在实际很多场景中，需要业务服务确定消息是否被正常消费，正常消费后才可以提交offset</p></li><li><p>设置enable.auto.commit属性为false</p></li><li><p>手动提交分为两种：</p><ul><li>同步阻塞提交：kafkaConsumer.commitSync()</li><li>异步提交：kafkaConsumer.commitAsync()，实现onComplete方法处理自定义逻辑</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-生产者</title>
      <link href="/Kafka/Kafka-%E7%94%9F%E4%BA%A7%E8%80%85/"/>
      <url>/Kafka/Kafka-%E7%94%9F%E4%BA%A7%E8%80%85/</url>
      
        <content type="html"><![CDATA[<p>生产者如何将消息发送给kafka</p><p><img src="/images/Kafka-%E7%94%9F%E4%BA%A7%E8%80%85/kafka%E6%B6%88%E6%81%AF%E7%94%9F%E4%BA%A7.png" alt="kafka消息生产"></p><ul><li><p>batch缓冲区</p><ul><li>生产者发送消息到服务端不是一条一条发的，而是经过一个内存缓冲区，当缓冲区达到一定条件后，再一次性将消息数据发送到topic</li><li>缓冲区大小默认为16KB，通过batch.size配置，单位：字节，当消息数据超过阀值后，就会执行提交</li><li>如果消息大小一直没有满设置的缓冲区大小阀值，则会根据超过某个时间后进行发送，通过配置linger.ms实现，默认为0，表示即使缓冲区没满，消息也会立刻发送。</li><li>batch.size和linger.ms，两个配置，满足其一，消息就会被发送</li></ul></li><li><p>消息发送到partition分区的策略</p><ul><li>如果指定了partition的id，就会被发送到指定的partition中</li><li>如果指定了key，ProducerRecord会根据key的hash值，发送到对应的partition中，拥有相同key的消息会被写到同一个partition，实现顺序消息</li><li>如果id和key都没有指定，则会按照粘性（sticky）分区策略的方式依次发送到每个partition中</li><li>如果同时指定id和key，则以id为准</li></ul></li><li><p>partition分区策略的改变</p><ul><li><p>2.4版本以前，默认round-robin（轮询）方式，2.3.1版本源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The default partitioning strategy:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If a partition is specified in the record, use it</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If no partition is specified but a key is present choose a partition based on a hash of the key</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If no partition or key is present choose a partition in a round-robin fashion</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultPartitioner</span> <span class="keyword">implements</span> <span class="title">Partitioner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentMap&lt;String, AtomicInteger&gt; topicCounterMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(Map&lt;String, ?&gt; configs)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compute the partition for the given record.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topic The topic name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key The key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyBytes serialized key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value The value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valueBytes serialized value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cluster The current cluster metadata</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(String topic, Object key, <span class="keyword">byte</span>[] keyBytes, Object value, <span class="keyword">byte</span>[] valueBytes, Cluster cluster)</span> </span>&#123;</span><br><span class="line">        List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);</span><br><span class="line">        <span class="keyword">int</span> numPartitions = partitions.size();</span><br><span class="line">        <span class="keyword">if</span> (keyBytes == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> nextValue = nextValue(topic);</span><br><span class="line">            List&lt;PartitionInfo&gt; availablePartitions = cluster.availablePartitionsForTopic(topic);</span><br><span class="line">            <span class="keyword">if</span> (availablePartitions.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> part = Utils.toPositive(nextValue) % availablePartitions.size();</span><br><span class="line">                <span class="keyword">return</span> availablePartitions.get(part).partition();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// no partitions are available, give a non-available partition</span></span><br><span class="line">                <span class="keyword">return</span> Utils.toPositive(nextValue) % numPartitions;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// hash the keyBytes to choose a partition</span></span><br><span class="line">            <span class="keyword">return</span> Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">nextValue</span><span class="params">(String topic)</span> </span>&#123;</span><br><span class="line">        AtomicInteger counter = topicCounterMap.get(topic);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == counter) &#123;</span><br><span class="line">            counter = <span class="keyword">new</span> AtomicInteger(ThreadLocalRandom.current().nextInt());</span><br><span class="line">            AtomicInteger currentCounter = topicCounterMap.putIfAbsent(topic, counter);</span><br><span class="line">            <span class="keyword">if</span> (currentCounter != <span class="keyword">null</span>) &#123;</span><br><span class="line">                counter = currentCounter;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> counter.getAndIncrement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>2.4版本以后，默认为：sticky （粘性）</p><p>参考文档：<a href="https://www.confluent.io/blog/apache-kafka-producer-improvements-sticky-partitioner/">https://www.confluent.io/blog/apache-kafka-producer-improvements-sticky-partitioner/</a></p><blockquote><p>If we send several records to the same partition at around the same time, they can be sent as a batch</p><p>如果我们在同一时间将多条记录发送到同一个分区，它们可以作为批处理发送</p><p>Generally, smaller batches lead to more requests and queuing, resulting in higher latency.</p><p>一般来说，更小的批量会导致更多的请求和排队，从而导致更高的延迟。</p><p>A batch is completed either when it reaches a certain size (batch.size) or after a period of time (linger.ms) is up.</p><p>一个批处理要么在达到某个大小(batch.size)时完成，要么在一段时间(linger.ms)结束后完成。</p><p>The default for batch. size is 16,384 bytes, and the default of linger. ms is 0 milliseconds. </p><p>默认值，batch.size为16KB，linger. ms为0ms</p><p>At first glance, it might seem like setting <code>linger.ms</code> to 0 would only lead to the production of single-record batches. However, this is usually not the case. Even when <code>linger.ms</code> is 0, the producer will group records into batches when they are produced to the same partition around the same time. This is because the system needs a bit of time to handle each request, and batches form when the system cannot attend to them all right away.</p><p>乍一看，似乎设置<code>linger.ms</code>为 0 只会导致生成单记录批次。然而，通常情况并非如此。即使<code>linger.ms</code>是 0，生产者也会将记录在同一时间生产到同一分区时分批进行。这是因为系统需要一点时间来处理每个请求，并且当系统无法立即处理它们时会批量形成。</p><p>Due to the potential for increased latency with small batches, the original strategy for partitioning records with null keys can be inefficient. This changes with <a href="https://www.confluent.io/blog/apache-kafka-2-4-latest-version-updates">Apache Kafka version 2.4</a>, which introduces sticky partitioning, a new strategy for assigning records to partitions with proven lower latency.</p><p>由于小批量可能会增加延迟，因此使用空键对记录进行分区的原始策略可能效率低下。这在<a href="https://www.confluent.io/blog/apache-kafka-2-4-latest-version-updates">Apache Kafka 2.4 版中</a>发生了变化，它引入了粘性分区，这是一种将记录分配给具有低延迟的分区的新策略。</p><p>The sticky partitioner addresses the problem of spreading out records without keys into smaller batches by picking a single partition to send all non-keyed records. Once the batch at that partition is filled or otherwise completed, the sticky partitioner randomly chooses and “sticks” to a new partition. That way, over a larger period of time, records are about evenly distributed among all the partitions while getting the added benefit of larger batch sizes.</p><p>粘性分区器通过选择单个分区来发送所有非键记录，解决了将没有键的记录分散成较小批次的问题。一旦该分区的批次被填满或以其他方式完成，粘性分区程序会随机选择并“粘”到一个新分区。这样，在更长的时间内，记录大致均匀地分布在所有分区中，同时获得更大批量的额外好处。</p><p>The main goal of the sticky partitioner is to increase the number of records in each batch in order to decrease the total number of batches and eliminate excess queuing. When there are fewer batches with more records in each batch, the cost per record is lower and the same number of records can be sent more quickly using the sticky partitioning strategy. The data shows that this strategy does decrease latency in cases where null keys are used, and the effect becomes more pronounced when the number of partitions increases. In addition, CPU usage is often decreased when using the sticky partitioning strategy. By sticking to a partition and sending fewer but bigger batches, the producer sees great performance improvements.</p><p>粘性分区器的主要目标是增加每个批次中的记录数，以减少批次总数并消除多余的排队。当每个批次中有更多记录的批次较少时，每条记录的成本较低，并且使用粘性分区策略可以更快地发送相同数量的记录。数据显示，在使用空键的情况下，这种策略确实减少了延迟，并且当分区数量增加时效果会更加明显。此外，在使用粘性分区策略时，CPU 使用率通常会降低。通过坚持分区并发送更少但更大的批次，生产者看到了巨大的性能改进。</p></blockquote></li></ul></li></ul><p>​                <img src="/images/Kafka-%E7%94%9F%E4%BA%A7%E8%80%85/sticky-partitioner-strategy.png" alt="坚持一个分区，直到批次关闭； 每个分区接收一个包含三个记录的完整批次。"></p><p>3.0.0版本的源码：                </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The default partitioning strategy:</span></span><br><span class="line"><span class="comment"> * &lt;ul&gt;</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If a partition is specified in the record, use it</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If no partition is specified but a key is present choose a partition based on a hash of the key</span></span><br><span class="line"><span class="comment"> * &lt;li&gt;If no partition or key is present choose the sticky partition that changes when the batch is full.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * See KIP-480 for details about sticky partitioning.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultPartitioner</span> <span class="keyword">implements</span> <span class="title">Partitioner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StickyPartitionCache stickyPartitionCache = <span class="keyword">new</span> StickyPartitionCache();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(Map&lt;String, ?&gt; configs)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compute the partition for the given record.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topic The topic name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key The key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyBytes serialized key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value The value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valueBytes serialized value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cluster The current cluster metadata</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(String topic, Object key, <span class="keyword">byte</span>[] keyBytes, Object value, <span class="keyword">byte</span>[] valueBytes, Cluster cluster)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> partition(topic, key, keyBytes, value, valueBytes, cluster, cluster.partitionsForTopic(topic).size());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compute the partition for the given record.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> topic The topic name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> numPartitions The number of partitions of the given &#123;<span class="doctag">@code</span> topic&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key The key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyBytes serialized key to partition on (or null if no key)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value The value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> valueBytes serialized value to partition on or null</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cluster The current cluster metadata</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(String topic, Object key, <span class="keyword">byte</span>[] keyBytes, Object value, <span class="keyword">byte</span>[] valueBytes, Cluster cluster,</span></span></span><br><span class="line"><span class="params"><span class="function">                         <span class="keyword">int</span> numPartitions)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (keyBytes == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> stickyPartitionCache.partition(topic, cluster);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// hash the keyBytes to choose a partition</span></span><br><span class="line">        <span class="keyword">return</span> Utils.toPositive(Utils.murmur2(keyBytes)) % numPartitions;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * If a batch completed for the current sticky partition, change the sticky partition. </span></span><br><span class="line"><span class="comment">     * Alternately, if no sticky partition has been determined, set one.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNewBatch</span><span class="params">(String topic, Cluster cluster, <span class="keyword">int</span> prevPartition)</span> </span>&#123;</span><br><span class="line">        stickyPartitionCache.nextPartition(topic, cluster, prevPartition);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * An internal class that implements a cache used for sticky partitioning behavior. The cache tracks the current sticky</span></span><br><span class="line"><span class="comment"> * partition for any given topic. This class should not be used externally. </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StickyPartitionCache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentMap&lt;String, Integer&gt; indexCache;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StickyPartitionCache</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.indexCache = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(String topic, Cluster cluster)</span> </span>&#123;</span><br><span class="line">        Integer part = indexCache.get(topic);</span><br><span class="line">        <span class="keyword">if</span> (part == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nextPartition(topic, cluster, -<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> part;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">nextPartition</span><span class="params">(String topic, Cluster cluster, <span class="keyword">int</span> prevPartition)</span> </span>&#123;</span><br><span class="line">        List&lt;PartitionInfo&gt; partitions = cluster.partitionsForTopic(topic);</span><br><span class="line">        Integer oldPart = indexCache.get(topic);</span><br><span class="line">        Integer newPart = oldPart;</span><br><span class="line">        <span class="comment">// Check that the current sticky partition for the topic is either not set or that the partition that </span></span><br><span class="line">        <span class="comment">// triggered the new batch matches the sticky partition that needs to be changed.</span></span><br><span class="line">        <span class="comment">// oldPart == null表示新建的topic被第一次调用，oldPart == prevPartition在新的batch被创建时为true</span></span><br><span class="line">        <span class="keyword">if</span> (oldPart == <span class="keyword">null</span> || oldPart == prevPartition) &#123;</span><br><span class="line">            List&lt;PartitionInfo&gt; availablePartitions = cluster.availablePartitionsForTopic(topic);</span><br><span class="line">            <span class="keyword">if</span> (availablePartitions.size() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                Integer random = Utils.toPositive(ThreadLocalRandom.current().nextInt());</span><br><span class="line">                newPart = random % partitions.size();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (availablePartitions.size() == <span class="number">1</span>) &#123;</span><br><span class="line">                newPart = availablePartitions.get(<span class="number">0</span>).partition();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (newPart == <span class="keyword">null</span> || newPart.equals(oldPart)) &#123;</span><br><span class="line">                    <span class="keyword">int</span> random = Utils.toPositive(ThreadLocalRandom.current().nextInt());</span><br><span class="line">                    newPart = availablePartitions.get(random % availablePartitions.size()).partition();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Only change the sticky partition if it is null or prevPartition matches the current sticky partition.</span></span><br><span class="line">            <span class="keyword">if</span> (oldPart == <span class="keyword">null</span>) &#123;</span><br><span class="line">                indexCache.putIfAbsent(topic, newPart);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                indexCache.replace(topic, prevPartition, newPart);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> indexCache.get(topic);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> indexCache.get(topic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码验证：</p><ol><li><p>创建一个topic：aacopy，5个分区，1个副本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createTopic</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">       <span class="comment">//（topic名称，partition分区数量，副本数量）</span></span><br><span class="line">       NewTopic newTopic = <span class="keyword">new</span> NewTopic(<span class="string">&quot;aacopy&quot;</span>, <span class="number">5</span>, (<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">       CreateTopicsResult topics = adminClient.createTopics(Arrays.asList(newTopic));</span><br><span class="line">       topics.all().get();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>没有指定id和key的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sandWithNothing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">           ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; sendMsg = kafkaTemplate.send(<span class="string">&quot;aacopy&quot;</span>, <span class="string">&quot;aacopy-msg-&quot;</span> + i);</span><br><span class="line">           <span class="comment">//增加回调函数，打印返回值</span></span><br><span class="line">           sendMsg.addCallback(success -&gt; &#123;</span><br><span class="line">               RecordMetadata rm = success.getRecordMetadata();</span><br><span class="line">               System.out.println(<span class="string">&quot;消息发送成功：topic-&gt;&quot;</span> + rm.topic() + <span class="string">&quot;, partition-&gt;&quot;</span> + rm.partition() + <span class="string">&quot;, offset-&gt;&quot;</span> + rm.offset());</span><br><span class="line">           &#125;, failure -&gt; System.out.println(<span class="string">&quot;消息发送失败：&quot;</span> + failure.getMessage()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>控制台打印日志截取：</p><blockquote><p>……</p><p>消息发送成功：topic-&gt;aacopy, partition-&gt;2, offset-&gt;403<br>消息发送成功：topic-&gt;aacopy, partition-&gt;2, offset-&gt;404<br>消息发送成功：topic-&gt;aacopy, partition-&gt;2, offset-&gt;405<br>消息发送成功：topic-&gt;aacopy, partition-&gt;2, offset-&gt;406<br>消息发送成功：topic-&gt;aacopy, partition-&gt;2, offset-&gt;407<br>消息发送成功：topic-&gt;aacopy, partition-&gt;1, offset-&gt;319<br>消息发送成功：topic-&gt;aacopy, partition-&gt;1, offset-&gt;320<br>消息发送成功：topic-&gt;aacopy, partition-&gt;1, offset-&gt;321<br>消息发送成功：topic-&gt;aacopy, partition-&gt;1, offset-&gt;322</p><p>……</p></blockquote></li><li><p>指定id</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendWithId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">           ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; sendMsg = kafkaTemplate.send(<span class="string">&quot;aacopy&quot;</span>, <span class="number">4</span>, <span class="keyword">null</span>, <span class="string">&quot;aacopy-msg-&quot;</span> + i);</span><br><span class="line">           sendMsg.addCallback(success -&gt; &#123;</span><br><span class="line">               RecordMetadata rm = success.getRecordMetadata();</span><br><span class="line">               System.out.println(<span class="string">&quot;消息发送成功：topic-&gt;&quot;</span> + rm.topic() + <span class="string">&quot;, partition-&gt;&quot;</span> + rm.partition() + <span class="string">&quot;, offset-&gt;&quot;</span> + rm.offset());</span><br><span class="line">           &#125;, failure -&gt; System.out.println(<span class="string">&quot;消息发送失败：&quot;</span> + failure.getMessage()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>控制台打印日志截取：</p><blockquote><p>……</p><p>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;93<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;94<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;95<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;96<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;97<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;98<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;99</p></blockquote><p>所有消息都推送到id为4的partition中</p></li><li><p>指定key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendWithKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">           ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; sendMsg = kafkaTemplate.send(<span class="string">&quot;aacopy&quot;</span>, <span class="string">&quot;HelloWorld&quot;</span>, <span class="string">&quot;aacopy-msg-&quot;</span> + i);</span><br><span class="line">           sendMsg.addCallback(success -&gt; &#123;</span><br><span class="line">               RecordMetadata rm = success.getRecordMetadata();</span><br><span class="line">               System.out.println(<span class="string">&quot;消息发送成功：topic-&gt;&quot;</span> + rm.topic() + <span class="string">&quot;, partition-&gt;&quot;</span> + rm.partition() + <span class="string">&quot;, offset-&gt;&quot;</span> + rm.offset());</span><br><span class="line">           &#125;, failure -&gt; System.out.println(<span class="string">&quot;消息发送失败：&quot;</span> + failure.getMessage()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>控制台打印日志截取：</p><blockquote><p>……</p><p>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;102<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;103<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;104<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;105<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;106<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;107</p><p>……</p></blockquote></li><li><p>同时指定id和key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendWithIdAndKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">           ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; sendMsg = kafkaTemplate.send(<span class="string">&quot;aacopy&quot;</span>, <span class="number">4</span>, <span class="string">&quot;HelloWorld&quot;</span>, <span class="string">&quot;aacopy-msg-&quot;</span> + i);</span><br><span class="line">           sendMsg.addCallback(success -&gt; &#123;</span><br><span class="line">               RecordMetadata rm = success.getRecordMetadata();</span><br><span class="line">               System.out.println(<span class="string">&quot;消息发送成功：topic-&gt;&quot;</span> + rm.topic() + <span class="string">&quot;, partition-&gt;&quot;</span> + rm.partition() + <span class="string">&quot;, offset-&gt;&quot;</span> + rm.offset());</span><br><span class="line">           &#125;, failure -&gt; System.out.println(<span class="string">&quot;消息发送失败：&quot;</span> + failure.getMessage()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>控制台打印日志截取：</p><blockquote><p>……</p><p>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;333<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;334<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;335<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;336<br>消息发送成功：topic-&gt;aacopy, partition-&gt;4, offset-&gt;337</p><p>……</p></blockquote></li></ol><p>​        打印验证，id和key同时存在，以id为准</p><ul><li><p>自定义分区规则</p><p>自定义分区规则需要实现Partitioner接口，或者继承实现了Partitioner接口的类，这里继承DefaultPartitioner，可以在不需要自定义的消息时走默认的策略</p><ol><li>编写自定义分区规则类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomizedPartitioner</span> <span class="keyword">extends</span> <span class="title">DefaultPartitioner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(String topic, Object key, <span class="keyword">byte</span>[] keyBytes, Object value, <span class="keyword">byte</span>[] valueBytes, Cluster cluster)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(key != <span class="keyword">null</span> &amp;&amp; key <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            String keyStr = (String) key;</span><br><span class="line">            <span class="keyword">if</span>(keyStr.startsWith(<span class="string">&quot;aacopy_&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;自定义分区策略...... key -&gt;&quot;</span> + keyStr);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.partition(topic, key, keyBytes, value, valueBytes, cluster);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加配置文件，</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#定义分区策略</span><br><span class="line">spring.kafka.producer.properties.partitioner.class=cn.aacopy.learn.kafka.CustomizedPartitioner</span><br></pre></td></tr></table></figure><ol start="3"><li>编写测试代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendWithCustomizedPartitioner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">           ListenableFuture&lt;SendResult&lt;String, String&gt;&gt; sendMsg = kafkaTemplate.send(<span class="string">&quot;aacopy&quot;</span>, <span class="string">&quot;aacopy_&quot;</span> + i, <span class="string">&quot;aacopy-msg-&quot;</span> + i);</span><br><span class="line">           sendMsg.addCallback(success -&gt; &#123;</span><br><span class="line">               RecordMetadata rm = success.getRecordMetadata();</span><br><span class="line">               System.out.println(<span class="string">&quot;消息发送成功：topic-&gt;&quot;</span> + rm.topic() + <span class="string">&quot;, partition-&gt;&quot;</span> + rm.partition() + <span class="string">&quot;, offset-&gt;&quot;</span> + rm.offset());</span><br><span class="line">           &#125;, failure -&gt; System.out.println(<span class="string">&quot;消息发送失败：&quot;</span> + failure.getMessage()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>控制台打印日志截取：</li></ol><blockquote><p>……</p><p>自定义分区策略…… key -&gt;aacopy_96<br>自定义分区策略…… key -&gt;aacopy_97<br>自定义分区策略…… key -&gt;aacopy_98<br>自定义分区策略…… key -&gt;aacopy_98<br>自定义分区策略…… key -&gt;aacopy_99</p><p>……</p><p>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;729<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;730<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;731<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;732<br>消息发送成功：topic-&gt;aacopy, partition-&gt;0, offset-&gt;733</p><p>……</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aspose-Excel</title>
      <link href="/Util/Aspose-Excel/"/>
      <url>/Util/Aspose-Excel/</url>
      
        <content type="html"><![CDATA[<p>支持任意位置插入动态行列</p><p>支持对单个单元格自定义处理方法</p><h2 id="定义注解annotation"><a href="#定义注解annotation" class="headerlink" title="定义注解annotation"></a>定义注解annotation</h2><ul><li>ExcelChunk</li><li>ExcelEntity</li><li>ExcelValue</li><li>ExcelValues</li></ul><h3 id="ExcelChunk"><a href="#ExcelChunk" class="headerlink" title="ExcelChunk"></a>ExcelChunk</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * excel注解</span></span><br><span class="line"><span class="comment"> * 用于在excel中规划一块区域，来存放一类字段</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 13:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelChunk &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一块区域的唯一标识，多个字段上标识的name相同，标识放在同一块区域</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 相对块的name，如果为空，则表示参照的基本块，一个sheet中只能有一个块的dependChunk为空</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">dependChunk</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 相对位置，四个位置，用，top，down，left， right来表示上下左右，默认在相对块的下面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">ShipEnum <span class="title">position</span><span class="params">()</span> <span class="keyword">default</span> ShipEnum.DOWN</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 行偏移量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">offsetX</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列偏移量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">offsetY</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一块区域中固定部分的单元格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ExcelValue[] fixCells() <span class="keyword">default</span> <span class="meta">@ExcelValue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ExcelEntity"><a href="#ExcelEntity" class="headerlink" title="ExcelEntity"></a>ExcelEntity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * excel注解</span></span><br><span class="line"><span class="comment"> * 标识某个类，设置excel中的属性</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 14:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE, ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelEntity &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成excel的文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">fileName</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sheet名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">sheetName</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列宽，从第一列宽度开始写</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">double</span>[] cellsWidth() <span class="keyword">default</span> <span class="number">8.43</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 行高</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">rowHeight</span><span class="params">()</span> <span class="keyword">default</span> 25</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单元格锁定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">LockModeEnum <span class="title">lock</span><span class="params">()</span> <span class="keyword">default</span> LockModeEnum.NONE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局不锁定，只锁定传入的单元格，（英文逗号，中间不要带空格）</span></span><br><span class="line"><span class="comment">     * String格式</span></span><br><span class="line"><span class="comment">     * 如果为整行参数格式：R,rowNum,startCell （行索引，开始列）</span></span><br><span class="line"><span class="comment">     * 如果为整列参数格式：C,cellNum,startRow （列索引，开始行）</span></span><br><span class="line"><span class="comment">     * 如果取范围内的cell，参数格式：beginRow,beginCell,rowNum,cellNum （开始行,开始列,总行数,总列数）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String[] lockInclude() <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局锁定，排除传入的单元格，（英文逗号，中间不要带空格）</span></span><br><span class="line"><span class="comment">     * String格式</span></span><br><span class="line"><span class="comment">     * 如果为整行参数格式：rowNum,startCell （行索引，开始列）</span></span><br><span class="line"><span class="comment">     * 如果为整列参数格式：cellNum,startRow （列索引，开始行）</span></span><br><span class="line"><span class="comment">     * 如果取范围内的cell，参数格式：beginRow,beginCell,rowNum,cellNum （开始行,开始列,总行数,总列数）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String[] lockExclude() <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 划分块，主要用来解决存在动态行或列的情况下定位单元格位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ExcelChunk[] chunks() <span class="keyword">default</span> <span class="meta">@ExcelChunk</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ExcelValue"><a href="#ExcelValue" class="headerlink" title="ExcelValue"></a>ExcelValue</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 13:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelValue &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 所属区域，在字段上的注解，需要设置该值，绑定区域；在类上的注解不需要设置该值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">chunkName</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 起始位置行坐标x，x为相对于块（ExcelChunk）中的位置，不是excel中的绝对位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 起始位置列坐标y，y为相对于块（ExcelChunk）中的位置，不是excel中的绝对位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">y</span><span class="params">()</span> <span class="keyword">default</span> 0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果有单元格合并，需要跨的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">xNum</span><span class="params">()</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果有单元格合并，需要跨的列数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">yNum</span><span class="params">()</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单元格样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">StyleEnum <span class="title">style</span><span class="params">()</span> <span class="keyword">default</span> StyleEnum.COMMON</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单元格内容，在字段上的注解：填写对象属性中需要获取的值</span></span><br><span class="line"><span class="comment">     * 在类上的注解需要设置该值，用于设置单元格中固定的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String[] value() <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果字段使一个列表，需要指定列表中的数据填充方向，允许的值：down，right。默认往下</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">DirectionEnum <span class="title">direction</span><span class="params">()</span> <span class="keyword">default</span> DirectionEnum.DOWN</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取值的方式，value表示直接获取，obj，表示需要从对象内部属性获取，嵌套获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">ValueTypeEnum <span class="title">type</span><span class="params">()</span> <span class="keyword">default</span> ValueTypeEnum.VALUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义处理方法，入参为静态方法名，无返回值，方法入参固定两个（Object value, Worksheet worksheet, Cell cell）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">handler</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ExcelValues"><a href="#ExcelValues" class="headerlink" title="ExcelValues"></a>ExcelValues</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多个value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/21 10:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExcelValues &#123;</span><br><span class="line"></span><br><span class="line">    ExcelValue[] values() <span class="keyword">default</span> <span class="meta">@ExcelValue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义枚举Enum"><a href="#定义枚举Enum" class="headerlink" title="定义枚举Enum"></a>定义枚举Enum</h2><ul><li>DirectionEnum</li><li>LockModeEnum</li><li>ShipEnum</li><li>StyleEnum</li><li>ValueTypeEnum</li></ul><h3 id="DirectionEnum"><a href="#DirectionEnum" class="headerlink" title="DirectionEnum"></a>DirectionEnum</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * excel list数据填充数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 15:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">DirectionEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向下填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DOWN,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向右填充</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RIGHT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LockModeEnum"><a href="#LockModeEnum" class="headerlink" title="LockModeEnum"></a>LockModeEnum</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/17 10:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">LockModeEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局不锁定</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    NONE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局锁定</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ALL,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局锁定，排除部分单元格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    EXCLUDE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局不锁定，只锁定设置的单元格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    INCLUDE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ShipEnum"><a href="#ShipEnum" class="headerlink" title="ShipEnum"></a>ShipEnum</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 块关系</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 15:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ShipEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向上</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TOP,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向下</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    DOWN,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向左</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    LEFT,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向右</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    RIGHT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="StyleEnum"><a href="#StyleEnum" class="headerlink" title="StyleEnum"></a>StyleEnum</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/16 19:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">StyleEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    COMMON,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用标题样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    TITLE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模块标题样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    MODULE_TITLE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * KEY样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    KEY;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ValueTypeEnum"><a href="#ValueTypeEnum" class="headerlink" title="ValueTypeEnum"></a>ValueTypeEnum</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 值类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/17 17:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ValueTypeEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 直接取值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    VALUE,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    OBJ</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义样式"><a href="#定义样式" class="headerlink" title="定义样式"></a>定义样式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.test.aspose.excel.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.enums.StyleEnum;</span><br><span class="line"><span class="keyword">import</span> com.aspose.cells.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/16 19:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelStyle</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化所有样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initAllStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        StyleEnum[] styles = StyleEnum.values();</span><br><span class="line">        initStyles(workbook, styles);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化选的的样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> styles</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initStyles</span><span class="params">(Workbook workbook, StyleEnum... styles)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(styles == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span>(StyleEnum style: styles) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (style) &#123;</span><br><span class="line">                <span class="keyword">case</span> COMMON: commonStyle(workbook); <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> TITLE: titleStyle(workbook); <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> MODULE_TITLE: moduleTitleStyle(workbook); <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> KEY: keyStyle(workbook); <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基础样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> style</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">baseStyle</span><span class="params">(Style style)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//字体</span></span><br><span class="line">        Font font = style.getFont();</span><br><span class="line">        font.setName(<span class="string">&quot;微软雅黑&quot;</span>);</span><br><span class="line">        font.setSize(<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//自动换行</span></span><br><span class="line">        style.setTextWrapped(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//居中显示</span></span><br><span class="line">        style.setVerticalAlignment(TextAlignmentType.CENTER);</span><br><span class="line">        style.setHorizontalAlignment(TextAlignmentType.CENTER);</span><br><span class="line">        <span class="comment">//白底背景色</span></span><br><span class="line">        style.setForegroundColor(Color.fromArgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">        style.setPattern(BackgroundType.SOLID);</span><br><span class="line">        <span class="comment">//全边框</span></span><br><span class="line">        style.setBorder(BorderType.TOP_BORDER, CellBorderType.THIN, Color.getBlack());</span><br><span class="line">        style.setBorder(BorderType.BOTTOM_BORDER, CellBorderType.THIN, Color.getBlack());</span><br><span class="line">        style.setBorder(BorderType.LEFT_BORDER, CellBorderType.THIN, Color.getBlack());</span><br><span class="line">        style.setBorder(BorderType.RIGHT_BORDER, CellBorderType.THIN, Color.getBlack());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">commonStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        Style style = workbook.createStyle();</span><br><span class="line">        style.setName(StyleEnum.COMMON.name());</span><br><span class="line">        baseStyle(style);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建标题样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">titleStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        Style style = workbook.createStyle();</span><br><span class="line">        style.setName(StyleEnum.TITLE.name());</span><br><span class="line">        baseStyle(style);</span><br><span class="line">        Font font = style.getFont();</span><br><span class="line">        <span class="comment">//字体大小</span></span><br><span class="line">        font.setSize(<span class="number">18</span>);</span><br><span class="line">        <span class="comment">//加粗</span></span><br><span class="line">        font.setBold(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//字体红色</span></span><br><span class="line">        font.setColor(Color.fromArgb(<span class="number">192</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">//灰色背景</span></span><br><span class="line">        style.setForegroundColor(Color.fromArgb(<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模块标题样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">moduleTitleStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        Style style = workbook.createStyle();</span><br><span class="line">        style.setName(StyleEnum.MODULE_TITLE.name());</span><br><span class="line">        baseStyle(style);</span><br><span class="line">        Font font = style.getFont();</span><br><span class="line">        <span class="comment">//加粗</span></span><br><span class="line">        font.setBold(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//灰色背景</span></span><br><span class="line">        style.setForegroundColor(Color.fromArgb(<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>));</span><br><span class="line">        style.setHorizontalAlignment(TextAlignmentType.LEFT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * key样式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keyStyle</span><span class="params">(Workbook workbook)</span> </span>&#123;</span><br><span class="line">        Style style = workbook.createStyle();</span><br><span class="line">        style.setName(StyleEnum.KEY.name());</span><br><span class="line">        baseStyle(style);</span><br><span class="line">        Font font = style.getFont();</span><br><span class="line">        <span class="comment">//字体灰色</span></span><br><span class="line">        font.setColor(Color.fromArgb(<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.test.aspose.excel.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.annotation.export.ExcelChunk;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.annotation.export.ExcelEntity;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.annotation.export.ExcelValue;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.annotation.export.ExcelValues;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.entity.Zzz;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.test.aspose.excel.enums.*;</span><br><span class="line"><span class="keyword">import</span> com.aspose.cells.*;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/15 14:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//背景图片</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String BACKGROUND_IMG = <span class="string">&quot;iVBORw0KGgoAAAANSUhEUgAAAsQAAAHmCAIAAAD7uw90AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAx2SURBVHhe7d09VxrbAoBhz+2UUk9Lm1hqnZ+fOiljWtpIKZa5gxKZQYkhr2vddeV5GtHZe6DbL/PlPz9//jwBAPhb/9n8BAD4K2ICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJGICAEjEBACQiAkAIBETAEAiJgCAREwAAImYAAASMQEAJP/8/Plz85K3sloub3/8WN7fn9zd3a3/MJvNTs/n8/n52cP2XYeOf7BaLW8Xi+XTnP2TVsvF4g/3/jB0tfnl7N+P8/P1+yy+L+4f566nzj983M5cLW4Wv8YPM+Yf5zs7ne7x+XYA/v+JiTe1Wnz9snhc218wm19fTRfTQ8c/WC1vvi9uNwkxNZ2xXsgXw8jNr7te+TjD5g8n31/6eKOJy5vP324fXq1dXH76eL55/Wi8/flWAN4Fpzne0up2uW/lXrtbLJabl48OHb9e7m++fvn2ckkMq/z5xbYkhjD4tthbEoO7xffRUYXB5OPMTpZf9oTOC5/rZcubbWlcXCoJgHdKTLyhh8V4djGfX15ff9q4nl9stj538Pj1gYNRHsyGuZeP5hez2agllkNyjELg4T02wzZ/ejCtgmnarM9rPL3BzryT+7tNhZyejTbMzk43rx5ICYAj4TTHG1qtVmdnk/MGa/uP9B82fnpGYc8pkLXpuZPdgdOtozeYbtidt2enkz9PpjjBAXA0HJl4QztlMLTCarlc/Ljf/D6sttOv7oeMH3/NHxbnvSUxLO/fR0lwcbk78Gw2+QxPpsclns+bOJ1tNu7b2+jjDomhJADeNTHxltZXPN58/fr184Mvg2/jyxbGlzQ8+OPxOykxup1i17DHbRO8dHJhdbeNlVGtTFrihXn3q+3m3Sh6ZpISH35XJQC8A2LijayvjPz85dv65ok9V0dOW+Kg8csf25Q4ufj3N9/zXx05iYbtO0xb4vm8aYLsRtGUlAA4MmLiLSxvPm+vjNxctXg9+HQ5uppytAQfOP5/3xLT4x3zUSBMrsBcG6XEK+dKAHgnxES2WnwdXx/w6erq4/z8/PxsMF7bn5bgQ8dPC+G3ZxheHbknCl5pidViMdrv/po5nZ1NUsKlEgDHQUxU4/V58p19ugY/LcGHjt9xtxqdbzjQ5MqL2Xz+6x0mLbG97XNjeTO+yeO3ifBDSgAcIzERTQ4GbK2W0xstty1x4Phnbr/dLEer/TDx5uVHSK0fIvE0cL3/8Z2l4zMQ05Y4uVve/pq33vn2MMrgeSKMb+e4vd0MdQMHwFHxnIlo+vSHYR2dzR4f+DSxfdDCoePXdufsGA1+ZeTGxeWw1j8dEtl5vsR+02m/PH/LyeMmAHj/HJl4Y0MXrMtgNh8/yXL/cYY/Gn8+n+9c5Tg2Hvz7kYPZxfx6SI/xyZXJJZnrtHnJ7OWSGOxegekGDoCjIyai84+XO4+aXt+ccX01W22/rk+W+wPHPzibX13vPtH60Ww2nwxej9x9g0ezdQ9cX+3+287ptZfzqw/PZq/nfbr6zaMtxtzAAXCEnOZ4G6vl8n74ln56uvNUy30OHf/LarX+X+KDYeruEzSnVqvV/cPQ346cnON4Ol+yeZc/+Xgv7wCAYyImjlpNgckFE1IC4Eg5zXHMXnm+xCvGD8xwAwfAERMTR2z6CKs/aYnV4uZmsVgu17eMfh7dA+JSCYBjJiaO1+SRF3/WErfL29vF4tv035E93Oix+QWAIyQmjtZftcT2SMaDdUj86Y0eALxXLsA8VqvF1+9PT848nQ9JsHm912q5+P70sM3T8/n84vywW1EAeJ/EBACQOM0BACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAIiYAgERMAACJmAAAEjEBACRiAgBIxAQAkIgJACAREwBAcHLyX9fTIjc2vymcAAAAAElFTkSuQmCC&quot;</span>;</span><br><span class="line">    <span class="comment">//map中字段的key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FIELD = <span class="string">&quot;field&quot;</span>;</span><br><span class="line">    <span class="comment">//map中数据对象的key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_OBJ = <span class="string">&quot;obj&quot;</span>;</span><br><span class="line">    <span class="comment">//map中字段所属的excelValue注解中chunkName的值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_EXCEL_VALUE = <span class="string">&quot;excelValue&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//测试用，正式用spring加载</span></span><br><span class="line">        com.aspose.cells.License license = <span class="keyword">new</span> com.aspose.cells.License();</span><br><span class="line">        license.setLicense(ExcelUtil.class.getClassLoader().getResourceAsStream(<span class="string">&quot;Aspose.Total.Java.lic&quot;</span>));</span><br><span class="line"><span class="comment">//        AaTest aaTest = new AaTest();</span></span><br><span class="line"><span class="comment">//        aaTest.setName(&quot;哇哇哇哇哇哇哇哇哇哇哇哇哇哇&quot;);</span></span><br><span class="line"><span class="comment">//        aaTest.setList(Arrays.asList(1,2,3,4,5,6,7,8,8,9));</span></span><br><span class="line"><span class="comment">//        BbTest bbTest = new BbTest();</span></span><br><span class="line"><span class="comment">//        aaTest.setBbTest(bbTest);</span></span><br><span class="line"><span class="comment">//        export(aaTest);</span></span><br><span class="line">        Zzz zzz = <span class="keyword">new</span> Zzz();</span><br><span class="line">        export(zzz);</span><br><span class="line"><span class="comment">//        File file = new File(&quot;E:\\Zzz.xlsx&quot;);</span></span><br><span class="line"><span class="comment">//        try (FileInputStream fileInputStream = new FileInputStream(file)) &#123;</span></span><br><span class="line"><span class="comment">//            Object[][] objects = importData(fileInputStream);</span></span><br><span class="line"><span class="comment">//            for (Object[] objects1: objects) &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(Arrays.toString(objects1));</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        System.out.println(<span class="string">&quot;====================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入转二维数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object[][] importData(InputStream inputStream) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Workbook workbook = <span class="keyword">new</span> Workbook(inputStream);</span><br><span class="line">        Worksheet worksheet = workbook.getWorksheets().get(<span class="number">0</span>);</span><br><span class="line">        Cells cells = worksheet.getCells();</span><br><span class="line">        Object[][] dataTable = worksheet.getCells().exportArray(<span class="number">0</span>, <span class="number">0</span>, cells.getMaxRow()+<span class="number">1</span>, cells.getMaxColumn()+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> dataTable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">export</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;Object&gt; sheetList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        findAllSheet(sheetList, obj);</span><br><span class="line">        <span class="comment">//创建excel</span></span><br><span class="line">        Workbook workbook = <span class="keyword">new</span> Workbook();</span><br><span class="line">        <span class="comment">//初始化样式</span></span><br><span class="line">        ExcelStyle.initAllStyle(workbook);</span><br><span class="line">        ExcelStyle.initAllStyle(workbook);</span><br><span class="line">        WorksheetCollection worksheets = workbook.getWorksheets();</span><br><span class="line">        String fileName = obj.getClass().getSimpleName() + <span class="string">&quot;.xlsx&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(sheetList.size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;sheetList.size(); i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                    worksheets.add();</span><br><span class="line">                &#125;</span><br><span class="line">                Worksheet sheet = worksheets.get(i);</span><br><span class="line">                Object o = sheetList.get(i);</span><br><span class="line">                <span class="comment">//生成sheet</span></span><br><span class="line">                createSheet(sheet, o, obj.getClass());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        workbook.save(<span class="string">&quot;E:\\&quot;</span> + fileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归获取所有需要生成sheet的对象，放在sheetList集合中,如果循环依赖，就直接抛出异常，调用方自己处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetList</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findAllSheet</span><span class="params">(List&lt;Object&gt; sheetList, Object obj)</span> <span class="keyword">throws</span> IllegalAccessException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Class&lt;?&gt; aClass = obj.getClass();</span><br><span class="line">        ExcelEntity excelEntityAnno = aClass.getAnnotation(ExcelEntity.class);</span><br><span class="line">        <span class="keyword">if</span>(excelEntityAnno != <span class="keyword">null</span>) &#123;</span><br><span class="line">            sheetList.add(obj);</span><br><span class="line">        &#125;</span><br><span class="line">        Field[] fields = aClass.getDeclaredFields();</span><br><span class="line">        <span class="keyword">if</span>(fields != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(Field field: fields) &#123;</span><br><span class="line">                <span class="keyword">if</span>(field.getAnnotation(ExcelEntity.class) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    findAllSheet(sheetList, field.get(obj));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createSheet</span><span class="params">(Worksheet sheet, Object obj, Class rootClass)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class&lt;?&gt; aClass = obj.getClass();</span><br><span class="line">        ExcelEntity excelEntityAnno = aClass.getAnnotation(ExcelEntity.class);</span><br><span class="line">        <span class="keyword">if</span>(excelEntityAnno == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//如果类上没有标识时一个excel导出类，就在字段上找@ExcelSheet注解</span></span><br><span class="line">            log.warn(<span class="string">&quot;类未添加ExcelEntity注解&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置默认sheet名</span></span><br><span class="line">        String sheetName = excelEntityAnno.sheetName();</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isBlank(sheetName)) &#123;</span><br><span class="line">            sheetName = aClass.getSimpleName();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sheet.setName(sheetName);</span><br><span class="line">        Cells cells = sheet.getCells();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置列宽</span></span><br><span class="line">        <span class="keyword">double</span>[] widths = excelEntityAnno.cellsWidth();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; widths.length; i++) &#123;</span><br><span class="line">            cells.setColumnWidth(i, widths[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过两个坐标（x,y）和（m,n）确定每个块的边界，Integer数字长度为4，0：x, 1:y, 2:m, 3:n</span></span><br><span class="line">        Map&lt;String, Integer[]&gt; chunkArea = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取chunk</span></span><br><span class="line">        ExcelChunk[] chunkAnnos = excelEntityAnno.chunks();</span><br><span class="line">        <span class="comment">//按照chunk依赖关系分组，同一个依赖放一组</span></span><br><span class="line">        Map&lt;String, List&lt;ExcelChunk&gt;&gt; dependGroup = Arrays.stream(chunkAnnos).collect(Collectors.groupingBy(excelChunk -&gt; excelChunk.dependChunk()));</span><br><span class="line">        <span class="comment">//获取字段数据</span></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; allValueField = getAllValueField(obj);</span><br><span class="line">        <span class="comment">//需要按照chunk名称分组，同一个chunk的放一组，方便按依赖顺序生成，如果存在多层级需要递归出所有的分组数据</span></span><br><span class="line">        Map&lt;String, List&lt;Map&lt;String, Object&gt;&gt;&gt; filedGroup = allValueField.stream()</span><br><span class="line">                .collect(Collectors.groupingBy(fieldMap -&gt; ((ExcelValue) fieldMap.get(KEY_EXCEL_VALUE)).chunkName()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从依赖关系根节点往下生成，可以避免循环依赖问题</span></span><br><span class="line">        List&lt;ExcelChunk&gt; rootList = dependGroup.get(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(rootList.size() != <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;根chunk错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置根chunk数据</span></span><br><span class="line">        ExcelChunk rootChunk = rootList.get(<span class="number">0</span>);</span><br><span class="line">        Integer[] rootArea = <span class="keyword">new</span> Integer[]&#123;rootChunk.offsetX(), rootChunk.offsetY(), rootChunk.offsetY(), rootChunk.offsetY()&#125;;</span><br><span class="line">        chunkArea.put(rootChunk.name(), rootArea);</span><br><span class="line">        <span class="comment">//处理固定数据</span></span><br><span class="line">        setFixData(rootArea, rootChunk, sheet, rootClass);</span><br><span class="line">        <span class="comment">//处理字段数据</span></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; rootChunkFields = filedGroup.get(rootChunk.name());</span><br><span class="line">        setFieldData(rootArea, rootChunkFields, sheet, rootClass);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置依赖根节点后面的节点数据</span></span><br><span class="line">        List&lt;String&gt; temp0 = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">//用于存放下一级需要遍历的数据，避免使用递归</span></span><br><span class="line">        temp0.add(rootChunk.name());</span><br><span class="line">        List&lt;String&gt; temp1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; temp = temp0;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;temp.size(); i++) &#123;</span><br><span class="line">            String dependChunk = temp.get(i);</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isNotBlank(dependChunk)) &#123;</span><br><span class="line">                List&lt;ExcelChunk&gt; chunks = dependGroup.get(dependChunk);</span><br><span class="line">                <span class="keyword">if</span> (chunks != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (ExcelChunk e : chunks) &#123;</span><br><span class="line">                        String name = e.name();</span><br><span class="line">                        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                            temp1.add(name);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            temp0.add(name);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//处理该chunk的数据</span></span><br><span class="line">                        <span class="comment">//获取依赖的chunk，计算当前chunk的初始位置，并将边界放在chunkArea中</span></span><br><span class="line">                        Integer[] area = initPosition(dependChunk, chunkArea, e);</span><br><span class="line">                        <span class="comment">//处理固定数据</span></span><br><span class="line">                        setFixData(area, e, sheet, rootClass);</span><br><span class="line">                        <span class="comment">//处理字段数据</span></span><br><span class="line">                        List&lt;Map&lt;String, Object&gt;&gt; chunkFields = filedGroup.get(name);</span><br><span class="line">                        setFieldData(area, chunkFields, sheet, rootClass);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//当执行到最后一条数据的时候，切换list</span></span><br><span class="line">            <span class="keyword">if</span>(i==temp.size()-<span class="number">1</span>) &#123;</span><br><span class="line">                temp.clear();</span><br><span class="line">                temp = flag?temp1:temp0;</span><br><span class="line">                flag = !flag;</span><br><span class="line">                i=-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//quectel背景</span></span><br><span class="line">        sheet.setBackgroundImage(Base64.getDecoder().decode(BACKGROUND_IMG));</span><br><span class="line">        <span class="comment">//找到整个sheet的最后行列边界</span></span><br><span class="line">        <span class="keyword">int</span> maxRow = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxCell = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(Integer[] is: chunkArea.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(is[<span class="number">2</span>] &gt; maxRow) &#123;</span><br><span class="line">                maxRow = is[<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(is[<span class="number">3</span>] &gt; maxCell) &#123;</span><br><span class="line">                maxCell = is[<span class="number">3</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调整行高</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=rootArea[<span class="number">0</span>]; i&lt;=maxRow; i++) &#123;</span><br><span class="line">            <span class="comment">//自适应行高</span></span><br><span class="line">            sheet.autoFitRow(i);</span><br><span class="line">            <span class="keyword">double</span> rowHeight = cells.getRowHeight(i);</span><br><span class="line">            cells.setRowHeight(i, Math.max(excelEntityAnno.rowHeight(), rowHeight));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=rootArea[<span class="number">1</span>]; j&lt;=maxCell; j++) &#123;</span><br><span class="line">                Cell cell = cells.get(i, j);</span><br><span class="line">                <span class="comment">//将在数据区没有样式的cell补充上通用样式</span></span><br><span class="line">                <span class="keyword">if</span>(cell.getValue() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    cell.setStyle(sheet.getWorkbook().getNamedStyle(StyleEnum.COMMON.name()));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//锁定单元格</span></span><br><span class="line">        LockModeEnum lock = excelEntityAnno.lock();</span><br><span class="line">        StyleFlag styleFlag = <span class="keyword">new</span> StyleFlag();</span><br><span class="line">        styleFlag.setLocked(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(LockModeEnum.ALL == lock) &#123;</span><br><span class="line">            sheet.protect(ProtectionType.ALL);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LockModeEnum.EXCLUDE == lock) &#123;</span><br><span class="line">            String[] strings = excelEntityAnno.lockExclude();</span><br><span class="line">            setLock(cells, strings, <span class="keyword">false</span>, styleFlag);</span><br><span class="line">            sheet.protect(ProtectionType.ALL);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(LockModeEnum.INCLUDE == lock) &#123;</span><br><span class="line">            String[] strings = excelEntityAnno.lockInclude();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">255</span>; i++) &#123;</span><br><span class="line">                Style style = cells.getColumns().get(i).getStyle();</span><br><span class="line">                style.setLocked(<span class="keyword">false</span>);</span><br><span class="line">                cells.getColumns().get(i).applyStyle(style, styleFlag);</span><br><span class="line">            &#125;</span><br><span class="line">            setLock(cells, strings, <span class="keyword">true</span>, styleFlag);</span><br><span class="line">            sheet.protect(ProtectionType.ALL);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有的填充在excel中的字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> map中两个key，field和dataObj</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Map&lt;String, Object&gt;&gt; getAllValueField(Object obj) <span class="keyword">throws</span> IllegalAccessException &#123;</span><br><span class="line">        <span class="keyword">if</span>(obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Field[] fields = obj.getClass().getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span>(Field field: fields) &#123;</span><br><span class="line">            ExcelValues excelValues = field.getAnnotation(ExcelValues.class);</span><br><span class="line">            <span class="keyword">if</span>(excelValues != <span class="keyword">null</span>) &#123;</span><br><span class="line">                ExcelValue[] values = excelValues.values();</span><br><span class="line">                <span class="keyword">for</span>(ExcelValue excelValue: values) &#123;</span><br><span class="line">                    getExcelValueAnno(excelValue, field, obj, result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ExcelValue excelValue = field.getAnnotation(ExcelValue.class);</span><br><span class="line">            getExcelValueAnno(excelValue, field, obj, result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置单个excelValue注解</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> excelValue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> field</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getExcelValueAnno</span><span class="params">(ExcelValue excelValue, Field field, Object obj, List&lt;Map&lt;String, Object&gt;&gt; result)</span> <span class="keyword">throws</span> IllegalAccessException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(excelValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//获取字段属性值</span></span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Object value = field.get(obj);</span><br><span class="line">            <span class="keyword">if</span>(ValueTypeEnum.OBJ == excelValue.type()) &#123;</span><br><span class="line">                result.addAll(getAllValueField(value));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ValueTypeEnum.VALUE == excelValue.type()) &#123;</span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                map.put(KEY_FIELD, field);</span><br><span class="line">                map.put(KEY_OBJ, value);</span><br><span class="line">                map.put(KEY_EXCEL_VALUE, excelValue);</span><br><span class="line">                result.add(map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化块的位置,并将位置放在map中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dependChunk 依赖块的名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunkArea 块位置集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e 当前块配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer[] initPosition(String dependChunk, Map&lt;String, Integer[]&gt; chunkArea, ExcelChunk e) &#123;</span><br><span class="line">        Integer[] integers = chunkArea.get(dependChunk);</span><br><span class="line">        <span class="keyword">int</span> beginX;</span><br><span class="line">        <span class="keyword">int</span> beginY;</span><br><span class="line">        <span class="keyword">if</span>(ShipEnum.RIGHT == e.position()) &#123;<span class="comment">//相对位置在右边</span></span><br><span class="line">            beginX = integers[<span class="number">0</span>] + e.offsetX();</span><br><span class="line">            beginY = integers[<span class="number">3</span>] + <span class="number">1</span> + e.offsetY();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//默认相对位置在下面</span></span><br><span class="line">            beginX = integers[<span class="number">2</span>] + <span class="number">1</span> + e.offsetX();</span><br><span class="line">            beginY = integers[<span class="number">1</span>] + e.offsetY();</span><br><span class="line">        &#125;</span><br><span class="line">        Integer[] result = <span class="keyword">new</span> Integer[<span class="number">4</span>];</span><br><span class="line">        result[<span class="number">0</span>] = beginX;</span><br><span class="line">        result[<span class="number">1</span>] = beginY;</span><br><span class="line">        result[<span class="number">2</span>] = beginX;</span><br><span class="line">        result[<span class="number">3</span>] = beginY;</span><br><span class="line">        <span class="comment">//将数据放在map中</span></span><br><span class="line">        chunkArea.put(e.name(), result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置固定数据，并且修改块区域位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> area</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFixData</span><span class="params">(Integer[] area, ExcelChunk e, Worksheet sheet, Class rootClazz)</span> <span class="keyword">throws</span> IllegalAccessException, InvocationTargetException, NoSuchMethodException </span>&#123;</span><br><span class="line">        <span class="comment">//获取固定单元格数据</span></span><br><span class="line">        ExcelValue[] excelFixCellAnnos = e.fixCells();</span><br><span class="line">        <span class="keyword">for</span>(ExcelValue excelFixCell: excelFixCellAnnos) &#123;</span><br><span class="line">            setExcelValue(area, excelFixCell.value(), excelFixCell, sheet, rootClazz);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字段数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> area 块区域数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chunkFields 字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setFieldData</span><span class="params">(Integer[] area, List&lt;Map&lt;String, Object&gt;&gt; chunkFields, Worksheet sheet, Class rootClazz)</span> <span class="keyword">throws</span> IllegalAccessException, NoSuchFieldException, InstantiationException, InvocationTargetException, NoSuchMethodException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(chunkFields != <span class="keyword">null</span> &amp;&amp; chunkFields.size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(Map&lt;String, Object&gt; fieldMap: chunkFields) &#123;</span><br><span class="line">                Field field = (Field) fieldMap.get(KEY_FIELD);</span><br><span class="line">                ExcelValue excelValueAnno = (ExcelValue) fieldMap.get(KEY_EXCEL_VALUE);</span><br><span class="line">                <span class="comment">//获取字段属性值</span></span><br><span class="line">                field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                Object value = fieldMap.get(KEY_OBJ);</span><br><span class="line">                <span class="comment">//如果是多层级取值</span></span><br><span class="line">                String[] valueKeys = excelValueAnno.value();</span><br><span class="line">                <span class="keyword">if</span>(valueKeys.length == <span class="number">1</span> ) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(StringUtils.isNotBlank(valueKeys[<span class="number">0</span>])) &#123;</span><br><span class="line">                        value = getFiledValue(value, valueKeys[<span class="number">0</span>].split(<span class="string">&quot;\\.&quot;</span>), <span class="number">0</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(valueKeys.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    List values = <span class="keyword">new</span> ArrayList();</span><br><span class="line">                    <span class="keyword">for</span>(String vk: valueKeys) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(StringUtils.isNotBlank(vk)) &#123;</span><br><span class="line">                            values.add(getFiledValue(value, vk.split(<span class="string">&quot;\\.&quot;</span>), <span class="number">0</span>));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            values.add(vk);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    value = values;</span><br><span class="line">                &#125;</span><br><span class="line">                setExcelValue(area, value, excelValueAnno, sheet, rootClazz);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归获取字段的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataObj</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NoSuchFieldException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title">getFiledValue</span><span class="params">(Object dataObj, String[] keys, <span class="keyword">int</span> index)</span> <span class="keyword">throws</span> IllegalAccessException, NoSuchFieldException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(dataObj <span class="keyword">instanceof</span> Map) &#123;</span><br><span class="line">            Object o = ((Map) dataObj).get(keys[index]);</span><br><span class="line">            <span class="keyword">if</span>(keys.length &gt; index+<span class="number">1</span> &amp;&amp; o != <span class="keyword">null</span>) &#123; <span class="comment">//如果还需要取下级</span></span><br><span class="line">                <span class="keyword">return</span> getFiledValue(o, keys, index + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(dataObj <span class="keyword">instanceof</span> Object[] || dataObj <span class="keyword">instanceof</span> Collection) &#123; <span class="comment">//如果是集合，需要取集合内的数据</span></span><br><span class="line">            <span class="keyword">if</span>(dataObj <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">                dataObj = ((Collection) dataObj).toArray();</span><br><span class="line">            &#125;</span><br><span class="line">            List result = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            <span class="keyword">for</span>(Object o: (Object[]) dataObj) &#123; <span class="comment">//循环获取集合中的数据</span></span><br><span class="line">                <span class="keyword">if</span>(keys.length &gt; index+<span class="number">1</span> &amp;&amp; o != <span class="keyword">null</span>) &#123; <span class="comment">//如果还需要取下级</span></span><br><span class="line">                    result.add(getFiledValue(o, keys, index+<span class="number">1</span>)); <span class="comment">//递归获取数据</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    Field field = o.getClass().getDeclaredField(keys[index]);</span><br><span class="line">                    <span class="comment">//获取字段属性值</span></span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                    Object value = field.get(o);</span><br><span class="line">                    result.add(value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果是对象</span></span><br><span class="line">            Field field = dataObj.getClass().getDeclaredField(keys[index]);</span><br><span class="line">            <span class="comment">//获取字段属性值</span></span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Object value = field.get(dataObj);</span><br><span class="line">            <span class="keyword">if</span>(keys.length &gt; index+<span class="number">1</span> &amp;&amp; value != <span class="keyword">null</span>) &#123; <span class="comment">//如果还需要取下级</span></span><br><span class="line">                <span class="keyword">return</span> getFiledValue(value, keys, index + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在excel中设置数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> area 区域</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> excelValueAnno 配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet excel</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setExcelValue</span><span class="params">(Integer[] area, Object value, ExcelValue excelValueAnno, Worksheet sheet, Class rootClazz)</span> <span class="keyword">throws</span> IllegalAccessException, InvocationTargetException, NoSuchMethodException </span>&#123;</span><br><span class="line">        <span class="comment">//获取数据填充的起始位置</span></span><br><span class="line">        <span class="keyword">int</span> x = excelValueAnno.x();</span><br><span class="line">        <span class="keyword">int</span> y = excelValueAnno.y();</span><br><span class="line">        <span class="keyword">int</span> realX = area[<span class="number">0</span>] + x; <span class="comment">//excel中的真实坐标</span></span><br><span class="line">        <span class="keyword">int</span> realY = area[<span class="number">1</span>] + y; <span class="comment">//excel中的真实坐标</span></span><br><span class="line">        <span class="keyword">int</span> stepX = excelValueAnno.xNum(); <span class="comment">//添加单个数据时的X步进</span></span><br><span class="line">        <span class="keyword">int</span> stepY = excelValueAnno.yNum(); <span class="comment">//添加单个数据时的Y步进</span></span><br><span class="line">        <span class="comment">//自定义处理方法</span></span><br><span class="line">        Method handlerMethod = <span class="keyword">null</span>;</span><br><span class="line">        String handler = excelValueAnno.handler();</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isNotBlank(handler)) &#123;</span><br><span class="line">            handlerMethod = rootClazz.getMethod(handler, Object.class, Worksheet.class, Cell.class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(value <span class="keyword">instanceof</span> Collection || value <span class="keyword">instanceof</span> String[]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(value <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">                value = ((Collection) value).toArray();</span><br><span class="line">            &#125;</span><br><span class="line">            Object[] values = (Object[]) value;</span><br><span class="line">            <span class="keyword">if</span>(values != <span class="keyword">null</span> &amp;&amp; values.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//获取填充方向</span></span><br><span class="line">                DirectionEnum direction = excelValueAnno.direction();</span><br><span class="line">                <span class="keyword">if</span>(direction == DirectionEnum.RIGHT) &#123; <span class="comment">//向右填充</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;values.length; j++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(j&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                            realY+=stepY;</span><br><span class="line">                        &#125;</span><br><span class="line">                        setCellValue(sheet, excelValueAnno.style(), values[j], realX, realY, stepX, stepY, handlerMethod);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//计算边界位置</span></span><br><span class="line">                    realY+=(stepY-<span class="number">1</span>);</span><br><span class="line">                    realX+=(stepX-<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123; <span class="comment">//默认向下填充</span></span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;values.length; j++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(j&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                            realX+=stepX;</span><br><span class="line">                        &#125;</span><br><span class="line">                        setCellValue(sheet, excelValueAnno.style(), values[j], realX, realY, stepX, stepY, handlerMethod);</span><br><span class="line">                    &#125;</span><br><span class="line">                    realX+=(stepX-<span class="number">1</span>);</span><br><span class="line">                    realY+=(stepY-<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setCellValue(sheet, excelValueAnno.style(), value, realX, realY, stepX, stepY, handlerMethod);</span><br><span class="line">            realX = realX+stepX-<span class="number">1</span>;</span><br><span class="line">            realY = realY+stepY-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新area最大位置记录</span></span><br><span class="line">        <span class="keyword">if</span>(realX &gt; area[<span class="number">2</span>]) &#123;</span><br><span class="line">            area[<span class="number">2</span>] = realX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(realY &gt; area[<span class="number">3</span>]) &#123;</span><br><span class="line">            area[<span class="number">3</span>] = realY;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置单元格</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> style</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> realX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> realY</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stepX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stepY</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setCellValue</span><span class="params">(Worksheet sheet, StyleEnum style, Object o, <span class="keyword">int</span> realX, <span class="keyword">int</span> realY, <span class="keyword">int</span> stepX, <span class="keyword">int</span> stepY, Method handler)</span> <span class="keyword">throws</span> InvocationTargetException, IllegalAccessException </span>&#123;</span><br><span class="line">        Cells cells = sheet.getCells();</span><br><span class="line">        Cell cell = cells.get(realX, realY);</span><br><span class="line">        cell.setValue(o);</span><br><span class="line">        cell.setStyle(sheet.getWorkbook().getNamedStyle(style.name()));</span><br><span class="line">        <span class="comment">//自定义处理方法执行</span></span><br><span class="line">        <span class="keyword">if</span>(handler != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//执行自定义代码静态方法</span></span><br><span class="line">            handler.invoke(<span class="keyword">null</span>, o, sheet, cell);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(stepX&gt;<span class="number">1</span>||stepY&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    cells.merge(realX, realY, stepX, stepY);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    log.warn(<span class="string">&quot;合并单元格冲突...&quot;</span> + e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置单元格锁</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cells</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> strings</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockFlag</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> styleFlag</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setLock</span><span class="params">(Cells cells, String[] strings, <span class="keyword">boolean</span> lockFlag, StyleFlag styleFlag)</span> </span>&#123;</span><br><span class="line">        Style style;</span><br><span class="line">        <span class="keyword">for</span>(String s: strings) &#123;</span><br><span class="line">            String[] split = s.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(split.length == <span class="number">3</span>) &#123; <span class="comment">//整行，或者整列</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;R&quot;</span>.equals(split[<span class="number">0</span>])) &#123; <span class="comment">//整行</span></span><br><span class="line">                    <span class="keyword">int</span> row = Integer.valueOf(split[<span class="number">1</span>]);</span><br><span class="line">                    style = cells.getRows().get(row).getStyle();</span><br><span class="line">                    style.setLocked(lockFlag);</span><br><span class="line">                    cells.getRows().get(row).applyStyle(style, styleFlag);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;Integer.valueOf(split[<span class="number">2</span>]); i++) &#123;</span><br><span class="line">                        Style style1 = cells.get(row, i).getStyle();</span><br><span class="line">                        style1.setLocked(!lockFlag);</span><br><span class="line">                        cells.get(row, i).setStyle(style1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;C&quot;</span>.equals(split[<span class="number">0</span>])) &#123; <span class="comment">//整列</span></span><br><span class="line">                    <span class="keyword">int</span> cell = Integer.valueOf(split[<span class="number">1</span>]);</span><br><span class="line">                    style = cells.getColumns().get(cell).getStyle();</span><br><span class="line">                    style.setLocked(lockFlag);</span><br><span class="line">                    cells.getColumns().get(cell).applyStyle(style, styleFlag);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;Integer.valueOf(split[<span class="number">2</span>]); i++) &#123;</span><br><span class="line">                        Style style1 = cells.get(i, cell).getStyle();</span><br><span class="line">                        style1.setLocked(!lockFlag);</span><br><span class="line">                        cells.get(i, cell).setStyle(style1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(split.length == <span class="number">4</span>) &#123; <span class="comment">//范围</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=Integer.valueOf(split[<span class="number">0</span>]); i&lt;=Integer.valueOf(split[<span class="number">2</span>]); i++) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j=Integer.valueOf(split[<span class="number">1</span>]); j&lt;=Integer.valueOf(split[<span class="number">3</span>]); j++) &#123;</span><br><span class="line">                        style = cells.get(i, j).getStyle();</span><br><span class="line">                        style.setLocked(lockFlag);</span><br><span class="line">                        cells.get(i, j).setStyle(style);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul><li>Zzz</li><li>FormItemInfoVo</li><li>StandardProduct</li><li>ConfigParam</li></ul><h3 id="Zzz"><a href="#Zzz" class="headerlink" title="Zzz"></a>Zzz</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/20 17:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ExcelEntity(lock = LockModeEnum.ALL, cellsWidth = &#123;6, 21, 26, 25, 31&#125;,</span></span><br><span class="line"><span class="meta">        chunks = @ExcelChunk(offsetY = 1, fixCells = &#123;</span></span><br><span class="line"><span class="meta">                @ExcelValue(value = &quot;Product Definition&quot;, yNum = 4, style = StyleEnum.TITLE),</span></span><br><span class="line"><span class="meta">                @ExcelValue(value = &quot;基本信息&quot;, x=1, yNum = 4, style = StyleEnum.MODULE_TITLE),</span></span><br><span class="line"><span class="meta">                @ExcelValue(value = &#123;&quot;产品线&quot;, &quot;产品类别&quot;, &quot;产品级别&quot;, &quot;芯片厂商&quot;, &quot;封装方式&quot;, &quot;应用行业&quot;, &quot;Share Level&quot;, &quot;计划认证&quot;, &quot;产品经理&quot;&#125;, x = 2, style = StyleEnum.KEY),</span></span><br><span class="line"><span class="meta">                @ExcelValue(value = &#123;&quot;产品名称&quot;, &quot;产品等级&quot;, &quot;芯片平台&quot;, &quot;Flash大小&quot;, &quot;客户&quot;, &quot;目标市场区域&quot;, &quot;竞争对手&quot;, &quot;&quot;, &quot;销售负责人&quot;&#125;, x = 2, y=2, style = StyleEnum.KEY)</span></span><br><span class="line"><span class="meta">        &#125;))</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Zzz</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelValue(value = &#123;&quot;productClassification.code&quot;, &quot;competitors&quot;&#125;, x=2, y=1)</span></span><br><span class="line">    <span class="keyword">private</span> StandardProduct standardProduct = <span class="keyword">new</span> StandardProduct();</span><br><span class="line">    <span class="meta">@ExcelValues(values = &#123;</span></span><br><span class="line"><span class="meta">            @ExcelValue(value = &quot;formItemName&quot;, x = 11, style = StyleEnum.KEY, handler = &quot;handler&quot;),</span></span><br><span class="line"><span class="meta">            @ExcelValue(value = &quot;formItemName&quot;, x = 20, style = StyleEnum.KEY, handler = &quot;handler&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;FormItemInfoVo&gt; formItemInfoVos;</span><br><span class="line">    <span class="meta">@ExcelValue(value = &quot;answerResource&quot;, x = 11, y=1, yNum = 3, style = StyleEnum.KEY)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;FormItemInfoVo&gt; fi;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        formItemInfoVos = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        FormItemInfoVo formItemInfoVo = <span class="keyword">new</span> FormItemInfoVo();</span><br><span class="line">        formItemInfoVo.setFormItemName(<span class="string">&quot;aaaaa&quot;</span>);</span><br><span class="line">        FormItemInfoVo formItemInfoVo2 = <span class="keyword">new</span> FormItemInfoVo();</span><br><span class="line">        FormItemInfoVo formItemInfoVo3 = <span class="keyword">new</span> FormItemInfoVo();</span><br><span class="line">        FormItemInfoVo formItemInfoVo4 = <span class="keyword">new</span> FormItemInfoVo();</span><br><span class="line">        formItemInfoVo4.setFormItemName(<span class="string">&quot;bbbbb&quot;</span>);</span><br><span class="line">        FormItemInfoVo formItemInfoVo5 = <span class="keyword">new</span> FormItemInfoVo();</span><br><span class="line">        formItemInfoVos.add(formItemInfoVo);</span><br><span class="line">        formItemInfoVos.add(formItemInfoVo2);</span><br><span class="line">        formItemInfoVos.add(formItemInfoVo3);</span><br><span class="line">        formItemInfoVos.add(formItemInfoVo4);</span><br><span class="line">        formItemInfoVos.add(formItemInfoVo5);</span><br><span class="line">        fi = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        fi.addAll(formItemInfoVos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handler</span><span class="params">(Object value, Worksheet worksheet, Cell cell)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;aaaaa&quot;</span>.equals(value) || <span class="string">&quot;bbbbb&quot;</span>.equals(value)) &#123;</span><br><span class="line">            System.out.println(value);</span><br><span class="line">            System.out.println(worksheet);</span><br><span class="line">            <span class="keyword">int</span> row = cell.getRow();</span><br><span class="line">            <span class="keyword">int</span> column = cell.getColumn();</span><br><span class="line">            cell.setStyle(worksheet.getWorkbook().getNamedStyle(StyleEnum.MODULE_TITLE.name()));</span><br><span class="line">            worksheet.getCells().merge(row, column, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FormItemInfoVo"><a href="#FormItemInfoVo" class="headerlink" title="FormItemInfoVo"></a>FormItemInfoVo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormItemInfoVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String attributeId;</span><br><span class="line">    <span class="keyword">private</span> String formItemName = <span class="string">&quot;klaskljkwwwwwwwwwwwwwwwwwww cwwwwwwwww擦啊啊啊啊啊啊啊啊啊啊啊啊啊啊&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String formItemEnName;</span><br><span class="line">    <span class="keyword">private</span> String answerResource = <span class="string">&quot;wowowowo&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="StandardProduct"><a href="#StandardProduct" class="headerlink" title="StandardProduct"></a>StandardProduct</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StandardProduct</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ConfigParam productClassification = <span class="keyword">new</span> ConfigParam();</span><br><span class="line"><span class="keyword">private</span> String competitors = <span class="string">&quot;竞争对手ccc&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ConfigParam"><a href="#ConfigParam" class="headerlink" title="ConfigParam"></a>ConfigParam</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigParam</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String id = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> String code = <span class="string">&quot;xxxxx&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导出效果"><a href="#导出效果" class="headerlink" title="导出效果"></a>导出效果</h2><p><img src="/images/Aspose-Excel/image-20211222100222737.png" alt="image-20211222100222737"></p>]]></content>
      
      
      <categories>
          
          <category> Util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aspose </tag>
            
            <tag> Excel </tag>
            
            <tag> Util </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-命令</title>
      <link href="/Kafka/Kafka-%E5%91%BD%E4%BB%A4/"/>
      <url>/Kafka/Kafka-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="kafka创建"><a href="#kafka创建" class="headerlink" title="kafka创建"></a>kafka创建</h2><h3 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name zookeeper -p 2181:2181 -d zookeeper</span><br></pre></td></tr></table></figure><h3 id="安装kafka"><a href="#安装kafka" class="headerlink" title="安装kafka"></a>安装kafka</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name kafka -p 9092:9092 -e KAFKA_BROKER_ID=0 -e KAFKA_ZOOKEEPER_CONNECT=10.66.106.86:2181 -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.66.106.86:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -v C:\dockerData\kafka\data:/bitnami/kafka/data -d bitnami/kafka:3.0.0</span><br></pre></td></tr></table></figure><h3 id="进入kafka容器"><a href="#进入kafka容器" class="headerlink" title="进入kafka容器"></a>进入kafka容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it kafka bash</span><br><span class="line">cd opt/bitnami/kafka/bin/</span><br></pre></td></tr></table></figure><h2 id="Topic相关"><a href="#Topic相关" class="headerlink" title="Topic相关"></a>Topic相关</h2><h3 id="查看topic"><a href="#查看topic" class="headerlink" title="查看topic"></a>查看topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --list --bootstrap-server 10.66.106.86:9092</span><br></pre></td></tr></table></figure><h3 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --create --bootstrap-server 10.66.106.86:9092 --replication-factor 1 --partitions 2 --topic aacopy-topic</span><br></pre></td></tr></table></figure><h3 id="删除topic"><a href="#删除topic" class="headerlink" title="删除topic"></a>删除topic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --delete --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic</span><br><span class="line">有问题，会报错</span><br><span class="line">ERROR Shutdown broker because all log dirs in /bitnami/kafka/data have failed (kafka.log.LogManager)</span><br></pre></td></tr></table></figure><h3 id="插入消息"><a href="#插入消息" class="headerlink" title="插入消息"></a>插入消息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-producer-perf-test.sh --topic aacopy-log-test --num-records 10000 --record-size 100 --throughput -1 --producer-props bootstrap.servers=10.66.106.86:9092</span><br></pre></td></tr></table></figure><h2 id="segment"><a href="#segment" class="headerlink" title="segment"></a>segment</h2><h3 id="查看segment-index-Dump"><a href="#查看segment-index-Dump" class="headerlink" title="查看segment index Dump"></a>查看segment index Dump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000000000.index --print-data-log</span><br></pre></td></tr></table></figure><h3 id="查看segment-log-Dump"><a href="#查看segment-log-Dump" class="headerlink" title="查看segment log Dump"></a>查看segment log Dump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000000000.log --print-data-log</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-文件存储机制</title>
      <link href="/Kafka/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/"/>
      <url>/Kafka/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<ul><li><p>一个Kafka集群有多个broker</p></li><li><p>一个kafka节点就是一个broker，broker包含多个topic</p></li><li><p>一个topic中分为多个partition，每个partition是一个有序的队列，是topic物理上的分组</p></li><li><p>一个partition分为多个segment</p><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/kafka%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.png" alt="kafka文件存储"></p></li></ul><h2 id="文件存储位置"><a href="#文件存储位置" class="headerlink" title="文件存储位置"></a>文件存储位置</h2><p>在kafka的配置文件中，有一个server.properties配置文件，配置项log.dirs可以配置或查看数据文件存储位置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A comma separated list of directories under which to store log files</span></span><br><span class="line"><span class="meta">log.dirs</span>=<span class="string">/bitnami/kafka/data</span></span><br></pre></td></tr></table></figure><p>查看文件存储目录</p><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214083650998.png" alt="image-20211214083650998"></p><p>同一个topic有多个不同的partition，命名：topic名+序号，序号从0开始，例如aacopy-topic，有两个partition，aacopy-topic-0和aacopy-topic-1。</p><ul><li><p>为什么一个topic对应多个partition</p><p>如果只有一个partition，就限定了topic只能在一个服务器节点上使用，没办法扩展肯定存在性能瓶颈</p></li></ul><h2 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h2><h2 id="partition中的segment"><a href="#partition中的segment" class="headerlink" title="partition中的segment"></a>partition中的segment</h2><h3 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h3><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214090427777.png" alt="image-20211214090427777"></p><ul><li>segment file组成：由2大部分组成，分别为index file和data file，此2个文件一一对应，成对出现，后缀”.index”和“.log”分别表示为segment索引文件、数据文件.</li></ul><ul><li><p>segment文件命名规则：partion全局的第一个segment从0开始，后续每个segment文件名为上一个segment文件最后一条消息的offset值+1。数值最大为64位long大小，20位数字字符长度，没有数字用0填充。</p></li><li><p>index索引文件，包含两个值，offset（消息唯一标识）和position（消息存储在log中的物理地址）</p><p>index文件中的offset并不是连续的，是因为index不是为每条消息都建立索引，而是采用稀疏索引的方式，每隔一段建立索引，间隔大小通过配置log.index.interval.bytes查看，默认4KB，稀疏索引可以使内存中存放更多的索引数据。</p></li><li><p>消息查找过程</p><ul><li>因为offset是连续的，只需要使用二分法很快找到要找的offset在哪个文件里，再次通过二分查找就能找到索引文件中的位置，因为是稀疏索引有可能并不能直接命中，需要再次遍历就能找到offset对应的物理位置，此时需要遍历的范围也很小。</li><li>在二分查找索引的时候，标准的二分查找对缓存不友好，可能会造成不必要的缺页中断(线程被阻塞等待从磁盘加载没有被缓存到page cache 的数据)，至少会产生从几毫秒跳到1秒的延迟。Kafka通过将索引项分为热区和冷区，查询热数据部分时，遍历的Page永远是固定的，这样避免缺页中断</li></ul></li><li><p>Kafka中有三大类索引：位移索引、时间戳索引和已中止事务索引。分别是.index、.timeindex、.txnindex文件。</p></li><li><p>为什么segment会被分为多个文件</p><p>为了方便删除历史数据，节约空间，如果在一个文件里，一边写，一边清理前面的历史数据效率很低</p></li></ul><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><ol><li><p>创建一个新的topic，设置1个partition，限制segment文件的大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --create --bootstrap-server 10.66.106.86:9092 --replication-factor 1 --partitions 1 --config segment.bytes=1024000 --config segment.index.bytes=512000 --topic aacopy-log-test</span><br></pre></td></tr></table></figure></li><li><p>使用命令或者编写代码向topic中插入大量数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-producer-perf-test.sh --topic aacopy-log-test --num-records 10000 --record-size 100 --throughput -1 --producer-props bootstrap.servers=10.66.106.86:9092</span><br></pre></td></tr></table></figure></li><li><p>查看index文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /bitnami/kafka/data/aacopy-log-test-0/</span><br></pre></td></tr></table></figure><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214154556787.png" alt="image-20211214154556787"></p></li><li><p>查看segment index Dump</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000000000.index --print-data-log</span><br><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000009261.index --print-data-log</span><br></pre></td></tr></table></figure><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214154455665.png" alt="image-20211214154455665"></p></li><li><p>查看segment log Dump</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000000000.log --print-data-log</span><br><span class="line">./kafka-run-class.sh kafka.tools.DumpLogSegments --files /bitnami/kafka/data/aacopy-log-test-0/00000000000000009261.log --print-data-log</span><br></pre></td></tr></table></figure><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214155428442.png" alt="image-20211214155428442"></p></li><li><p>编写代码自己插入两条随机double数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initLargeAmountMsg</span><span class="params">(String topic, <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">       Random random = <span class="keyword">new</span> Random();</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;num; i++) &#123;</span><br><span class="line">           template.send(topic, String.valueOf(random.nextDouble()));</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211214155802944.png" alt="image-20211214155802944"></p></li><li><p>log文件中的第一条消息的offset，和文件名的的编号是一致的</p><p><img src="/images/Kafka-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6/image-20211215091613046.png" alt="image-20211215091613046"></p></li></ol><h2 id="消息数据清理"><a href="#消息数据清理" class="headerlink" title="消息数据清理"></a>消息数据清理</h2><p>kafka会启动一个定时任务，定时监测要删除的日志文件，通过log.retention.check.interval.ms进行配置时间间隔，默认5分钟执行一次。通过log.cleaner.threads配置执行清理任务的线程数</p><p>日志删除策略（log.cleanup.policy）</p><ul><li><p>直接删除，log.cleanup.policy=delete</p><ul><li><p>超过指定时间后删除</p><p>log.retention.hours=168，默认168小时（7天） </p><p>每个segment都会维护一个写入消息的时间戳，当当前segment写满后就不再更新时间戳，kafka根据当前时间和时间戳的差确定是否要删除该segment</p></li><li><p>超过指定文件大小后删除</p><p>log.retention.bytes=1073741824，超过1G后删除</p><p>当已经写满的日志文件总大小大于设置的阀值时，执行删除</p></li></ul></li><li><p>日志压缩，log.cleanup.policy=compact</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Netty-SpringBoot</title>
      <link href="/Netty/Netty-SpringBoot/"/>
      <url>/Netty/Netty-SpringBoot/</url>
      
        <content type="html"><![CDATA[<p>git地址：<a href="https://gitee.com/aacopy/netty-learn.git">https://gitee.com/aacopy/netty-learn.git</a></p><ol><li><p>创建一个springboot项目</p></li><li><p>添加maven依赖</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写消息处理的自定义handler</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ChannelGroup group = <span class="keyword">new</span> DefaultChannelGroup(GlobalEventExecutor.INSTANCE);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelActive</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Channel channel = ctx.channel();</span><br><span class="line">        String msg = channel.id() + <span class="string">&quot;已上线, channel：&quot;</span> + (group.size()+<span class="number">1</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        log.info(msg);</span><br><span class="line">        group.writeAndFlush(msg);</span><br><span class="line">        group.add(channel);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelInactive</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Channel channel = ctx.channel();</span><br><span class="line">        String msg = channel.id() + <span class="string">&quot;已下线, channel：&quot;</span> + group.size() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        log.info(msg);</span><br><span class="line">        group.writeAndFlush(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Channel channel = ctx.channel();</span><br><span class="line">        String message =channel.id() + <span class="string">&quot;: &quot;</span> + msg + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        log.info(message);</span><br><span class="line">        group.writeAndFlush(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写netty服务端</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyServer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//NIO线程组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ChannelFuture <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        ServerBootstrap bootstrap = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">        bootstrap.group(bossGroup, workerGroup)</span><br><span class="line">                .channel(NioServerSocketChannel.class)</span><br><span class="line">                .childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> </span>&#123;</span><br><span class="line">                        ChannelPipeline pipeline = ch.pipeline();</span><br><span class="line">                        <span class="comment">// 添加一个基于行的解码器</span></span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> LineBasedFrameDecoder(<span class="number">2048</span>));</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> StringDecoder());</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> StringEncoder());</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> CustomServerHandler());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        ChannelFuture future = bootstrap.bind(<span class="number">8888</span>).sync();</span><br><span class="line">        log.info(<span class="string">&quot;Netty Server start...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> future;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        workerGroup.shutdownGracefully();</span><br><span class="line">        bossGroup.shutdownGracefully();</span><br><span class="line">        log.info(<span class="string">&quot;Netty Server destroy...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>springboot容器启动 启动与关闭netty服务端</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyLearnApplication</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(NettyLearnApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> NettyServer nettyServer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ChannelFuture future = nettyServer.start();</span><br><span class="line">        Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> Thread(() -&gt; nettyServer.destroy()));</span><br><span class="line">        future.channel().closeFuture().sync();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li> 服务端编写完成</li><li>编写netty客户端自定义消息处理handler</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomClientHandler</span> <span class="keyword">extends</span> <span class="title">SimpleChannelInboundHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">channelRead0</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;接收到消息：&quot;</span> + msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>编写netty客户端</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        EventLoopGroup group = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">        Bootstrap bootstrap = <span class="keyword">new</span> Bootstrap();</span><br><span class="line">        bootstrap.group(group)</span><br><span class="line">                .channel(NioSocketChannel.class)</span><br><span class="line">                .handler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                        ChannelPipeline channelPipeline = ch.pipeline();</span><br><span class="line">                        channelPipeline.addLast(<span class="keyword">new</span> LineBasedFrameDecoder(<span class="number">2048</span>));</span><br><span class="line">                        channelPipeline.addLast(<span class="keyword">new</span> StringDecoder());</span><br><span class="line">                        channelPipeline.addLast(<span class="keyword">new</span> StringEncoder());</span><br><span class="line">                        channelPipeline.addLast(<span class="keyword">new</span> CustomClientHandler());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        SocketAddress remoteAddress = <span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8888</span>);</span><br><span class="line">        ChannelFuture channelFuture = bootstrap.connect(remoteAddress).sync();</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in,  <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            channelFuture.channel().writeAndFlush(scanner.nextLine() + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li><p>测试，启动springboot服务，并且启动3个NettyClient，idea中，多次启动需要打开Allow multiple instances</p><img src="/images/Netty-SpringBoot/image-20211208132604946.png" alt="image-20211208132604946" style="zoom: 80%;" /></li></ol><p>服务端打印</p><p><img src="/images/Netty-SpringBoot/image-20211208132727512.png" alt="image-20211208132727512"></p><p>客户端</p><p><img src="/images/Netty-SpringBoot/image-20211208132758543.png" alt="image-20211208132758543"></p><ol start="10"><li>在其中一个客户端中输入消息，可以看到在其他客户端能够接收到消息</li></ol><p><img src="/images/Netty-SpringBoot/image-20211208133004534.png" alt="image-20211208133004534"></p><p><img src="/images/Netty-SpringBoot/image-20211208133018288.png" alt="image-20211208133018288"></p><p><img src="/images/Netty-SpringBoot/image-20211208133043512.png" alt="image-20211208133043512"></p><p>另外一种方式：</p><p>第4步和第5步不执行，执行如下操作，使用@PostConstruct和@PreDestroy注解使netty服务随容器一起启动关闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyServer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//NIO线程组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        ServerBootstrap bootstrap = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">        bootstrap.group(bossGroup, workerGroup)</span><br><span class="line">                .channel(NioServerSocketChannel.class)</span><br><span class="line">                .childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> </span>&#123;</span><br><span class="line">                        ChannelPipeline pipeline = ch.pipeline();</span><br><span class="line">                        <span class="comment">// 添加一个基于行的解码器</span></span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> LineBasedFrameDecoder(<span class="number">2048</span>));</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> StringDecoder());</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> StringEncoder());</span><br><span class="line">                        pipeline.addLast(<span class="keyword">new</span> CustomServerHandler());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        ChannelFuture future = bootstrap.bind(<span class="number">8888</span>).sync();</span><br><span class="line">        log.info(<span class="string">&quot;Netty Server start...&quot;</span>);</span><br><span class="line">        future.channel().closeFuture().sync();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreDestroy</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;Netty Server destroy...&quot;</span>);</span><br><span class="line">        workerGroup.shutdownGracefully();</span><br><span class="line">        bossGroup.shutdownGracefully();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Netty-HelloWorld</title>
      <link href="/Netty/Netty-HelloWorld/"/>
      <url>/Netty/Netty-HelloWorld/</url>
      
        <content type="html"><![CDATA[<p>Netty是由JBOSS提供的一个java开源框架，现为 Github上的独立项目。Netty提供异步的、事件驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。</p><p>官方网站：<a href="https://netty.io/">https://netty.io/</a></p><p>Netty主要针对在TCP协议下，面向Clients端的高并发应用，或者Peer to Peer场景下的大量数据持续传输的应用</p><p>Netty本质上是一个NIO框架</p><p><img src="/images/Netty-HelloWorld/image-20220623080925391.png" alt="image-20220623080925391"></p><ul><li>应用场景<ul><li>服务间的通讯，比如RPC框架Dubbo</li><li>大数据领域</li></ul></li></ul><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="Channel"><a href="#Channel" class="headerlink" title="Channel"></a>Channel</h3><p>Channel可以看作是传入或者传出数据的载体.可以打开关闭,连接或者断开连接.</p><h3 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h3><p>Netty使用回调来处理事件,当一个回调被触发时,相关的事件会被一个ChannelHandler接口的实现处理,例如:当有新的连接创建时,ChannelHandler的channelActivce()方法会被调用</p><h3 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h3><p>ChannelFuture提供了额外方法可以注册一个或多个ChannelFutureListener实例.operationComplete方法在操作完成时被调用</p><ul><li>每个Netty的出站I/O都会返回一个ChannelFuture</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ChannelFuture future = channel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>));<span class="comment">//异步连接</span></span><br></pre></td></tr></table></figure><ul><li>注册ChannelFutureListener示例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ChannelFuture channelFuture = bootstrap.connect(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>);</span><br><span class="line">      channelFuture.addListener(<span class="keyword">new</span> ChannelFutureListener() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operationComplete</span><span class="params">(ChannelFuture future)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">              <span class="comment">//如果连接成功</span></span><br><span class="line">              <span class="keyword">if</span>(future.isSuccess()) &#123;</span><br><span class="line">                  future.channel().writeAndFlush(Unpooled.copiedBuffer(<span class="string">&quot;Hello&quot;</span>, CharsetUtil.UTF_8));</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="comment">//失败打印异常</span></span><br><span class="line">                  Throwable throwable = future.cause();</span><br><span class="line">                  throwable.printStackTrace();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><h3 id="事件和ChannelHandler"><a href="#事件和ChannelHandler" class="headerlink" title="事件和ChannelHandler"></a>事件和ChannelHandler</h3><p>事件是按照入站出站数据流的相关性进行分类的，每个事件都可以被分发给ChannelHandler的实现类</p><ul><li>入站事件<ul><li>连接已被激活或者连接失活</li><li>数据读取</li><li>用户事件</li><li>错误事件</li></ul></li><li>出站事件<ul><li>打开或关闭连接</li><li>数据写入</li></ul></li></ul><h2 id="编码入门：Echo"><a href="#编码入门：Echo" class="headerlink" title="编码入门：Echo"></a>编码入门：Echo</h2><p>Echo客户端和服务端之间的交互：客户端和服务端建立连接后，客户端向服务端发送消息，服务端返回给客户端相同的消息</p><h3 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a>服务端：</h3><ol><li>编写ChannelHandler，用于处理从客户端接收到的消息，实现业务逻辑</li><li>引导类配置<ol><li>绑定到服务器将监听并接受传入连接请求的端口</li><li>配置Channel，将入站消息通知给对应的Handler</li></ol></li></ol><h4 id="消息处理类"><a href="#消息处理类" class="headerlink" title="消息处理类"></a>消息处理类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Sharable标记一个ChannelHandler可以被多个Channel安全的共享，</span></span><br><span class="line"><span class="comment">//如果未指定此注释，则每次将其添加到管道时都必须创建一个新的处理程序实例，因为它具有非共享状态，例如成员变量</span></span><br><span class="line"><span class="meta">@ChannelHandler</span>.Sharable</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EchoServerHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对于每个传入的消息都会调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteBuf byteBuf = (ByteBuf) msg;</span><br><span class="line">        System.out.println(<span class="string">&quot;服务端收到消息：&quot;</span> + byteBuf.toString(CharsetUtil.UTF_8));</span><br><span class="line">        <span class="comment">//将接收到的消息写给发送者，而不冲刷出站消息</span></span><br><span class="line">        ctx.write(byteBuf);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取到当前批量读取中的最后一条消息时调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelReadComplete</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//将消息冲刷到远程节点，并关闭该Channel</span></span><br><span class="line">        ctx.writeAndFlush(Unpooled.EMPTY_BUFFER)</span><br><span class="line">                .addListener(ChannelFutureListener.CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在读取时有异常会被调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//打印异常信息</span></span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        <span class="comment">//关闭Channel</span></span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="服务端引导类"><a href="#服务端引导类" class="headerlink" title="服务端引导类"></a>服务端引导类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyServerTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个Event-LoopGroup，使用NIO传输，所以指定NioEventLoopGroup来接收和处理新的连接</span></span><br><span class="line">        EventLoopGroup group = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建ServerBootstrap，创建一个服务端引导类</span></span><br><span class="line">            ServerBootstrap serverBootstrap = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">            serverBootstrap</span><br><span class="line">                    <span class="comment">//指定线程组</span></span><br><span class="line">                    .group(group)</span><br><span class="line">                    <span class="comment">//指定使用NIO传输Channel</span></span><br><span class="line">                    .channel(NioServerSocketChannel.class)</span><br><span class="line">                    <span class="comment">//指定服务端的地址端口</span></span><br><span class="line">                    .localAddress(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>))</span><br><span class="line">                    <span class="comment">//添加ChannelHandler到pipeline</span></span><br><span class="line">                    .childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                            ch.pipeline().addLast(<span class="keyword">new</span> EchoServerHandler());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">            <span class="comment">//异步绑定服务器，调用sync()方法阻塞等待直到完成绑定</span></span><br><span class="line">            ChannelFuture channelFuture = serverBootstrap.bind().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;服务端启动成功...&quot;</span>);</span><br><span class="line">            <span class="comment">//关闭Channel，通讯时，线程会在这等待，直到完成关闭</span></span><br><span class="line">            channelFuture.channel().closeFuture().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;服务端已关闭...&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            group.shutdownGracefully().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;线程资源已释放...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><ul><li>连接服务端</li><li>发送消息</li><li>接收服务端回执的消息</li><li>关闭连接’</li></ul><h4 id="消息处理类-1"><a href="#消息处理类-1" class="headerlink" title="消息处理类"></a>消息处理类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ChannelHandler</span>.Sharable</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EchoClientHandler</span> <span class="keyword">extends</span> <span class="title">SimpleChannelInboundHandler</span>&lt;<span class="title">ByteBuf</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当Channel活跃时被调用</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelActive</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//发送消息给服务端</span></span><br><span class="line">        ctx.writeAndFlush(Unpooled.copiedBuffer(<span class="string">&quot;Hello aacopy&quot;</span>, CharsetUtil.UTF_8));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当有消息时触发</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">channelRead0</span><span class="params">(ChannelHandlerContext ctx, ByteBuf msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;客户端接收到消息：&quot;</span> + msg.toString(CharsetUtil.UTF_8));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="客户端引导类"><a href="#客户端引导类" class="headerlink" title="客户端引导类"></a>客户端引导类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NettyClientTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        EventLoopGroup group = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建客户端引导类</span></span><br><span class="line">            Bootstrap bootstrap = <span class="keyword">new</span> Bootstrap();</span><br><span class="line">            <span class="comment">//设置线程池</span></span><br><span class="line">            bootstrap</span><br><span class="line">                    .group(group)</span><br><span class="line">                    <span class="comment">//设置Channel传输类型为NIO</span></span><br><span class="line">                    .channel(NioSocketChannel.class)</span><br><span class="line">                    <span class="comment">//设置远程服务端地址</span></span><br><span class="line">                    .remoteAddress(<span class="keyword">new</span> InetSocketAddress(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9999</span>))</span><br><span class="line">                    <span class="comment">//设置消息处理类</span></span><br><span class="line">                    .handler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                            ch.pipeline().addLast(<span class="keyword">new</span> EchoClientHandler());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">            ChannelFuture channelFuture = bootstrap.connect().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端与服务端已连接成功...&quot;</span>);</span><br><span class="line">            channelFuture.channel().closeFuture().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端已关闭...&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭线程池，释放资源</span></span><br><span class="line">            group.shutdownGracefully().sync();</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端资源已释放...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><ul><li><p>服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务端启动成功...</span><br><span class="line"></span><br><span class="line">服务端收到消息：Hello</span><br></pre></td></tr></table></figure></li><li><p>客户端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">客户端与服务端已连接成功...</span><br><span class="line"></span><br><span class="line">客户端接收到消息：Hello</span><br><span class="line">客户端已关闭...</span><br><span class="line"></span><br><span class="line">客户端资源已释放...</span><br><span class="line"></span><br><span class="line">进程已结束,退出代码0</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>ChannelInboundHandlerAdapter和SimpleChannelInboundHandler的区别</p><blockquote><p>在服务端用的ChannelInboundHandlerAdapter，而在客户端用的SimpleChannelInboundHandler，主要时处理消息时的实现方式不一样。</p><p>在客户端，channelRead0方法完成后，SimpleChannelInboundHandler方法会把包含该消息的ByteBuf的引用从内存中释放掉。</p><p>在服务端，需要将接收到的消息，通过write方法异步的发送，在channelRead方法执行完，write可能还没有执行完，不能释放ByteBuf。ByteBuf会在channelReadComplete的writeAndFlush执行完后释放</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Netty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-SpringBoot</title>
      <link href="/Kafka/Kafka-SpringBoot/"/>
      <url>/Kafka/Kafka-SpringBoot/</url>
      
        <content type="html"><![CDATA[<p>官方网站：<a href="https://spring.io/projects/spring-kafka">https://spring.io/projects/spring-kafka</a></p><p>官方文档：<a href="https://docs.spring.io/spring-kafka/docs/current/reference/html/">https://docs.spring.io/spring-kafka/docs/current/reference/html/</a></p><h2 id="最简集成"><a href="#最简集成" class="headerlink" title="最简集成"></a>最简集成</h2><ol><li>环境：spring boot 2.6.1，kafka 3.0.0</li><li>添加maven依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用默认配置，最简单执行</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaLearnApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(KafkaLearnApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> NewTopic <span class="title">topic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> TopicBuilder.name(<span class="string">&quot;topic1&quot;</span>)</span><br><span class="line">                .partitions(<span class="number">10</span>)</span><br><span class="line">                .replicas(<span class="number">1</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ApplicationRunner <span class="title">runner</span><span class="params">(KafkaTemplate&lt;String, String&gt; template)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> args -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;生产者发送消息：test&quot;</span>+i);</span><br><span class="line">                template.send(<span class="string">&quot;topic1&quot;</span>, <span class="string">&quot;test&quot;</span>+i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@KafkaListener(id = &quot;myId&quot;, topics = &quot;topic1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listen</span><span class="params">(String in)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;消费者消费消息：&quot;</span>+in);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="spring-web"><a href="#spring-web" class="headerlink" title="spring web"></a>spring web</h2><p>消息生产者KafkaProducer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaProducer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> KafkaTemplate&lt;String, String&gt; template;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kafka_topic&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String topic;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        template.send(topic, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消息消费者KafkaConsumer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@KafkaListener(topics = &quot;$&#123;kafka_topic&#125;&quot;, groupId = &quot;$&#123;kafka_groupId&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">listen</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;消费者消费消息：&quot;</span>+msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> KafkaProducer kafkaProducer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/send&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">send</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        kafkaProducer.sendMsg(msg);</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/kafka-learn</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kafka_topic</span>=<span class="string">topic1</span></span><br><span class="line"><span class="attr">kafka_groupId</span>=<span class="string">group1</span></span><br></pre></td></tr></table></figure><p>浏览器访问</p><p><a href="http://127.0.0.1:8080/kafka-learn/send?msg=aacopy">http://127.0.0.1:8080/kafka-learn/send?msg=aacopy</a></p><p>查看控制台打印</p>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-消息模型</title>
      <link href="/Kafka/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/"/>
      <url>/Kafka/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>Kafka消息模型分为：点对点和发布订阅</p><h2 id="点对点"><a href="#点对点" class="headerlink" title="点对点"></a>点对点</h2><p>所有的消费者在同一个组中，一条消息只会被一个消费者消费。</p><p>启动一个消息生产者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-producer.sh --broker-list 10.66.106.86:9092 --topic aacopy-topic</span><br></pre></td></tr></table></figure><p>在两个命令窗口，分别执行命令，创建在同一个组（group参数相同）中的两个消费者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --group group1</span><br></pre></td></tr></table></figure><p>在生产者中输入消息，可以看到消息会在两个消费者中轮询消费，且一条消息只会被一个消费者消费</p><p><img src="/images/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/image-20211207100533850.png" alt="image-20211207100533850"></p><p>查看组信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./kafka-consumer-groups.sh --bootstrap-server 10.66.106.86:9092 --list</span><br><span class="line">./kafka-consumer-groups.sh --bootstrap-server 10.66.106.86:9092 --describe --group group1</span><br></pre></td></tr></table></figure><p>注意：</p><p>docker中退出生产消费者的命令窗口，ctrl+C，不能直接用ctrl+P+Q或者ctrl+Z直接退出，不然消费者并没有结束进程，还在消费数据</p><h2 id="发布订阅"><a href="#发布订阅" class="headerlink" title="发布订阅"></a>发布订阅</h2><p>消费者在不同的组，所有组都可以消费发布的消息</p><p>启动一个消息生产者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-producer.sh --broker-list 10.66.106.86:9092 --topic aacopy-topic</span><br></pre></td></tr></table></figure><p>在两个命令窗口，创建在不同组（group参数相同）的两个消费者</p><p>命令窗口一执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --group group1</span><br></pre></td></tr></table></figure><p>命令窗口二执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --group group2</span><br></pre></td></tr></table></figure><p>在生产者中输入消息，可以看到消息会在两个消费者中同时被消费</p><p><img src="/images/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/image-20211207105443935.png" alt="image-20211207105443935"></p><h2 id="两种方式结合"><a href="#两种方式结合" class="headerlink" title="两种方式结合"></a>两种方式结合</h2><p>创建四个消费者，</p><p>两个执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --group group1</span><br></pre></td></tr></table></figure><p>另外两个执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --group group2</span><br></pre></td></tr></table></figure><p>查看所有消费者组消息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-consumer-groups.sh --bootstrap-server 10.66.106.86:9092 --describe --all-groups</span><br></pre></td></tr></table></figure><p><img src="/images/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/image-20211207110515140.png" alt="image-20211207110515140"></p><p>创建一个消息生产者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-producer.sh --broker-list 10.66.106.86:9092 --topic aacopy-topic</span><br></pre></td></tr></table></figure><p>发送生产消息，消息会在两个消费者组中同时被消费，且同一个组中只能被消费一次</p><p><img src="/images/Kafka-%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B/image-20211207111105831.png" alt="image-20211207111105831"></p>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-HelloWorld</title>
      <link href="/Kafka/Kafka-HelloWorld/"/>
      <url>/Kafka/Kafka-HelloWorld/</url>
      
        <content type="html"><![CDATA[<p>kafka是一个高吞吐量的分布式发布订阅系统，可以实时的处理大量数据</p><h2 id="docker安装kafka"><a href="#docker安装kafka" class="headerlink" title="docker安装kafka"></a>docker安装kafka</h2><ol><li>安装zookeeper</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name zookeeper -p 2181:2181 -d zookeeper</span><br></pre></td></tr></table></figure><ol start="2"><li>安装kafka（10.66.106.86为本机ip）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --name kafka -p 9092:9092 -e KAFKA_BROKER_ID=0 -e KAFKA_ZOOKEEPER_CONNECT=10.66.106.86:2181 -e ALLOW_PLAINTEXT_LISTENER=yes -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.66.106.86:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 -d bitnami/kafka:3.0.0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果在win版本docker中挂载kafka数据目录加上以下启动参数</span></span><br><span class="line">-v C:\dockerData\kafka\data:/bitnami/kafka/data</span><br></pre></td></tr></table></figure><p>具体的启动配置可以查看官方文档：<a href="https://hub.docker.com/r/bitnami/kafka%EF%BC%8CConfiguration%E9%83%A8%E5%88%86">https://hub.docker.com/r/bitnami/kafka，Configuration部分</a></p><ol start="3"><li>进入kafka容器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it kafka bash</span><br><span class="line">cd opt/bitnami/kafka/bin/</span><br></pre></td></tr></table></figure><ol start="4"><li>创建toptic</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --create --bootstrap-server 10.66.106.86:9092 --replication-factor 1 --partitions 2 --topic aacopy-topic</span><br></pre></td></tr></table></figure><ol start="5"><li>查看toptic</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-topics.sh --list --bootstrap-server 10.66.106.86:9092</span><br></pre></td></tr></table></figure><ol start="6"><li>创建消息生产者</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-producer.sh --broker-list 10.66.106.86:9092 --topic aacopy-topic</span><br></pre></td></tr></table></figure><ol start="7"><li>新打开一个命令窗口，创建消息消费者</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kafka-console-consumer.sh --bootstrap-server 10.66.106.86:9092 --topic aacopy-topic --from-beginning</span><br></pre></td></tr></table></figure><ol start="8"><li>在消息生产者中输入消息，可以在消费者窗口查看到输入的消息</li></ol><p><img src="/images/Kafka-HelloWorld/image-20211206145618666.png" alt="image-20211206145618666"></p><p>可以用命令加–help查看相关参数 eg: ./kafka-console-consumer.sh –help</p><h2 id="docker按照Kakfa-UI"><a href="#docker按照Kakfa-UI" class="headerlink" title="docker按照Kakfa-UI"></a>docker按照Kakfa-UI</h2><p>github：<a href="https://github.com/provectus/kafka-ui">https://github.com/provectus/kafka-ui</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9090:8080 --name kafka-ui \</span><br><span class="line">-e KAFKA_CLUSTERS_0_NAME=dev \</span><br><span class="line">-e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=192.168.80.128:9092,192.168.80.128:9093,192.168.80.128:9094 \</span><br><span class="line">-e KAFKA_CLUSTERS_1_NAME=release \</span><br><span class="line">-e KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS=192.168.80.129:9092,192.168.80.129:9093,192.168.80.129:9094 \</span><br><span class="line">-d provectuslabs/kafka-ui:latest</span><br></pre></td></tr></table></figure><p>访问地址：部署的ip:9090</p><p><img src="/images/Kafka-HelloWorld/image-20220801162316796.png" alt="image-20220801162316796"></p><h2 id="kafka相关概念"><a href="#kafka相关概念" class="headerlink" title="kafka相关概念"></a>kafka相关概念</h2><ul><li><p>Broker</p><p>kafka服务端程序，一个mq节点就是一个broker</p></li><li><p>Producer</p><p>消息生产者，生成消息发送到topic中</p></li><li><p>Consumer</p><p>消息消费者</p></li><li><p>ConsumerGroup</p><p>消费者组，一条广播消息，发送给多个消费者组，在同一个消费者组中只能有一个消费者可以消费</p></li><li><p>Topic</p><p>主题，即消息的类别</p></li><li><p>Partition</p><p>topic物理上的分组，数据存储的基本单元，每个partition都由一系列有序的、不可变的消息组成，这些消息被连续的追加到partition中，一个topic中有至少一个partition，多个partition被分配到集群的多个server上，partition的数量要大于等于同一个消费者组中消息者数量，如果一个组中的消费者数量大于partition数量，有消费者会获取不到数据，所有在处理消息堆积的问题时，单纯加消费者数量是没有用的。</p></li><li><p>Replication</p><p>副本，一个partition有多个副本，每个副本的数据是一样的，用于宕机后的切换，保证服务可用，默认是没有副本，副本数不能大于集群中的节点数</p></li><li><p>ReplicationLeader</p><p>只存在一个leader副本，用于和生产者、消费者进行交互</p></li><li><p>ReplicationFollower</p><p>只做备份，从leader同步数据</p></li><li><p>ReplicationManager</p><p>负责副本状态切换</p></li><li><p>Segment</p><p>partition物理上由多个segment组成</p></li><li><p>offset</p><p>每个partition都由一系列有序的、不可变的消息组成，这些消息被连续的追加到partition中。partition中的每个消息都有一个连续的序列号叫做offset,用于partition唯一标识一条消息</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-RestAPI</title>
      <link href="/Flowable/Flowable-RestAPI/"/>
      <url>/Flowable/Flowable-RestAPI/</url>
      
        <content type="html"><![CDATA[<p>官方文档：<a href="https://wwv.flowable.com/open-source/docs/bpmn/ch15-REST/">https://wwv.flowable.com/open-source/docs/bpmn/ch15-REST/</a></p><h2 id="使用docker启动flowable-rest"><a href="#使用docker启动flowable-rest" class="headerlink" title="使用docker启动flowable-rest"></a>使用docker启动flowable-rest</h2><ol><li>编写docker-compose.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.6&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">flowable-ui-app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">flowable/flowable-rest</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_PORT=8098</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_URL=jdbc:mysql://10.66.106.86:3306/flowable_learn?characterEncoding=UTF-8</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_USERNAME=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE.IDM.APP.ADMIN.USER-ID=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE.IDM.APP.ADMIN.PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE_COMMON_APP_IDM-ADMIN_USER=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE_COMMON_APP_IDM-ADMIN_PASSWORD=123456</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8098</span><span class="string">:8098</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/d/maven/repository/mysql/mysql-connector-java/8.0.27/mysql-connector-java-8.0.27.jar:/app/WEB-INF/lib/mysql-connector-java-8.0.27.jar</span></span><br></pre></td></tr></table></figure><p>备注：</p><p>（1）修改admin的密码，需要先设置SPRING_DATASOURCE_PASSWORD，单独设置FLOWABLE_COMMON_APP_IDM-ADMIN_PASSWORD是不起作用的</p><p>（2）volumes，这里用的是windows的docker，因为flowable本身不带mysql的驱动，所以需要把本地的驱动挂载到容器，前面的**/d**表示在D盘下。windows下也可以写成D:</p><p>（3）docker-compose文件名有规定，4种文件，这里就使用docker-compose.yml</p><ol start="2"><li>启动服务</li></ol><p>（1）先进入docker-compose.yml所在文件夹的目录</p><p>（2）执行命令 <code>docker-compose up -d</code></p><ol start="3"><li>测试</li></ol><p>（1）登录<a href="http://localhost:8098/flowable-rest/docs">http://localhost:8098/flowable-rest/docs</a></p><p>（2）账号密码：admin/123456</p>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-UI</title>
      <link href="/Flowable/Flowable-UI/"/>
      <url>/Flowable/Flowable-UI/</url>
      
        <content type="html"><![CDATA[<p>官方文档：<a href="https://wwv.flowable.com/open-source/docs/bpmn/ch14-Applications/">https://wwv.flowable.com/open-source/docs/bpmn/ch14-Applications/</a></p><h2 id="使用docker启动flowable-UI"><a href="#使用docker启动flowable-UI" class="headerlink" title="使用docker启动flowable-UI"></a>使用docker启动flowable-UI</h2><ol><li>编写docker-compose.yml</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.6&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">flowable-ui-app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">flowable/flowable-ui</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_PORT=8099</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_URL=jdbc:mysql://10.66.106.86:3306/flowable_learn?characterEncoding=UTF-8</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_USERNAME=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE.IDM.APP.ADMIN.USER-ID=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE.IDM.APP.ADMIN.PASSWORD=123456</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE_COMMON_APP_IDM-ADMIN_USER=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">FLOWABLE_COMMON_APP_IDM-ADMIN_PASSWORD=123456</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8099</span><span class="string">:8099</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/d/maven/repository/mysql/mysql-connector-java/8.0.27/mysql-connector-java-8.0.27.jar:/app/WEB-INF/lib/mysql-connector-java-8.0.27.jar</span></span><br></pre></td></tr></table></figure><p>备注：</p><p>（1）修改admin的密码，需要先设置SPRING_DATASOURCE_PASSWORD，单独设置FLOWABLE_COMMON_APP_IDM-ADMIN_PASSWORD是不起作用的</p><p>（2）volumes，这里用的是windows的docker，因为flowable本身不带mysql的驱动，所以需要把本地的驱动挂载到容器，前面的**/d**表示在D盘下。windows下也可以写成D:</p><p>（3）docker-compose文件名有规定，4种文件，这里就使用docker-compose.yml</p><ol start="2"><li>启动服务</li></ol><p>（1）先进入docker-compose.yml所在文件夹的目录</p><p>（2）执行命令 <code>docker-compose up -d</code></p><ol start="3"><li>测试</li></ol><p>（1）登录<a href="http://127.0.0.1:8099/flowable-ui">http://127.0.0.1:8099/flowable-ui</a></p><p>（2）账号密码：admin/123456</p>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-Compose</title>
      <link href="/Docker/Docker-Compose/"/>
      <url>/Docker/Docker-Compose/</url>
      
        <content type="html"><![CDATA[<p>docker-compose是一个用于定义和运行多容器 Docker 的应用程序工具，可以帮助我们可以轻松、高效的管理容器</p><ul><li><p>文件名要求</p><p>文件名只能是docker-compose或者compose，文件后缀只能是yml或者yaml</p></li><li><p>windows下的文件挂载</p><p>文件所在盘符表示以/开头，如：D盘下的test.txt文件 应该成 /d/test.txt，也可以用D:开头</p></li></ul><p>compose操作容器（一定要进入配置文件目录）</p><ul><li>后台启动容器：docker-compose up -d</li><li>查看容器运行情况：docker-compose ps</li><li>停止并删除容器：docker-compose down</li><li>停止并删除容器并删除volume：docker-compose down –volumes</li><li>停止启动容器：docker-compose stop；docker-compose start</li><li>docker-compose exec的使用：docker-compose exec redis bash</li></ul><p>总结：</p><ul><li>操作docker-compose一定要在配置文件docker-compose.yml文件路径下操作</li><li>格式一定要注意，该空格要空格</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-数据库表</title>
      <link href="/Flowable/Flowable-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8/"/>
      <url>/Flowable/Flowable-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>Flowable 开源代码库相关的数据库表名以ACT _开头。特定于 Flowable Work 或 Engage 的数据库表以FLW _前缀开头。</p><ul><li><p>**ACT_RE_ ***：“RE”代表存储库（repository）。带有此前缀的表包含“静态”信息，例如流程定义和流程资源（图像、规则等）。</p></li><li><p>**ACT_RU_ ***：“RU”代表运行时间（runtime）。这些是包含流程实例、用户任务、变量、作业等的运行时数据的运行时表。Flowable 仅在流程实例执行期间存储运行时数据，并在流程实例结束时删除记录。这使运行时表既小又快。</p></li><li><p><strong>ACT_HI_</strong> *：’HI’ 代表历史（history）。这些是包含历史数据的表，例如历史的流程实例、变量、任务等。</p></li><li><p><strong>ACT_GE_</strong> *：通用数据（general ），用于各种用例。</p></li></ul><table><thead><tr><th>App  Engine</th><th></th></tr></thead><tbody><tr><td>ACT _ APP _ DEPLOYMENT</td><td>当通过应用引擎部署应用模型时，会存储一条记录以指示此部署。部署的实际内容被引用，并存储在ACT_APP_DEPLOYMENT_RESOURCE表。</td></tr><tr><td>ACT_APP_DEPLOYMENT_RESOURCE</td><td>此表包含构成应用程序部署的实际资源（以字节形式存储）。当引擎需要实际模型时，从该表中获取资源。</td></tr><tr><td>ACT _ APP _ APPDEF</td><td>应用程序模型产生应用程序定义。这个定义，如流程/案例/等。是已成功部署到应用程序引擎的应用程序模型的表示。</td></tr><tr><td><strong>CMMN引擎</strong></td><td></td></tr><tr><td>ACT _ CMMN _ HI _ CASE _ INST</td><td>该表包含由 CMMN 引擎启动的每个案例实例的条目。</td></tr><tr><td>ACT _ CMMN _ HI _ MIL _ INST</td><td>此表包含案例实例中达到的每个里程碑的条目。</td></tr><tr><td>ACT _ CMMN _ HI _ PLAN _ ITEM _ INST</td><td>该表包含作为案例实例执行的一部分创建的每个计划项目实例的条目。</td></tr><tr><td>ACT _ CMMN _ RU _ CASE _ INST</td><td>此表包含每个已开始但尚未完成的案例实例的条目。</td></tr><tr><td>ACT _ CMMN _ RU _ MIL _ INST</td><td>该表包含作为运行案例实例的一部分达到的每个里程碑的条目。</td></tr><tr><td>ACT _ CMMN _ RU _ PLAN _ ITEM _ INST</td><td>案例实例执行由案例定义中定义的计划项目的多个实例组成。此表包含在案例实例执行期间创建的每个实例的条目。</td></tr><tr><td>ACT _ CMMN _ RU _ SENTRY _ PART _ INST</td><td>计划项目实例可以有守护状态转换的哨兵。这样的哨兵可以包含在状态改变发生之前需要满足的多个部分。该表存储满足的此类哨兵的任何部分。</td></tr><tr><td><strong>DMN</strong></td><td></td></tr><tr><td>ACT _ DMN _ DECISION _ TABLE</td><td>该表包含已部署决策表的元数据，并与其他引擎的定义相对应。</td></tr><tr><td>ACT _ DMN _ HI _ DECISION _ EXECUTION</td><td>该表包含有关 DMN 决策表执行的审计信息。</td></tr><tr><td><strong>流程引擎</strong></td><td></td></tr><tr><td>ACT _ RU _ EXECUTION</td><td>存储流程实例和指向流程实例当前状态的指针（称为执行）。</td></tr><tr><td>ACT _ RU _ ACTINST</td><td>流程实例中的每个活动在该表中都有一行指示活动的当前状态。</td></tr><tr><td>ACT _ RU _ &lt; TYPE &gt; _ JOB</td><td>Flowable  引擎使用作业表来实现异步逻辑、计时器或历史处理。这些表存储每个作业所需的数据。</td></tr><tr><td>ACT _ RU _ ENTITYLINK</td><td>此表存储有关实例的父子关系的信息。例如，如果流程实例启动子案例实例，则此关系存储在此表中。这可以轻松查询关系。</td></tr><tr><td>ACT _ RU _ EVENT _ SUBSCR</td><td>当流程定义使用事件（信号/消息/等或开始/中间/边界）时，引擎在此表中存储对此表的引用。这简化了查询哪些实例正在等待某种类型的事件。</td></tr><tr><td>ACT _ RU _ IDENTITYLINK</td><td>此表存储有关用户或组及其与（流程/案例/等）实例相关的角色的数据。该表也被需要身份链接的其他引擎使用。</td></tr><tr><td>ACT _ RU _ TASK</td><td>该表包含正在运行的实例的每个未完成的用户任务的条目。然后在查询用户的任务列表时使用该表。CMMN  引擎也使用该表。</td></tr><tr><td>ACT _ RU _ VARIABLES</td><td>此表存储与实例相关的变量。CMMN 引擎也使用该表。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10环境安装Docker</title>
      <link href="/Docker/Win10%E5%AE%89%E8%A3%85Docker/"/>
      <url>/Docker/Win10%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载安装包</p><p><a href="https://www.docker.com/get-started">https://www.docker.com/get-started</a></p><p>选择Download for Windows</p></li><li><p>开启Hyper-V</p><p>控制面板 -&gt; 程序 -&gt; 启用或关闭Windows功能 -&gt; 勾选Hyper-V</p></li><li><p>安装下载的docker安装包，并运行安装号的文件</p></li></ol><p>如果启动报错：WSL 2 installation is incomplete.</p><p><img src="/images/Win10%E5%AE%89%E8%A3%85Docker/error1.png" alt="error1"></p><p>点击提示的链接，</p><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package">https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package</a></p><p>或者直接<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">下载</a>update文件，然后运行，安装完成后重启docker</p><ol start="4"><li><p> 验证：cmd，输入docker info</p></li><li><p>设置阿里云镜像加速</p><p>（1）登录阿里云，访问地址</p><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><p>（2）复制加速器地址</p><p>https://系统分配前缀.mirror.aliyuncs.com</p><p>（3）在系统右下角托盘图标内右键菜单选择 Settings，打开配置窗口后左侧导航菜单选择 Docker Daemon。编辑窗口内的JSON串，填写下方加速器地址，注意json的逗号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;&lt;your accelerate address&gt;&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Win10%E5%AE%89%E8%A3%85Docker/image-20211202135835856.png" alt="image-20211202135835856"></p><p>（4）点击Apply&amp;Restart重启</p><p>（5）docker info 查看镜像是否设置生效</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>性能分析工具-jvisualvm</title>
      <link href="/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-Jvisualvm/"/>
      <url>/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-Jvisualvm/</url>
      
        <content type="html"><![CDATA[<p>位置：jdk1.8.0_301\bin\jvisualvm.exe</p><h2 id="1-远程监控"><a href="#1-远程监控" class="headerlink" title="1. 远程监控"></a>1. 远程监控</h2><ul><li><p>监控远程服务需要在服务器上启动jstatd服务</p></li><li><p>找一个随意文件夹，创建文件，并添加内容</p><ul><li>touch jstatd.all.policy</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant codebase &quot;file:$&#123;java.home&#125;/../lib/tools.jar&quot; &#123;  </span><br><span class="line">   permission java.security.AllPermission;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>启动jstatd</p><ul><li>jstatd -J-Djava.security.policy=jstatd.all.policy -J-Djava.rmi.server.hostname=192.168.10.66 &amp;</li></ul></li><li><p>本地启动jvisualvm，添加远程</p><ul><li>输入主机ip</li></ul></li></ul><h2 id="2-问题："><a href="#2-问题：" class="headerlink" title="2. 问题："></a>2. 问题：</h2><ol><li>打开提示“无法监视本地JAVA应用程序”<ul><li>关闭所有Java程序</li><li>按Win + R，然后输入：%TMP%；</li><li>找到hsperfdata_开头的文件夹，把后面的系统名中大写改成小写</li><li>实在不行，把hsperfdata_开头的文件删了，再重启java程序</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 性能 </tag>
            
            <tag> Jconsole </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>性能分析工具-Jconsole</title>
      <link href="/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-Jconsole/"/>
      <url>/%E6%80%A7%E8%83%BD/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-Jconsole/</url>
      
        <content type="html"><![CDATA[<p>JDK自带的图形化分析工具，可以链接本地和远程的服务</p><p>位置：jdk1.8.0_301\bin\jconsole.exe</p><p>windows查看端口对应的进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;netstat -ano | findstr &quot;9083&quot;</span><br><span class="line">  TCP    0.0.0.0:9083           0.0.0.0:0              LISTENING       35720</span><br><span class="line">  TCP    [::]:9083              [::]:0                 LISTENING       35720</span><br><span class="line"></span><br><span class="line">C:\&gt;tasklist | findstr 35720</span><br><span class="line">java.exe                     35720 Console                    1    736,804 K</span><br></pre></td></tr></table></figure><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><ol><li>打开后，本地进程列表没有数据</li></ol><p>打开文件夹：C:\Users\Iseven.yang\AppData\Local\Temp\hsperfdata_Iseven.yang</p><p>空白处“右键”-&gt;“属性”-&gt;“安全”-&gt;“编辑”-&gt;选择当前用户-&gt;下方勾选“完全控制”中的“允许”-&gt;“确定”</p><p>重启jconsole，重启java服务</p><ol start="2"><li>本地进程列表中的进程显示灰色，提示“未对此进程启用管理代理”</li></ol><p>在启动配置里，VM options中添加参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-Dcom.sun.management.jmxremote </span><br><span class="line">-Dcom.sun.management.jmxremote.port=19083</span><br><span class="line">-Dcom.sun.management.jmxremote.ssl=false  </span><br><span class="line">-Dcom.sun.management.jmxremote.authenticate=false</span><br></pre></td></tr></table></figure><p>打开jconsole，选择远程进程</p><p>输入：127.0.0.1:19083 后点连接</p>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 性能 </tag>
            
            <tag> Jconsole </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压测工具-Jmeter</title>
      <link href="/%E6%80%A7%E8%83%BD/%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7-Jmeter/"/>
      <url>/%E6%80%A7%E8%83%BD/%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7-Jmeter/</url>
      
        <content type="html"><![CDATA[<p>官网地址：<a href="http://jmeter.apache.org/">http://jmeter.apache.org/</a></p><p>下载地址：<a href="http://jmeter.apache.org/download_jmeter.cgi">http://jmeter.apache.org/download_jmeter.cgi</a></p><p>下载慢可以更换其他镜像地址下载</p><p>启动方式：下载后，启动bin目录下的jmeter.bat (windows)</p><h2 id="修改jmeter为中文"><a href="#修改jmeter为中文" class="headerlink" title="修改jmeter为中文"></a>修改jmeter为中文</h2><p>临时：Options -&gt; Choose Language -&gt; Chinese(Simplified)</p><p>永久：在bin目录下找到配置文件jmeter.properties，</p><p>搜索language，将language=en，改为language=zh_CN</p><p>操作：</p><p>创建压测计划（Hello World)</p><p>（1）测试计划（右键）-&gt; 添加 -&gt; 线程（用户） -&gt; setUp线程组</p><p>（2）线程数和Ramp-up时间 都填写 10</p><p>（3）线程组右键 -&gt; 添加 -&gt; 取样器 -&gt; HTTP请求 -&gt; 填写服务器ip，端口号，路径</p><p>（4）如果需要添加头信息，在配置元件中-&gt;HTTP信息头管理器</p><p>（5）线程组右键 -&gt; 添加 -&gt; 监听器 -&gt; 查看结果树</p><p>（6）点击头部绿色启动箭头开始压测，再点击否，开始执行</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li><p>线程组：一组线程并发执行，每个线程就是一个请求</p></li><li><p>线程数：线程组内的线程个数，模拟并发数</p></li><li><p>准备时长（Ramp-Up Period(in seconds)）：全部线程启动的时长，比如100个线程，20秒，则表示20秒内 100个线程都要启动完成，每秒启动5个线程</p></li><li><p>循环次数：每个线程发送的次数，假如值为5，100个线程，则会发送500次请求，可以勾选永远循环</p></li><li><p>特殊线程组</p><ul><li>setUP：最先执行，前置工作</li><li>线程组：中级执行，常规处理</li><li>tearDown：最后执行，收尾工作</li></ul></li><li><p>聚合报告（Aggregate Report）</p><ul><li>lable: sampler的名称</li><li>Samples（样本）: 一共发出去多少请求,例如10个用户，循环10次，则是 100</li><li>Average（平均值）: 平均响应时间</li><li>Median（中位数）: 50％ 用户的响应时间</li><li>90% Line : 90％ 用户的响应不会超过该时间 （90% of the samples took no more than this time.  The remaining samples at least as long as this）</li><li>95% Line : 95％ 用户的响应不会超过该时间</li><li>99% Line : 99％ 用户的响应不会超过该时间</li><li>min : 最小响应时间</li><li>max : 最大响应时间</li><li>Error%：错误的请求的数量/请求的总数</li><li>Throughput： 吞吐量——默认情况下表示每秒完成的请求数（Request per Second) 可类比为qps</li><li>KB/Sec: 每秒接收数据量</li></ul></li></ul><h2 id="性能测试的关键点"><a href="#性能测试的关键点" class="headerlink" title="性能测试的关键点"></a>性能测试的关键点</h2><ul><li>TPS<ul><li>Transactions Per Second 每秒事务数,  可以是一个接口、多个接口、一个业务流程</li><li>包括增删改操作</li></ul></li><li>QPS<ul><li>Queries Per Second， 每秒查询数,  指一台服务器每秒能够响应的查询次数</li><li>QPS 只是一个简单查询的统计，不能描述增删改等操作</li><li>如果单压测查询接口 TPS=QPS</li></ul></li><li>RT<ul><li>响应时间</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 性能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jmeter </tag>
            
            <tag> 性能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-备份</title>
      <link href="/Mysql/Mysql-%E5%A4%87%E4%BB%BD/"/>
      <url>/Mysql/Mysql-%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<ul><li>数据备份的意义：</li></ul><p>（1）保护数据的安全；</p><p>（2）在出现意外的时候（硬盘的损坏，断电，黑客的攻击），以便数据的恢复；</p><p>（3）导出生产的数据以便研发人员或者测试人员测试学习；</p><p>（4）高权限的人员操作失误导致数据丢失，以便恢复；</p><ul><li>数据库的备份类型：</li></ul><p>（1）完全备份：对整个数据库的数据进行备份</p><p>（2）部分备份：对部分数据进行备份（可以是一张表也可以是多张表）</p><p>  增量备份：是以上一次备份为基础来备份变更数据的，节约空间</p><p>  差异备份：是以第一次完全备份的基础来备份变更备份的，浪费空间</p><ul><li>数据库备份的方式：</li></ul><p>（1）逻辑备份：直接生成sql语句保存起来，在恢复数据的时候执行备份的sql语句来实现数据的恢复</p><p>（2）物理备份：直接拷贝相关的物理数据</p><p>区别：逻辑备份效率低，恢复数据效率低，但是逻辑备份节约空间；物理备份浪费空间，但是相对逻辑备份而言效率比较高</p><ul><li>数据库备份的场景：</li></ul><p>（1）热备份：备份时，数据库的读写操作不会受到影响</p><p>（2）温备份：备份时，数据库的读操作可以进行，但是写操作不能执行</p><p>（3）冷备份：备份时，不能进行任何操作</p><ul><li>mysqldump使用语法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u 用户 <span class="operator">-</span>h host <span class="operator">-</span>p 密码 dbname <span class="keyword">table</span> <span class="operator">&gt;</span> 路径</span><br></pre></td></tr></table></figure><ul><li><p>远程备份单库例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>pabc123456 <span class="operator">-</span>h120<span class="number">.25</span><span class="number">.93</span><span class="number">.69</span> zabbix <span class="operator">|</span> gzip  <span class="operator">&gt;</span> <span class="operator">/</span>mysql_data_back<span class="operator">/</span>zabbix_users.sql.gz</span><br></pre></td></tr></table></figure></li><li><p>远程备份单库例子并保留创建库语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>pabc123456 <span class="operator">-</span>h120<span class="number">.25</span><span class="number">.93</span><span class="number">.69</span> <span class="comment">--databases zabbix | gzip  &gt; /mysql_data_back/zabbix_bak.sql.gz</span></span><br></pre></td></tr></table></figure></li><li><p>远程备份单库单表的例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>pabc123456 <span class="operator">-</span>h120<span class="number">.25</span><span class="number">.93</span><span class="number">.69</span> zabbix  users <span class="operator">|</span> gzip  <span class="operator">&gt;</span> <span class="operator">/</span>mysql_data_back<span class="operator">/</span>zabbix_users.sql.gz</span><br></pre></td></tr></table></figure></li><li><p>远程备份多库的例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>pabc123456 <span class="operator">-</span>h120<span class="number">.25</span><span class="number">.93</span><span class="number">.69</span> <span class="comment">--databases zabbix XD | gzip  &gt; /mysql_data_back/zabbix_XD.sql.gz</span></span><br></pre></td></tr></table></figure></li><li><p>远程备份全库的例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>pabc123456 <span class="operator">-</span>h120<span class="number">.25</span><span class="number">.93</span><span class="number">.69</span> <span class="comment">--all-databases  | gzip  &gt; /mysql_data_back/all.sql.gz</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="数据的恢复"><a href="#数据的恢复" class="headerlink" title="数据的恢复"></a>数据的恢复</h2><p>远程恢复数据（备份的数据文件里有创建库的语句）：</p><p>mysql -uroot -pabc123456 -h120.25.93.69  &lt; zabbix_bak.sql</p><p>远程恢复数据（备份的数据文件里没有创建库的语句）：</p><p>mysql -uroot -pabc123456 -h120.25.93.69  zabbix &lt; zabbix_bak.sql</p><h2 id="物理备份"><a href="#物理备份" class="headerlink" title="物理备份"></a>物理备份</h2><ul><li><p>看找数据库源文件路径（一）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;datadir%&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>看找数据库源文件路径（二）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="operator">/</span>etc<span class="operator">/</span>my.cnf</span><br></pre></td></tr></table></figure></li><li><p>MyISAM表源文件：</p><p>db.opt：创建库的时候生成，主要存储着当前库的默认字符集和字符校验规则</p><p>.frm ：记录着表结构信息的文件</p><p>.MYI：记录着索引的文件</p><p>.MYD :记录着表的数据</p></li><li><p>InnoDB表源文件：InnoDB有着共享表空间跟独立表空间的概念。</p><p>db.opt：创建库的时候生成，主要存储着当前库的默认字符集和字符校验规则</p><p>.frm ：记录着表结构信息的文件</p><p>.ibd ：独立表空间，里边记录这个表的数据和索引</p><p>ibdata1：共享表空间，里边记录表的数据和索引</p></li><li><p>请求全局读锁：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush tables <span class="keyword">with</span> read lock;</span><br></pre></td></tr></table></figure></li><li><p>解锁：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlock tables;</span><br></pre></td></tr></table></figure></li></ul><h2 id="二进制日志mysqlbinlog备份数据"><a href="#二进制日志mysqlbinlog备份数据" class="headerlink" title="二进制日志mysqlbinlog备份数据"></a>二进制日志mysqlbinlog备份数据</h2><p>二进制日志就是记录着mysql数据库中的一些写入性操作，比如一些增删改，但是，不包括查询！</p><p>一般情况下，二进制日志有着数据复制和数据恢复的功能</p><p>注意：开启二进制日志会有1%的性能消耗！</p><ul><li>查看二进制日志是否开启：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_bin%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>开启二进制日志 : vi /etc/my.cnf</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log<span class="operator">-</span>bin<span class="operator">=</span><span class="operator">/</span>data<span class="operator">/</span>mydata<span class="operator">/</span>log_bin<span class="operator">/</span>mysql<span class="operator">-</span>bin</span><br><span class="line">server<span class="operator">-</span>id<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>查看所有的binlog日志列表：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master logs;</span><br></pre></td></tr></table></figure><ul><li>刷新二进制日志：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush logs;</span><br></pre></td></tr></table></figure><ul><li>重置(清空）二进制日志文件：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master logs;</span><br></pre></td></tr></table></figure><ul><li>使用mysqldump备份数据时，加上-F选项可以重新生成一个新的二进制日志文件</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uroot <span class="operator">-</span>p XD <span class="keyword">user</span> <span class="operator">-</span>F  <span class="operator">&gt;</span> user_bak.sql</span><br></pre></td></tr></table></figure><h2 id="二进制日志mysqlbinlog恢复数据"><a href="#二进制日志mysqlbinlog恢复数据" class="headerlink" title="二进制日志mysqlbinlog恢复数据"></a>二进制日志mysqlbinlog恢复数据</h2><ul><li><p>查看二进制日志文件的内容报错：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@xdclass</span><span class="operator">-</span>public log_bin]# mysqlbinlog mysql<span class="operator">-</span>bin<span class="number">.000002</span></span><br><span class="line">mysqlbinlog: [ERROR] <span class="literal">unknown</span> variable <span class="string">&#x27;default-character-set=utf8&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p>解决：</p><p>第一种：在mysqlbinlog 后边加上 –no-defaults </p><p>第二种：注释掉配置文件里边的default-character-set=utf8</p></li></ul></li><li><p>把二进制日志文件导出成普通文件：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog <span class="comment">--base64-output=DECODE-ROWS -v mysql-bin.000002 &gt; mysqlbin.sql</span></span><br></pre></td></tr></table></figure></li><li><p>找出要恢复的位置：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）找出关键字的行数：mysqlbinlog <span class="comment">--no-defaults mysql-bin.000002 | cat -n  | grep -iw &#x27;drop&#x27;</span></span><br><span class="line">[root<span class="variable">@xdclass</span><span class="operator">-</span>public log_bin]# mysqlbinlog <span class="comment">--no-defaults mysql-bin.000002 | cat -n  | grep -iw &#x27;drop&#x27;</span></span><br><span class="line">  <span class="number">4180</span>  <span class="keyword">DROP</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` <span class="comment">/* generated by server */</span></span><br><span class="line">（<span class="number">2</span>）打印出相关内容：mysqlbinlog <span class="comment">--no-defaults mysql-bin.000002 | cat -n | sed -n &#x27;4170,4180p&#x27;</span></span><br><span class="line">[root<span class="variable">@xdclass</span><span class="operator">-</span>public log_bin]# mysqlbinlog <span class="comment">--no-defaults mysql-bin.000002 | cat -n | sed -n &#x27;4170,4180p&#x27;</span></span><br><span class="line"> <span class="number">4170</span>  # <span class="keyword">at</span> <span class="number">59578</span></span><br><span class="line"> <span class="number">4180</span>  <span class="keyword">DROP</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` <span class="comment">/* generated by server */</span></span><br><span class="line"> <span class="number">4171</span>  #<span class="number">190419</span>  <span class="number">0</span>:<span class="number">41</span>:<span class="number">48</span> server id <span class="number">1</span>  end_log_pos <span class="number">59609</span> CRC32 <span class="number">0x36cda2b7</span>        Xid <span class="operator">=</span> <span class="number">6380</span></span><br><span class="line"> <span class="number">4172</span>  <span class="keyword">COMMIT</span><span class="comment">/*!*/</span>;</span><br><span class="line"> <span class="number">4173</span>  # <span class="keyword">at</span> <span class="number">59609</span></span><br><span class="line"> <span class="number">4174</span>  #<span class="number">190419</span>  <span class="number">0</span>:<span class="number">41</span>:<span class="number">48</span> server id <span class="number">1</span>  end_log_pos <span class="number">59674</span> CRC32 <span class="number">0x8de2f06a</span>        Anonymous_GTID  last_committed<span class="operator">=</span><span class="number">145</span>      sequence_number<span class="operator">=</span><span class="number">146</span></span><br><span class="line"> <span class="number">4175</span>  <span class="keyword">SET</span> @<span class="variable">@SESSION</span>.GTID_NEXT<span class="operator">=</span> <span class="string">&#x27;ANONYMOUS&#x27;</span><span class="comment">/*!*/</span>;</span><br><span class="line"> <span class="number">4176</span>  # <span class="keyword">at</span> <span class="number">59674</span></span><br><span class="line"> <span class="number">4177</span>  #<span class="number">190419</span>  <span class="number">0</span>:<span class="number">41</span>:<span class="number">48</span> server id <span class="number">1</span>  end_log_pos <span class="number">59787</span> CRC32 <span class="number">0x6b2edd2b</span>        Query   thread_id<span class="operator">=</span><span class="number">14</span>    exec_time<span class="operator">=</span><span class="number">0</span>     error_code<span class="operator">=</span><span class="number">0</span></span><br><span class="line"> <span class="number">4178</span>  use `XD`<span class="comment">/*!*/</span>;</span><br><span class="line"> <span class="number">4179</span>  <span class="keyword">SET</span> <span class="type">TIMESTAMP</span><span class="operator">=</span><span class="number">1555605708</span><span class="comment">/*!*/</span>;</span><br><span class="line"> <span class="number">4180</span>  <span class="keyword">DROP</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` <span class="comment">/* generated by server */</span></span><br><span class="line"> [root<span class="variable">@xdclass</span><span class="operator">-</span>public log_bin]# </span><br></pre></td></tr></table></figure></li><li><p>恢复数据：</p><ul><li><p>第一步：把备份的数据表user恢复到数据库中：mysql -uroot -p XD &lt; /mysql_data_back/user_bak.sql</p></li><li><p>第二步：利用上面找到的删除的位置进行恢复数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog <span class="comment">--no-defaults --set-charset=utf8  --stop-position=&quot;59674&quot; /data/mydata/log_bin/mysql-bin.000002 | mysql -uroot -p </span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>登录数据库查看数据是否恢复回来</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Aspose-Project</title>
      <link href="/Util/Aspose-Project/"/>
      <url>/Util/Aspose-Project/</url>
      
        <content type="html"><![CDATA[<ol><li></li><li>Apose.Total.Java.lic放在配置文件目录下</li><li>添加依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>AsposeJavaAPI<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Aspose Java API<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repository.aspose.com/repo/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aspose<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspose-tasks<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>21.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>jdk18<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写单元测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProjectTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String dataDir = <span class="string">&quot;E:\\&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initLicense</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//每个类型的License，包名不一样</span></span><br><span class="line">        com.aspose.tasks.License license = <span class="keyword">new</span> com.aspose.tasks.License();</span><br><span class="line">        license.setLicense(ProjectTest.class.getClassLoader().getResourceAsStream(<span class="string">&quot;Aspose.Total.Java.lic&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;init seccess...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Project newProject = <span class="keyword">new</span> Project();</span><br><span class="line">        newProject.save(dataDir + <span class="string">&quot;hello.xml&quot;</span>, SaveFileFormat.XML);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前，Aspose.Tasks for Java 仅提供创建 XML 项目文件的工具</p><ul><li>创建mpp项目</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Project project = <span class="keyword">new</span> Project();</span><br><span class="line">project.save(<span class="string">&quot;E:\\aacopy.mpp&quot;</span>, SaveFileFormat.MPP);</span><br></pre></td></tr></table></figure><ul><li>设置时间表开始时间</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java.util.Calendar calendar = java.util.Calendar.getInstance();</span><br><span class="line">calendar.set(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">project.set(Prj.START_DATE, calendar.getTime());</span><br></pre></td></tr></table></figure><ul><li>设置任务属性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Project project = <span class="keyword">new</span> Project();</span><br><span class="line"><span class="comment">//设置时间表开始时间</span></span><br><span class="line">java.util.Calendar calendar = java.util.Calendar.getInstance();</span><br><span class="line">calendar.set(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">project.set(Prj.START_DATE, calendar.getTime());</span><br><span class="line"><span class="comment">//创建一个任务</span></span><br><span class="line">Task task1 = project.getRootTask().getChildren().add(<span class="string">&quot;Task 1&quot;</span>);</span><br><span class="line"><span class="comment">//设置工期</span></span><br><span class="line">task1.set(Tsk.DURATION, task1.getParentProject().getDuration(<span class="number">12</span>, TimeUnitType.Hour));</span><br><span class="line">Task task2 = project.getRootTask().getChildren().add(<span class="string">&quot;Task 2&quot;</span>);</span><br><span class="line">task2.set(Tsk.DURATION, task2.getParentProject().getDuration(<span class="number">3</span>, TimeUnitType.Day));</span><br><span class="line"><span class="comment">//设置前置任务</span></span><br><span class="line">TaskLink link12 = project.getTaskLinks().add(task1, task2, TaskLinkType.FinishToStart);</span><br><span class="line"><span class="comment">//前置任务-延隔时间</span></span><br><span class="line">link12.setLinkLag(<span class="number">4800</span>);</span><br><span class="line"></span><br><span class="line">Task task3 = project.getRootTask().getChildren().add(<span class="string">&quot;Task 3&quot;</span>);</span><br><span class="line">task3.set(Tsk.DURATION, task3.getParentProject().getDuration(<span class="number">2</span>, TimeUnitType.Day));</span><br><span class="line"><span class="comment">//任务模式：手动计划</span></span><br><span class="line">task3.set(Tsk.IS_MANUAL, <span class="keyword">new</span> NullableBool(<span class="keyword">true</span>));</span><br><span class="line"><span class="comment">//创建资源</span></span><br><span class="line">Resource rsc = project.getResources().add(<span class="string">&quot;Rsc&quot;</span>);</span><br><span class="line"><span class="comment">//给任务分配资源</span></span><br><span class="line">ResourceAssignment assn = project.getResourceAssignments().add(task3, rsc);</span><br><span class="line"></span><br><span class="line">Task task4 = project.getRootTask().getChildren().add(<span class="string">&quot;Task 4&quot;</span>);</span><br><span class="line">task4.set(Tsk.DURATION, task4.getParentProject().getDuration(<span class="number">1</span>, TimeUnitType.Day));</span><br><span class="line"><span class="comment">//设置里程碑</span></span><br><span class="line">task4.set(Tsk.IS_MILESTONE, <span class="keyword">new</span> NullableBool(<span class="keyword">true</span>));</span><br><span class="line"><span class="comment">//导出</span></span><br><span class="line">project.save(<span class="string">&quot;E:\\aacopy.mpp&quot;</span>, SaveFileFormat.MPP);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Aspose </tag>
            
            <tag> Util </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Poi-Excel</title>
      <link href="/Util/Poi-Excel/"/>
      <url>/Util/Poi-Excel/</url>
      
        <content type="html"><![CDATA[<h2 id="导出多级联动、单元格合并"><a href="#导出多级联动、单元格合并" class="headerlink" title="导出多级联动、单元格合并"></a>导出多级联动、单元格合并</h2><p>导入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PoiUtil类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoiUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DICT_DATA = <span class="string">&quot;dict_data&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> XSSFColor TITLE_COLOR = <span class="keyword">new</span> XSSFColor(<span class="keyword">new</span> java.awt.Color(<span class="number">139</span>, <span class="number">155</span>, <span class="number">171</span>), <span class="keyword">new</span> DefaultIndexedColorMap());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ExcelDTO excelDTO = <span class="keyword">new</span> ExcelDTO();</span><br><span class="line">        excelDTO.setFileName(<span class="string">&quot;aa.xlsx&quot;</span>);</span><br><span class="line">        excelDTO.setSheetName(<span class="string">&quot;xx&quot;</span>);</span><br><span class="line">        excelDTO.setTitle(Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>));</span><br><span class="line">        List&lt;DictCellDTO&gt; dictCellDTOS = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;root&quot;</span>, Arrays.asList(<span class="string">&quot;AAAA&quot;</span>, <span class="string">&quot;BBBB&quot;</span>, <span class="string">&quot;CCCC&quot;</span>, <span class="string">&quot;DDDD&quot;</span>, <span class="string">&quot;EEEE&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;AAAA&quot;</span>, Arrays.asList(<span class="string">&quot;aa&quot;</span>, <span class="string">&quot;bb&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;BBBB&quot;</span>, Arrays.asList(<span class="string">&quot;cc&quot;</span>, <span class="string">&quot;dd&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;CCCC&quot;</span>, Arrays.asList(<span class="string">&quot;ee&quot;</span>, <span class="string">&quot;ff&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;DDDD&quot;</span>, Arrays.asList(<span class="string">&quot;gg&quot;</span>, <span class="string">&quot;hh&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;EEEE&quot;</span>, Arrays.asList(<span class="string">&quot;jj&quot;</span>, <span class="string">&quot;kk&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;aa&quot;</span>, Arrays.asList(<span class="string">&quot;aa1&quot;</span>, <span class="string">&quot;b2b&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;bb&quot;</span>, Arrays.asList(<span class="string">&quot;c3c&quot;</span>, <span class="string">&quot;ddd&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;cc&quot;</span>, Arrays.asList(<span class="string">&quot;ese&quot;</span>, <span class="string">&quot;ff2&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;dd&quot;</span>, Arrays.asList(<span class="string">&quot;ggs&quot;</span>, <span class="string">&quot;hfh&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;ee&quot;</span>, Arrays.asList(<span class="string">&quot;jsj&quot;</span>, <span class="string">&quot;kke&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;ff&quot;</span>, Arrays.asList(<span class="string">&quot;a3a&quot;</span>, <span class="string">&quot;bgb&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;gg&quot;</span>, Arrays.asList(<span class="string">&quot;c3c&quot;</span>, <span class="string">&quot;ddd&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;hh&quot;</span>, Arrays.asList(<span class="string">&quot;gee&quot;</span>, <span class="string">&quot;fhf&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;jj&quot;</span>, Arrays.asList(<span class="string">&quot;g2g&quot;</span>, <span class="string">&quot;hfh&quot;</span>)));</span><br><span class="line">        dictCellDTOS.add(<span class="keyword">new</span> DictCellDTO(<span class="string">&quot;kk&quot;</span>, Arrays.asList(<span class="string">&quot;4jj&quot;</span>, <span class="string">&quot;kk5&quot;</span>)));</span><br><span class="line">        excelDTO.setDictCellList(dictCellDTOS);</span><br><span class="line">        Map&lt;Integer, String&gt; f = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        f.put(<span class="number">4</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">        f.put(<span class="number">5</span>, <span class="string">&quot;$E&quot;</span>);</span><br><span class="line">        f.put(<span class="number">6</span>, <span class="string">&quot;$F&quot;</span>);</span><br><span class="line">        excelDTO.setFormula(f);</span><br><span class="line">        List&lt;Map&lt;Integer, Object&gt;&gt; source = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Map&lt;Integer, Object&gt; map1 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map1.put(<span class="number">0</span>, <span class="string">&quot;xx&quot;</span>);</span><br><span class="line">        map1.put(<span class="number">1</span>, <span class="string">&quot;cc&quot;</span>);</span><br><span class="line">        map1.put(<span class="number">2</span>, <span class="string">&quot;vv&quot;</span>);</span><br><span class="line">        map1.put(<span class="number">3</span>, <span class="string">&quot;bb&quot;</span>);</span><br><span class="line">        Map&lt;Integer, Object&gt; map2 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map2.put(<span class="number">0</span>, <span class="string">&quot;xx&quot;</span>);</span><br><span class="line">        map2.put(<span class="number">1</span>, <span class="string">&quot;ww&quot;</span>);</span><br><span class="line">        map2.put(<span class="number">2</span>, <span class="string">&quot;dd&quot;</span>);</span><br><span class="line">        map2.put(<span class="number">3</span>, <span class="string">&quot;ff&quot;</span>);</span><br><span class="line">        Map&lt;Integer, Object&gt; map3 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map3.put(<span class="number">0</span>, <span class="string">&quot;xx&quot;</span>);</span><br><span class="line">        map3.put(<span class="number">1</span>, <span class="string">&quot;ww&quot;</span>);</span><br><span class="line">        map3.put(<span class="number">2</span>, <span class="string">&quot;ee&quot;</span>);</span><br><span class="line">        map3.put(<span class="number">3</span>, <span class="string">&quot;rr&quot;</span>);</span><br><span class="line">        Map&lt;Integer, Object&gt; map4 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map4.put(<span class="number">0</span>, <span class="string">&quot;qq&quot;</span>);</span><br><span class="line">        map4.put(<span class="number">1</span>, <span class="string">&quot;ww&quot;</span>);</span><br><span class="line">        map4.put(<span class="number">2</span>, <span class="string">&quot;ee&quot;</span>);</span><br><span class="line">        map4.put(<span class="number">3</span>, <span class="string">&quot;rr&quot;</span>);</span><br><span class="line">        source.add(map1);</span><br><span class="line">        source.add(map2);</span><br><span class="line">        source.add(map3);</span><br><span class="line">        source.add(map4);</span><br><span class="line">        excelDTO.setSource(source);</span><br><span class="line">        excelDTO.setGroupBy(Arrays.asList(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        createXlsx(excelDTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createXlsx</span><span class="params">(ExcelDTO excelDTO)</span> </span>&#123;</span><br><span class="line">        XSSFWorkbook workbook = <span class="keyword">new</span> XSSFWorkbook();</span><br><span class="line">        <span class="comment">//添加样式</span></span><br><span class="line">        addCellStyle(workbook);</span><br><span class="line">        <span class="comment">//设置标题</span></span><br><span class="line">        XSSFSheet xssfSheet = workbook.createSheet(excelDTO.getSheetName());</span><br><span class="line">        XSSFRow titleRow = xssfSheet.createRow(<span class="number">0</span>);</span><br><span class="line">        List&lt;String&gt; title = excelDTO.getTitle();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; title.size(); i++) &#123;</span><br><span class="line">            XSSFCell titleRowCell = titleRow.createCell(i);</span><br><span class="line">            titleRowCell.setCellValue(title.get(i));</span><br><span class="line">            titleRowCell.setCellStyle(workbook.getCellStyleAt(<span class="number">2</span>));</span><br><span class="line">            xssfSheet.setDefaultColumnStyle(i, workbook.getCellStyleAt(<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置字典</span></span><br><span class="line">        <span class="keyword">if</span>(CollUtil.isNotEmpty(excelDTO.getDictCellList())) &#123;</span><br><span class="line">            createDictData(workbook, excelDTO.getDictCellList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//填充数据,并设置单元格合并</span></span><br><span class="line">        List&lt;Map&lt;Integer, Object&gt;&gt; source = excelDTO.getSource();</span><br><span class="line">        <span class="keyword">if</span>(CollUtil.isNotEmpty(source)) &#123;</span><br><span class="line">            <span class="comment">//根据合并规则，重新处理数据</span></span><br><span class="line">            List&lt;Integer&gt; groupBy = excelDTO.getGroupBy();</span><br><span class="line">            <span class="keyword">if</span> (CollUtil.isNotEmpty(groupBy)) &#123;</span><br><span class="line">                addMergeRegion(xssfSheet, source, groupBy, <span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; source.size(); i++) &#123;</span><br><span class="line">                    XSSFRow row = xssfSheet.createRow(xssfSheet.getLastRowNum() + <span class="number">1</span>);</span><br><span class="line">                    source.get(i).forEach((k1, v1) -&gt;  &#123;</span><br><span class="line">                        XSSFCell cell = row.createCell(k1);</span><br><span class="line">                        cell.setCellValue((String) v1);</span><br><span class="line">                        cell.setCellStyle(workbook.getCellStyleAt(<span class="number">3</span>));</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置下拉联动</span></span><br><span class="line">        Map&lt;Integer, String&gt; formula = excelDTO.getFormula();</span><br><span class="line">        <span class="keyword">if</span>(CollUtil.isNotEmpty(formula)) &#123;</span><br><span class="line">            <span class="keyword">int</span> rowNum = CollUtil.isNotEmpty(source)?source.size():<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rowNum; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (Map.Entry&lt;Integer, String&gt; entry: formula.entrySet()) &#123;</span><br><span class="line">                    CellRangeAddressList regions = <span class="keyword">new</span> CellRangeAddressList(i+<span class="number">1</span>,i+<span class="number">1</span>, entry.getKey(), entry.getKey());</span><br><span class="line">                    XSSFDataValidationHelper xssfDataValidationHelper = <span class="keyword">new</span> XSSFDataValidationHelper(xssfSheet);</span><br><span class="line">                    String value = entry.getValue();</span><br><span class="line">                    value = value.startsWith(<span class="string">&quot;$&quot;</span>)?<span class="string">&quot;INDIRECT(&quot;</span>+value+(i+<span class="number">2</span>)+<span class="string">&quot;)&quot;</span>:value;</span><br><span class="line">                    DataValidationConstraint explicitListConstraint = xssfDataValidationHelper.createFormulaListConstraint(value);</span><br><span class="line">                    DataValidation dataValidation = xssfDataValidationHelper.createValidation(explicitListConstraint, regions);</span><br><span class="line">                    xssfSheet.addValidationData(dataValidation);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//导出文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            workbook.write(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;E:\\&quot;</span>+excelDTO.getFileName()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addCellStyle</span><span class="params">(XSSFWorkbook workbook)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置标题样式</span></span><br><span class="line">        XSSFCellStyle normalStyle = workbook.createCellStyle();</span><br><span class="line">        <span class="comment">//设置边框</span></span><br><span class="line">        normalStyle.setBorderBottom(BorderStyle.THIN); <span class="comment">//下边框</span></span><br><span class="line">        normalStyle.setBorderLeft(BorderStyle.THIN);<span class="comment">//左边框</span></span><br><span class="line">        normalStyle.setBorderTop(BorderStyle.THIN);<span class="comment">//上边框</span></span><br><span class="line">        normalStyle.setBorderRight(BorderStyle.THIN);<span class="comment">//右边框</span></span><br><span class="line">        <span class="comment">//设置标题样式</span></span><br><span class="line">        XSSFCellStyle titleStyle = workbook.createCellStyle();</span><br><span class="line">        <span class="comment">//设置标题背景色</span></span><br><span class="line">        titleStyle.setFillForegroundColor(TITLE_COLOR);</span><br><span class="line">        titleStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);</span><br><span class="line">        <span class="comment">//设置边框</span></span><br><span class="line">        titleStyle.setBorderBottom(BorderStyle.THIN); <span class="comment">//下边框</span></span><br><span class="line">        titleStyle.setBorderLeft(BorderStyle.THIN);<span class="comment">//左边框</span></span><br><span class="line">        titleStyle.setBorderTop(BorderStyle.THIN);<span class="comment">//上边框</span></span><br><span class="line">        titleStyle.setBorderRight(BorderStyle.THIN);<span class="comment">//右边框</span></span><br><span class="line">        Font titleFont = workbook.createFont();</span><br><span class="line">        titleFont.setBold(<span class="keyword">true</span>);</span><br><span class="line">        titleStyle.setFont(titleFont);</span><br><span class="line">        <span class="comment">//设置数据填充样式</span></span><br><span class="line">        XSSFCellStyle sourceStyle = workbook.createCellStyle();</span><br><span class="line">        <span class="comment">//设置边框</span></span><br><span class="line">        sourceStyle.setBorderBottom(BorderStyle.THIN); <span class="comment">//下边框</span></span><br><span class="line">        sourceStyle.setBorderLeft(BorderStyle.THIN);<span class="comment">//左边框</span></span><br><span class="line">        sourceStyle.setBorderTop(BorderStyle.THIN);<span class="comment">//上边框</span></span><br><span class="line">        sourceStyle.setBorderRight(BorderStyle.THIN);<span class="comment">//右边框</span></span><br><span class="line">        Font sourceFont = workbook.createFont();</span><br><span class="line">        sourceFont.setColor(IndexedColors.GREY_50_PERCENT.getIndex());</span><br><span class="line">        sourceStyle.setFont(sourceFont);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addMergeRegion</span><span class="params">(XSSFSheet xssfSheet, List&lt;Map&lt;Integer, Object&gt;&gt; source, List&lt;Integer&gt; groupBy, <span class="keyword">int</span> deep)</span> </span>&#123;</span><br><span class="line">        Integer cellIndex = groupBy.get(deep);</span><br><span class="line">        Map&lt;Object, List&lt;Map&lt;Integer, Object&gt;&gt;&gt; collect = source.stream().collect(Collectors.groupingBy(map -&gt; map.get(cellIndex)));</span><br><span class="line">        collect.forEach((k, v) -&gt; &#123;</span><br><span class="line">            <span class="comment">//最后一个分组后，开始excel插入数据</span></span><br><span class="line">            <span class="keyword">int</span> lastRowNum = xssfSheet.getLastRowNum();</span><br><span class="line">            <span class="comment">//下一级递归</span></span><br><span class="line">            <span class="keyword">if</span>(deep &lt; groupBy.size()-<span class="number">1</span> &amp;&amp; v.size()&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                addMergeRegion(xssfSheet, v, groupBy, deep+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(deep == groupBy.size()-<span class="number">1</span> || v.size()==<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.size(); i++) &#123;</span><br><span class="line">                    XSSFRow row = xssfSheet.createRow(xssfSheet.getLastRowNum() + <span class="number">1</span>);</span><br><span class="line">                    v.get(i).forEach((k1, v1) -&gt;  &#123;</span><br><span class="line">                        XSSFCell cell = row.createCell(k1);</span><br><span class="line">                        cell.setCellValue((String) v1);</span><br><span class="line">                        cell.setCellStyle(xssfSheet.getWorkbook().getCellStyleAt(<span class="number">3</span>));</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(v.size()&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">//合并单元格</span></span><br><span class="line">                CellRangeAddress cellRangeAddress = <span class="keyword">new</span> CellRangeAddress(lastRowNum + <span class="number">1</span>, lastRowNum + v.size(), cellIndex, cellIndex);</span><br><span class="line">                xssfSheet.addMergedRegion(cellRangeAddress);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加字典值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> workbook</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dict</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createDictData</span><span class="params">(XSSFWorkbook workbook, List&lt;DictCellDTO&gt; dict)</span> </span>&#123;</span><br><span class="line">        XSSFSheet sheet = workbook.createSheet(DICT_DATA);</span><br><span class="line">        <span class="comment">//隐藏字典值</span></span><br><span class="line"><span class="comment">//        workbook.setSheetHidden(workbook.getSheetIndex(sheet), true);</span></span><br><span class="line">        <span class="keyword">int</span> currentRow = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (DictCellDTO dictCell: dict) &#123;</span><br><span class="line">            XSSFRow row = sheet.createRow(currentRow);</span><br><span class="line">            row.createCell(<span class="number">0</span>).setCellValue(dictCell.getKey());</span><br><span class="line">            List&lt;String&gt; dictData = dictCell.getDictData();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dictData.size(); i++) &#123;</span><br><span class="line">                row.createCell(i+<span class="number">1</span>).setCellValue(dictData.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//设置名称管理</span></span><br><span class="line">            String range = getRange(<span class="number">1</span>, currentRow+<span class="number">1</span>, dictData.size());</span><br><span class="line">            String formula = DICT_DATA + <span class="string">&quot;!&quot;</span> + range;</span><br><span class="line">            Name name = workbook.createName();</span><br><span class="line">            name.setNameName(dictCell.getKey());</span><br><span class="line">            name.setRefersToFormula(formula);</span><br><span class="line">            currentRow++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算formula</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> offset   偏移量，如果给0，表示从A列开始，1，就是从B列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowId    第几行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> colCount 一共多少列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果给入参 1,1,10. 表示从B1-K1。最终返回 $B$1:$K$1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRange</span><span class="params">(<span class="keyword">int</span> offset, <span class="keyword">int</span> rowId, <span class="keyword">int</span> colCount)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (colCount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            colCount = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> start = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + offset);</span><br><span class="line">        <span class="keyword">if</span> (colCount &lt;= <span class="number">25</span>) &#123;</span><br><span class="line">            <span class="keyword">char</span> end = (<span class="keyword">char</span>) (start + colCount - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> + start + <span class="string">&quot;$&quot;</span> + rowId + <span class="string">&quot;:$&quot;</span> + end + <span class="string">&quot;$&quot;</span> + rowId;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">char</span> endPrefix = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">char</span> endSuffix = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> ((colCount - <span class="number">25</span>) / <span class="number">26</span> == <span class="number">0</span> || colCount == <span class="number">51</span>) &#123;<span class="comment">// 26-51之间，包括边界（仅两次字母表计算）</span></span><br><span class="line">                <span class="keyword">if</span> ((colCount - <span class="number">25</span>) % <span class="number">26</span> == <span class="number">0</span>) &#123;<span class="comment">// 边界值</span></span><br><span class="line">                    endSuffix = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + <span class="number">25</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    endSuffix = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + (colCount - <span class="number">25</span>) % <span class="number">26</span> - <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (colCount &gt; <span class="number">51</span> &amp;&amp; colCount &lt;= <span class="number">701</span>) &#123;<span class="comment">// 51以上</span></span><br><span class="line">                <span class="keyword">if</span> ((colCount - <span class="number">25</span>) % <span class="number">26</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    endSuffix = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + <span class="number">25</span>);</span><br><span class="line">                    endPrefix = (<span class="keyword">char</span>) (endPrefix + (colCount - <span class="number">25</span>) / <span class="number">26</span> - <span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    endSuffix = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + (colCount - <span class="number">25</span>) % <span class="number">26</span> - <span class="number">1</span>);</span><br><span class="line">                    endPrefix = (<span class="keyword">char</span>) (endPrefix + (colCount - <span class="number">25</span>) / <span class="number">26</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (colCount &gt; <span class="number">16383</span>) &#123;</span><br><span class="line">                    colCount = <span class="number">16383</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">char</span> left = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">                <span class="keyword">char</span> centre = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">                <span class="keyword">char</span> right = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span> (colCount / <span class="number">26</span> % <span class="number">26</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    centre = (<span class="keyword">char</span>) (<span class="string">&#x27;A&#x27;</span> + <span class="number">25</span>);<span class="comment">// 边界值</span></span><br><span class="line">                    left = (<span class="keyword">char</span>) (left + (colCount / <span class="number">26</span> / <span class="number">26</span> % <span class="number">26</span> - <span class="number">2</span>));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    left = (<span class="keyword">char</span>) (left + (colCount / <span class="number">26</span> / <span class="number">26</span> % <span class="number">26</span> - <span class="number">1</span>));</span><br><span class="line">                    centre = (<span class="keyword">char</span>) (centre + (colCount / <span class="number">26</span> % <span class="number">26</span> - <span class="number">1</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                right = (<span class="keyword">char</span>) (right + colCount % <span class="number">26</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> + start + <span class="string">&quot;$&quot;</span> + rowId + <span class="string">&quot;:$&quot;</span> + left + centre + right + <span class="string">&quot;$&quot;</span> + rowId;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> + start + <span class="string">&quot;$&quot;</span> + rowId + <span class="string">&quot;:$&quot;</span> + endPrefix + endSuffix + <span class="string">&quot;$&quot;</span> + rowId;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ExcelDTO类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExcelDTO</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * excel文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sheet名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String sheetName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 带下拉框的数据，支持多级联动</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;DictCellDTO&gt; dictCellList;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; title;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要显示在excel中的数据,map中Integer为列索引</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Map&lt;Integer, Object&gt;&gt; source;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列和字典表达式的对应关系</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer, String&gt; formula;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分组的列索引，用于单元格合并</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; groupBy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DictCellDTO类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DictCellDTO</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名称管理器的标示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String key;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; dictData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Util </tag>
            
            <tag> Poi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-优化</title>
      <link href="/Mysql/Mysql-%E4%BC%98%E5%8C%96/"/>
      <url>/Mysql/Mysql-%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="开启慢查询日志"><a href="#开启慢查询日志" class="headerlink" title="开启慢查询日志"></a>开启慢查询日志</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查看是否开启</span><br><span class="line">show variables like &#x27;slow%&#x27;;</span><br><span class="line">#开启</span><br><span class="line">set global slow_query_log = on ;</span><br><span class="line">#查看慢查询的时间临界值</span><br><span class="line">show variables like &#x27;%long%&#x27;;</span><br><span class="line">#设置慢查询的时间标准</span><br><span class="line">set long_query_time=0.4;</span><br></pre></td></tr></table></figure><p>注意：重启mysql服务会让在交互界面设置的慢查询恢复到默认</p><p>永久生效的设置方法：修改配置文件 vi /etc/my.cnf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 0.1</span><br><span class="line">slow_query_log_file =/usr/local/mysql/mysql_slow.log</span><br></pre></td></tr></table></figure><p>最后必须重启服务才能生效！</p><h2 id="开启性能详情"><a href="#开启性能详情" class="headerlink" title="开启性能详情"></a>开启性能详情</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查看性能详情是否开启</span><br><span class="line">show variables like &#x27;%profiling%&#x27;;</span><br><span class="line">#开启性能记录功能</span><br><span class="line">set profiling = on ;</span><br><span class="line">#查看性能的记录</span><br><span class="line">show profiles;</span><br><span class="line">#查看语句的执行性能详情</span><br><span class="line">show profile for query 4;</span><br></pre></td></tr></table></figure><h2 id="sql语句"><a href="#sql语句" class="headerlink" title="sql语句"></a>sql语句</h2><ul><li><p>尽量避免使用select *from ，尽量精确到想要的结果字段</p></li><li><p>尽量避免条件使用or</p></li><li><p>加上limit 限制行数，避免数据量过大消耗性能</p></li><li><p>使用模糊查询时，%放在前面是会使索引失效，执行过程查看explain </p></li><li><p>条件字段类型的转换</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-索引</title>
      <link href="/Mysql/Mysql-%E7%B4%A2%E5%BC%95/"/>
      <url>/Mysql/Mysql-%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<p>索引是一个单独的，存储在磁盘中上的数据库结构，它们包含着对数据表里的所有记录的引用指针。使用索引可以快速的找出在某列或多列中有特定值的行。</p><ul><li>索引类型</li></ul><p>index：普通索引</p><p>unique：唯一索引</p><p>primary key：主键索引</p><p>foreign key：外键索引</p><p>fulltext: 全文索引</p><p>组合索引</p><ul><li>创建索引</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create index 索引名 on 表名 (字段名);</span><br><span class="line"></span><br><span class="line">alter table 表名 add index 索引名称 (字段名称);</span><br><span class="line"></span><br><span class="line">alter table 表名 add primary key (字段名);</span><br></pre></td></tr></table></figure><ul><li>查看索引</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show index from 表名\G</span><br></pre></td></tr></table></figure><ul><li>删除索引</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop index 索引名称 on 表名;</span><br><span class="line"></span><br><span class="line">alter table 表名 drop primary key;</span><br></pre></td></tr></table></figure><ul><li>联合索引</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add index(字段1,字段2,字段3);</span><br></pre></td></tr></table></figure><p>联合索引的最左原则</p><ul><li>索引的优点：</li></ul><p>通过创建唯一索引，来保证数据库表中的每一行数据的唯一性。<br>•   可以加快数据的检索速度。<br>•   可以保证表数据的完整性与准确性</p><ul><li>索引的缺点：</li></ul><p>索引需要占用物理空间。<br>•   对表中的数据进行改动时，索引也需要跟着动态维护，降低了数据的维护速度。</p><p> 索引并非越多越好，过多的索引会增加数据的维护速度还有磁盘空间的浪费。</p><p>• 当表的数据量很大的时候，可以考虑建立索引。</p><p>• 表中经常查数据的字段，可以考虑建立索引。</p><p>• 想要保证表中数据的唯一性，可以考虑建立唯一索引。</p><p>• 想要保证俩张表中的数据的完整性跟准确性，可以考虑建立外键约束。</p><p>• 经常对多列数据进行查询时，可以考虑建立联合索引。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-DQL</title>
      <link href="/Mysql/Mysql-DQL/"/>
      <url>/Mysql/Mysql-DQL/</url>
      
        <content type="html"><![CDATA[<p>对数据表中的数据进行各种查询</p><h2 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee;</span><br><span class="line"><span class="keyword">select</span> empno,ename,job <span class="keyword">as</span> ename_job <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><h2 id="精确条件查询"><a href="#精确条件查询" class="headerlink" title="精确条件查询"></a>精确条件查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;后裔&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal <span class="operator">!=</span> <span class="number">50000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal <span class="operator">&lt;&gt;</span> <span class="number">50000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="number">10000</span>;</span><br></pre></td></tr></table></figure><h2 id="模糊条件查询"><a href="#模糊条件查询" class="headerlink" title="模糊条件查询"></a>模糊条件查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%aracter%&#x27;</span>; </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee  <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;林%&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">10000</span> <span class="keyword">and</span> <span class="number">30000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> hiredate <span class="keyword">between</span> <span class="string">&#x27;2011-01-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2017-12-1&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="离散查询"><a href="#离散查询" class="headerlink" title="离散查询"></a>离散查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> ename <span class="keyword">in</span> (<span class="string">&#x27;猴子&#x27;</span>,<span class="string">&#x27;林俊杰&#x27;</span>,<span class="string">&#x27;小红&#x27;</span>,<span class="string">&#x27;小胡&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="清除重复值"><a href="#清除重复值" class="headerlink" title="清除重复值"></a>清除重复值</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span>(job) <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><h2 id="统计查询（聚合函数）"><a href="#统计查询（聚合函数）" class="headerlink" title="统计查询（聚合函数）:"></a>统计查询（聚合函数）:</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">count</span>(code)或者<span class="built_in">count</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(ename) <span class="keyword">from</span> employee;</span><br><span class="line">        </span><br><span class="line"><span class="built_in">sum</span>()  计算总和 </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> employee;</span><br><span class="line">        </span><br><span class="line"><span class="built_in">max</span>()    计算最大值</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal<span class="operator">=</span> (<span class="keyword">select</span>  <span class="built_in">max</span>(sal) <span class="keyword">from</span> employee);</span><br><span class="line">        </span><br><span class="line"><span class="built_in">avg</span>()   计算平均值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> employee;</span><br><span class="line">        </span><br><span class="line"><span class="built_in">min</span>()   计算最低值</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> sal<span class="operator">=</span> (<span class="keyword">select</span>  <span class="built_in">min</span>(sal) <span class="keyword">from</span> employee);</span><br><span class="line">        </span><br><span class="line">concat函数： 起到连接作用</span><br><span class="line"><span class="keyword">select</span> concat(ename,<span class="string">&#x27; 是 &#x27;</span>,job) <span class="keyword">as</span> aaaa <span class="keyword">from</span> employee;</span><br></pre></td></tr></table></figure><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptnu,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> deptnu;</span><br><span class="line"><span class="keyword">select</span> deptnu,job,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> deptnu,job;</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> job;</span><br><span class="line"></span><br><span class="line">#分组筛选</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> job <span class="operator">=</span><span class="string">&#x27;文员&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span>  deptnu,job,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> deptnu,job <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;=</span><span class="number">2</span>;</span><br><span class="line"><span class="keyword">select</span>  deptnu,job,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 总数 <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> deptnu,job <span class="keyword">having</span> 总数<span class="operator">&gt;=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="限制查询"><a href="#限制查询" class="headerlink" title="限制查询"></a>限制查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> XD.employee limit <span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h2 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h2><p>exists型子查询后面是一个受限的select查询语句，如果exists后的内层查询能查出数据，则返回 TRUE 表示存在；为空则返回 FLASE则不存在。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> 表名<span class="number">2</span> <span class="keyword">where</span> 条件);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> employee b <span class="keyword">where</span> a.deptnu<span class="operator">=</span>b.deptnu);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept a <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> employee b <span class="keyword">where</span> a.deptnu<span class="operator">=</span>b.deptnu);</span><br></pre></td></tr></table></figure><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><ul><li>左连接称之为左外连接 右连接称之为右外连接 这俩个连接都是属于外连接</li><li>左连接关键字：left join 表名 on 条件 / left outer 表名 join on 条件 右连接关键字：right join 表名 on 条件/ right outer 表名 join on 条件</li><li>左连接说明： left join 是left outer join的简写，左(外)连接，左表(a_table)的记录将会全部表示出来， 而右表(b_table)只会显示符合搜索条件的记录。右表记录不足的地方均为NULL。</li><li>右连接说明：right join是right outer join的简写，与左(外)连接相反，右(外)连接，左表(a_table)只会显示符合搜索条件的记录，而右表(b_table)的记录将会全部表示出来。左表记录不足的地方均为NULL。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.dname,b.<span class="operator">*</span> <span class="keyword">from</span> dept a  <span class="keyword">left</span> <span class="keyword">join</span> employee b <span class="keyword">on</span> a.deptnu<span class="operator">=</span>b.deptnu;</span><br><span class="line"><span class="keyword">select</span> b.dname,a.<span class="operator">*</span> <span class="keyword">from</span> employee a  <span class="keyword">right</span> <span class="keyword">join</span>  dept b <span class="keyword">on</span> b.deptnu<span class="operator">=</span>a.deptnu;</span><br></pre></td></tr></table></figure><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><ul><li>内连接：获取两个表中字段匹配关系的记录</li><li>主要语法：INNER JOIN 表名 ON 条件;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.addr  <span class="keyword">from</span> dept a <span class="keyword">inner</span> <span class="keyword">join</span> employee b <span class="keyword">on</span> a.deptnu<span class="operator">=</span>b.deptnu <span class="keyword">and</span> b.ename<span class="operator">=</span><span class="string">&#x27;张飞&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> a.addr <span class="keyword">from</span> dept a,employee b <span class="keyword">where</span> a.deptnu<span class="operator">=</span>b.deptnu <span class="keyword">and</span> b.ename<span class="operator">=</span><span class="string">&#x27;张飞&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>联合查询：就是把多个查询语句的查询结果结合在一起</li></ul><p>​        主要语法1：… UNION … （去除重复） 主要语法2：… UNION ALL …（不去重复）</p><ul><li><p>union查询的注意事项：</p><ol><li>两个select语句的查询结果的“字段数”必须一致；</li></ol></li></ul><ol start="2"><li><p>通常，也应该让两个查询语句的字段类型具有一致性；</p></li><li><p>也可以联合更多的查询结果；</p></li><li><p>用到order by排序时，需要加上limit（加上最大条数就行），需要对子句用括号括起来</p></li></ol><p>#eg:对销售员的工资从低到高排序，而文员的工资从高到低排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee a <span class="keyword">where</span> a.job <span class="operator">=</span> <span class="string">&#x27;销售员&#x27;</span>  <span class="keyword">order</span> <span class="keyword">by</span> a.sal limit <span class="number">999999</span> ) <span class="keyword">union</span>  (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee b <span class="keyword">where</span> b.job <span class="operator">=</span> <span class="string">&#x27;文员&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> b.sal <span class="keyword">desc</span> limit <span class="number">999999</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-存储引擎</title>
      <link href="/Mysql/Mysql-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
      <url>/Mysql/Mysql-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<p>数据库引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制，索引技巧，锁定水平等功能，使用不同的数据库引擎，可以获得特定的功能</p><ul><li>查看引擎</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#如何查看数据库支持的引擎</span><br><span class="line"><span class="keyword">show</span> engines;</span><br><span class="line"></span><br><span class="line">#查看当前数据的引擎：</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名\G</span><br><span class="line"></span><br><span class="line">#查看当前库所有表的引擎：</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status\G</span><br></pre></td></tr></table></figure><ul><li>创建和修改</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> yingqin (id <span class="type">int</span>,name <span class="type">varchar</span>(<span class="number">20</span>)) engine<span class="operator">=</span><span class="string">&#x27;InnoDB&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 engine<span class="operator">=</span><span class="string">&#x27;MyiSAm&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>MyISAM与InnoDB的区别</li></ul><table><thead><tr><th align="center">区别项</th><th align="center">Innodb</th><th align="center">myisam</th></tr></thead><tbody><tr><td align="center">事务</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">锁粒度</td><td align="center">行锁，适合高并发</td><td align="center">表锁，不适合高并发</td></tr><tr><td align="center">是否默认</td><td align="center">默认</td><td align="center">非默认</td></tr><tr><td align="center">支持外键</td><td align="center">支持外键</td><td align="center">不支持</td></tr><tr><td align="center">适合场景</td><td align="center">读写均衡,写大于读场景，需要事务</td><td align="center">读多写少场景，不需要事务</td></tr><tr><td align="center">全文索引</td><td align="center">不支持，可以通过插件实现, 更多使用ElasticSearch</td><td align="center">支持全文索引</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-存储过程</title>
      <link href="/Mysql/Mysql-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/Mysql/Mysql-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>存储过程是为了完成特定功能的SQL语句集</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> 名称 (参数....)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">         过程体;</span><br><span class="line">         过程体;</span><br><span class="line">         <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>参数：in、out、inout 参数名称 类型（长度）<br>        in：表示调用者向过程传入值（传入值可以是字面量或变量）<br>        out：表示过程向调用者传出值(可以返回多个值)（传出值只能是变量）<br>        inout：既表示调用者向过程传入值，又表示过程向调用者传出值（值只能是变量）</p><p>删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> 名称;</span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">procedure</span> 名称\G;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">声明变量：<span class="keyword">declare</span> 变量名 类型(长度) <span class="keyword">default</span> 默认值;</span><br><span class="line">给变量赋值：<span class="keyword">set</span> @变量名<span class="operator">=</span>值;</span><br><span class="line">调用存储命令：<span class="keyword">call</span> 名称(@变量名);</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> delimiter <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">    mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">procedure</span>  name(<span class="keyword">in</span> n <span class="type">int</span>)</span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span>             <span class="keyword">begin</span></span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span>             <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit n;</span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span>             <span class="keyword">end</span></span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">    Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">    mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="variable">@n</span><span class="operator">=</span><span class="number">5</span>;</span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">    Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">    mysql<span class="operator">&gt;</span> </span><br><span class="line">    mysql<span class="operator">&gt;</span> <span class="keyword">call</span> name(<span class="variable">@n</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-触发器</title>
      <link href="/Mysql/Mysql-%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
      <url>/Mysql/Mysql-%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>触发器就是监视某种情况，并触发某种操作</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>新增触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> 触发器名称  after<span class="operator">/</span>before   <span class="keyword">insert</span><span class="operator">/</span>update<span class="operator">/</span><span class="keyword">delete</span> <span class="keyword">on</span> 表名  </span><br><span class="line">        <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">sql</span>语句;</span><br><span class="line">        <span class="keyword">end</span></span><br></pre></td></tr></table></figure><ul><li><p>after/before:可以设置为事件发生前或后</p></li><li><p>insert/update/delete:它们可以在执行insert、update或delete的过程中触发</p></li><li><p>for each row:每隔一行执行一次动作</p></li></ul><p>删除触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> 触发器名称;</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">delimiter <span class="operator">/</span><span class="operator">/</span> 自定义语句的结束符号</span><br><span class="line"></span><br><span class="line">    mysql<span class="operator">&gt;</span> delimiter <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">    mysql<span class="operator">&gt;</span> </span><br><span class="line">    mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">trigger</span> trig_work after <span class="keyword">insert</span> <span class="keyword">on</span> work_time_delay</span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> update employee <span class="keyword">set</span> sal<span class="operator">=</span>sal<span class="number">-100</span> <span class="keyword">where</span> empno<span class="operator">=</span>new.empno;</span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">end</span></span><br><span class="line">        <span class="operator">-</span><span class="operator">&gt;</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">    Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>new：指的是事件发生before或者after保存的新数据</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-视图</title>
      <link href="/Mysql/Mysql-%E8%A7%86%E5%9B%BE/"/>
      <url>/Mysql/Mysql-%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>视图（view）是一种虚拟存在的表，是一个逻辑表，它本身是不包含数据的。作为一个select语句保存在数据字典中的。<br>通过视图，可以展现基表（用来创建视图的表叫做基表base table）的部分数据，视图的数据就是来自于基表</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ul><li>创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span> <span class="keyword">as</span> <span class="keyword">select</span> 语句;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span> (字段) <span class="keyword">as</span> <span class="keyword">select</span> 语句;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span> <span class="keyword">as</span> <span class="keyword">select</span> 语句;</span><br></pre></td></tr></table></figure><ul><li>删除</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span> ;</span><br></pre></td></tr></table></figure><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>1）简单：使用视图的用户完全不需要关心后面对应的表的结构、关联条件和筛选条件，对用户来说已经是过滤好的复合条件的结果集。</p><p>2）安全：使用视图的用户只能访问他们被允许查询的结果集，对表的权限管理并不能限制到某个行某个列，但是通过视图就可以简单的实现。</p><p>3）数据独立：一旦视图的结构确定了，可以屏蔽表结构变化对用户的影响，源表增加列对视图没有影响;源表修改列名，则可以通过修改视图来解决，不会造成对访问者的影响。<br>　　<br>4）不占用空间：视图是逻辑上的表，不占用内存空间</p><p>总而言之，使用视图的大部分情况是为了保障数据安全性，提高查询效率。</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p> 1)性能差：sql server必须把视图查询转化成对基本表的查询，如果这个视图是由一个复杂的多表查询所定义，那么，即使是视图的一个简单查询，sql server也要把它变成一个复杂的结合体，需要花费一定的时间。</p><p> 2)修改限制：当用户试图修改试图的某些信息时，数据库必须把它转化为对基本表的某些信息的修改，对于简单的试图来说，这是很方便的，但是，对于比较复杂的试图，可能是不可修改的。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-事务</title>
      <link href="/Mysql/Mysql-%E4%BA%8B%E5%8A%A1/"/>
      <url>/Mysql/Mysql-%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<ul><li>事务的开启与提交：</li><li>事务的开启：begin; start transaction;</li><li>事务的提交：commit;</li><li>事务的回滚：rollback;</li></ul><p>开启autocommit（临时生效）：</p><p>OFF（0）：表示关闭 ON （1）：表示开启</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;autocommit&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Drools-动态加载规则</title>
      <link href="/Drools/Drools-%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E8%A7%84%E5%88%99/"/>
      <url>/Drools/Drools-%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<p>drools规则引擎从数据动态读取规则，并执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Drools规则引擎实现</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/10/4 19:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;droolsRuleEngineService&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DroolsRuleEngineServiceImpl</span> <span class="keyword">implements</span> <span class="title">RuleEngineService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RuleDao ruleDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//由于创建KieBase性能消耗大,将ruleId对于的对象放在本地缓存中</span></span><br><span class="line">    <span class="keyword">private</span> Cache&lt;String, KieBase&gt; kieBaseCache = Caffeine.newBuilder()</span><br><span class="line">            <span class="comment">// 设置最后一次写入或访问后经过固定时间过期,一周不再访问，就过期</span></span><br><span class="line">            .expireAfterAccess(<span class="number">7</span>, TimeUnit.DAYS)</span><br><span class="line">            <span class="comment">// 初始的缓存空间大小</span></span><br><span class="line">            .initialCapacity(<span class="number">100</span>)</span><br><span class="line">            <span class="comment">// 缓存的最大条数</span></span><br><span class="line">            .maximumSize(<span class="number">1000</span>)</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ruleId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/10/5 11:22</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">executeRule</span><span class="params">(String ruleId, JSONObject param)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;执行规则：ruleId=&#123;&#125;, param=&#123;&#125;&quot;</span>, ruleId, param.toJSONString());</span><br><span class="line">        <span class="comment">//获取规则库</span></span><br><span class="line">        KieBase kieBase = getKieBase(ruleId);</span><br><span class="line">        <span class="comment">//创建规则库执行对象</span></span><br><span class="line">        KieSession kieSession = kieBase.newKieSession();</span><br><span class="line">        <span class="comment">//插入规则执行参数</span></span><br><span class="line">        JSONObject root = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        root.put(<span class="string">&quot;reqParam&quot;</span>, param);</span><br><span class="line">        root.put(<span class="string">&quot;result&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">        kieSession.insert(root);</span><br><span class="line">        <span class="comment">//执行规则库中的所有规则</span></span><br><span class="line">        kieSession.fireAllRules();</span><br><span class="line">        <span class="comment">//销毁</span></span><br><span class="line">        kieSession.dispose();</span><br><span class="line">        <span class="keyword">return</span> root.getBoolean(<span class="string">&quot;result&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据规则id获取规则引擎中的执行库对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ruleId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.kie.api.KieBase</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/10/4 21:11</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> KieBase <span class="title">getKieBase</span><span class="params">(String ruleId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//查看缓存是否存在KieBase</span></span><br><span class="line">        <span class="keyword">return</span> kieBaseCache.get(ruleId, key -&gt; loadKieBase(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库获取规则脚本生成规则对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.kie.api.KieBase</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/10/5 11:18</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> KieBase <span class="title">loadKieBase</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;从数据库获取规则加载新的规则库对象，ruleId=$&#123;&#125;&quot;</span>, key);</span><br><span class="line">        <span class="comment">//查询规则详情</span></span><br><span class="line">        RuleDO rule = ruleDao.selectById(key);</span><br><span class="line">        <span class="comment">//创建一个新的KieBase</span></span><br><span class="line">        KieHelper kieHelper = <span class="keyword">new</span> KieHelper();</span><br><span class="line">        kieHelper.addContent(rule.getScript(), ResourceType.DRL);</span><br><span class="line">        KieBase kieBase = kieHelper.build();</span><br><span class="line">        log.info(<span class="string">&quot;从数据库获取规则加载新的规则库对象，ruleId=$&#123;&#125;, 规则加载成功&quot;</span>, key);</span><br><span class="line">        <span class="keyword">return</span> kieBase;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Drools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Drools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-DML</title>
      <link href="/Mysql/Mysql-DML/"/>
      <url>/Mysql/Mysql-DML/</url>
      
        <content type="html"><![CDATA[<p>对表的数据进行增删改</p><h2 id="插入表数据"><a href="#插入表数据" class="headerlink" title="插入表数据"></a>插入表数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名（字段名） <span class="keyword">values</span>（字段对应值）;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span>（所有字段对应值）;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名<span class="number">1</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名<span class="number">1</span>（字段名<span class="number">1</span>，字段名<span class="number">2</span>） <span class="keyword">select</span> 字段名<span class="number">1</span>，字段名<span class="number">2</span> <span class="keyword">from</span> 表名<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名<span class="number">1</span> <span class="keyword">as</span> <span class="keyword">select</span> 字段名<span class="number">1</span>，字段名<span class="number">2</span> <span class="keyword">from</span> 表名<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名  (字段名) <span class="keyword">values</span> (对应值<span class="number">1</span>),(对应值<span class="number">2</span>),(对应值<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update 表名 <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span> <span class="keyword">where</span> 字段名<span class="operator">=</span>值;</span><br><span class="line"></span><br><span class="line">update 表名 <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>,字段名<span class="number">2</span><span class="operator">=</span>值<span class="number">2</span> <span class="keyword">where</span> 字段名<span class="operator">=</span>值;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#删除表记录</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名<span class="operator">=</span>值;</span><br><span class="line"></span><br><span class="line">删除整个表</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><ul><li>delele 会把删除的操作记录给记录起来，以便数据回退，不会释放空间，而且不会删除定义。</li><li>truncate不会记录删除操作，会把表占用的空间恢复到最初，不会删除定义</li><li>drop会删除整张表，释放表占用的空间</li><li>删除速度：drop &gt; truncate &gt; delete</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-自定义规则引擎</title>
      <link href="/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/"/>
      <url>/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<p>业务中需要复杂的规则判断，或者flowable无法满足规则需求，或者需要调用自己的规则服务做判断</p><h2 id="编写一个规则服务"><a href="#编写一个规则服务" class="headerlink" title="编写一个规则服务"></a>编写一个规则服务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RuleService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RuleEngineService ruleEngineService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String ruleExpression, DelegateExecution execution)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始执行规则 ================&gt; &#123;&#125;&quot;</span>, ruleExpression);</span><br><span class="line">        Map&lt;String, Object&gt; variables = execution.getVariables();<span class="comment">//获取全局变量</span></span><br><span class="line">        Map&lt;String, Object&gt; variablesLocal = execution.getVariablesLocal();<span class="comment">//获取局部变量</span></span><br><span class="line">        log.info(<span class="string">&quot;variables -&gt; &#123;&#125; &quot;</span>, variables.toString());</span><br><span class="line">        log.info(<span class="string">&quot;variablesLocal -&gt; &#123;&#125; &quot;</span>, variablesLocal.toString());</span><br><span class="line">        Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        param.putAll(variables);</span><br><span class="line">        param.putAll(variablesLocal);</span><br><span class="line">        Boolean ruleResult = ruleEngineService.executeRule(ruleExpression, param);</span><br><span class="line">        log.info(<span class="string">&quot;规则[&#123;&#125;]执行结果 -&gt; &#123;&#125;&quot;</span>, ruleExpression, ruleResult);</span><br><span class="line">        <span class="keyword">return</span> ruleResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RuleEngineService服务可以使用Groovy或者Drools实现，<a href="https://aacopy.gitee.io/2021/11/22/Groovy/Groovy-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/">点击查看Groovy示例</a></p><p>在xml编写规则表达式时，可以直接改为调用RuleService.execute()</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sequenceFlow</span> <span class="attr">id</span>=<span class="string">&quot;Flow_1kh3iy1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;审批通过<span class="symbol">&amp;#38;</span><span class="symbol">&amp;#38;</span>f3==a&quot;</span> <span class="attr">sourceRef</span>=<span class="string">&quot;Gateway_0corauh&quot;</span> <span class="attr">targetRef</span>=<span class="string">&quot;Activity_1wg31no&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">conditionExpression</span> <span class="attr">xsi:type</span>=<span class="string">&quot;tFormalExpression&quot;</span>&gt;</span>$&#123;ruleService.execute(&#x27;&lt;![CDATA[latestActionButton==&quot;SP&quot;&amp;&amp;formValue.f3==&quot;a&quot;]]&gt;&#x27;, execution)&#125;<span class="tag">&lt;/<span class="name">conditionExpression</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sequenceFlow</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-plus-多数据源</title>
      <link href="/Mybatis/Mybatis-plus-%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
      <url>/Mybatis/Mybatis-plus-%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>官方文档地址：<a href="https://mp.baomidou.com/guide/dynamic-datasource.html#%E6%96%87%E6%A1%A3-documentation">https://mp.baomidou.com/guide/dynamic-datasource.html#%E6%96%87%E6%A1%A3-documentation</a></p><h2 id="1-常规使用"><a href="#1-常规使用" class="headerlink" title="1. 常规使用"></a>1. 常规使用</h2><ol><li>引入dynamic-datasource-spring-boot-starter</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置数据源</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">master</span> <span class="comment">#设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line">      <span class="attr">strict:</span> <span class="literal">false</span> <span class="comment">#严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://xx.xx.xx.xx:3306/dynamic</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span> <span class="comment"># 3.2.0开始支持SPI可省略此配置</span></span><br><span class="line">        <span class="attr">slave_1:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://xx.xx.xx.xx:3307/dynamic</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="attr">slave_2:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">ENC(xxxxx)</span> <span class="comment"># 内置加密,使用请查看详细文档</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">ENC(xxxxx)</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">ENC(xxxxx)</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">       <span class="comment">#......省略</span></span><br><span class="line">       <span class="comment">#以上会配置一个默认库master，一个组slave下有两个子库slave_1,slave_2</span></span><br></pre></td></tr></table></figure><ol start="3"><li>切换数据源</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@DS(&quot;slave&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List <span class="title">selectAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  jdbcTemplate.queryForList(<span class="string">&quot;select * from user&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="meta">@DS(&quot;slave_1&quot;)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List <span class="title">selectByCondition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  jdbcTemplate.queryForList(<span class="string">&quot;select * from user where age &gt;10&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-动态添加数据源并执行动态sql"><a href="#2-动态添加数据源并执行动态sql" class="headerlink" title="2. 动态添加数据源并执行动态sql"></a>2. 动态添加数据源并执行动态sql</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/2 16:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlQueryServiceImpl</span> <span class="keyword">implements</span> <span class="title">SqlQueryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Qualifier(&quot;hikariDataSourceCreator&quot;)</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSourceCreator dataSourceCreator;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REGEX = <span class="string">&quot;#\\&#123;(\\w*)\\&#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REPLACE = <span class="string">&quot;?&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getAllDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DynamicRoutingDataSource dynamicRoutingDataSource = (DynamicRoutingDataSource) dataSource;</span><br><span class="line">        <span class="keyword">return</span> dynamicRoutingDataSource.getDataSources().keySet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">addDataSource</span><span class="params">(DataSourceQry dataSourceQry)</span> </span>&#123;</span><br><span class="line">        DataSourceProperty dataSourceProperty = <span class="keyword">new</span> DataSourceProperty();</span><br><span class="line">        dataSourceProperty.setPoolName(dataSourceQry.getDbKey());</span><br><span class="line">        dataSourceProperty.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        dataSourceProperty.setUrl(dataSourceQry.getUrl());</span><br><span class="line">        dataSourceProperty.setUsername(dataSourceQry.getUsername());</span><br><span class="line">        dataSourceProperty.setPassword(dataSourceQry.getPassword());</span><br><span class="line">        DataSource newDataSource = dataSourceCreator.createDataSource(dataSourceProperty);</span><br><span class="line">        DynamicRoutingDataSource dynamicRoutingDataSource = (DynamicRoutingDataSource) dataSource;</span><br><span class="line">        dynamicRoutingDataSource.addDataSource(dataSourceQry.getDbKey(), newDataSource);</span><br><span class="line">        <span class="keyword">return</span> dynamicRoutingDataSource.getDataSources().keySet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">queryForMap</span><span class="params">(DbQueryQry dbQueryQry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isAnyBlank(dbQueryQry.getDbKey(), dbQueryQry.getSql())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String sql = dbQueryQry.getSql();</span><br><span class="line">        Map&lt;String, Object&gt; param = dbQueryQry.getParam();</span><br><span class="line">        <span class="comment">//将#&#123;xxx&#125;转成?， 将map参数结构转成数组</span></span><br><span class="line">        Pattern p = Pattern.compile(REGEX);</span><br><span class="line">        Matcher m = p.matcher(sql);</span><br><span class="line">        List&lt;String&gt; matchList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            matchList.add(m.group());</span><br><span class="line">        &#125;</span><br><span class="line">        sql = m.replaceAll(REPLACE);</span><br><span class="line">        Object[] sqlArgs = <span class="keyword">new</span> Object[matchList.size()];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;matchList.size(); i++) &#123;</span><br><span class="line">            sqlArgs[i] = param.get(matchList.get(i).substring(<span class="number">2</span>, matchList.get(i).length()-<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            DynamicDataSourceContextHolder.push(dbQueryQry.getDbKey());</span><br><span class="line">            List&lt;Map&lt;String, Object&gt;&gt; queryList = jdbcTemplate.query(sql, sqlArgs, <span class="keyword">new</span> ColumnMapRowMapper());</span><br><span class="line">            <span class="keyword">if</span>(CollUtil.isNotEmpty(queryList)) &#123;</span><br><span class="line">                <span class="keyword">return</span> queryList.get(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;移除当前线程数据源&quot;</span>);</span><br><span class="line">            DynamicDataSourceContextHolder.poll();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-多数据源测试全量代码"><a href="#3-多数据源测试全量代码" class="headerlink" title="3. 多数据源测试全量代码"></a>3. 多数据源测试全量代码</h2><ul><li>创建springboot工程，引入maven依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.learn<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>mybatisplus-learn<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>添加配置项application.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">aacopy</span></span><br><span class="line">      <span class="attr">strict:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">aacopy:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.25.216:3306/aacopy?useSSL=false&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">aacopy.cn</span></span><br><span class="line">        <span class="attr">aacopy1:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.25.216:3306/aacopy1?useSSL=false&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">aacopy.cn</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><ul><li>启动类上添加扫描注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;cn.aacopy.learn.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusLearnApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisplusLearnApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>创建两个数据库。这里创建了aacopy和aacopy1</p><ul><li>aacopy中创建表goods</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- aacopy.goods definition</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `goods` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `num` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `version` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">11</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><ul><li>aacopy1中创建表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- aacopy1.`user` definition</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">2</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure></li></ul><ul><li>用代码生成工具生成对应的代码文件</li></ul><p><img src="/images/Mybatis-plus-%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/image-20221103233842920.png" alt="image-20221103233842920"></p><ul><li>因为user表不是默认数据源中的表，所以需要指定对应的数据源，类上添加@DS(“aacopy1”)属性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@DS(&quot;aacopy1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">UserMapper</span>, <span class="title">UserDO</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写一个测试类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.domain.GoodsDO;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.domain.UserDO;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.service.GoodsService;</span><br><span class="line"><span class="keyword">import</span> cn.aacopy.learn.mybatisplus.service.UserService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/11/3 23:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicDsTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsService goodsService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试多数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        GoodsDO goodsDO = <span class="keyword">new</span> GoodsDO();</span><br><span class="line">        goodsDO.setName(<span class="string">&quot;测试物品&quot;</span>);</span><br><span class="line">        goodsDO.setNum(<span class="number">100L</span>);</span><br><span class="line">        goodsService.save(goodsDO);</span><br><span class="line">        List&lt;GoodsDO&gt; goodsDOS = goodsService.list();</span><br><span class="line">        goodsDOS.forEach(o -&gt; log.info(<span class="string">&quot;物品：&quot;</span> + o));</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;=================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        UserDO userDO = <span class="keyword">new</span> UserDO();</span><br><span class="line">        userDO.setName(<span class="string">&quot;测试人员&quot;</span>);</span><br><span class="line">        userService.save(userDO);</span><br><span class="line">        List&lt;UserDO&gt; userDOS = userService.list();</span><br><span class="line">        userDOS.forEach(o -&gt; log.info(<span class="string">&quot;人员：&quot;</span> + o));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>执行结果</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25be445f] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@1330143761 wrapping com.mysql.cj.jdbc.ConnectionImpl@51e3d37e] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: INSERT INTO goods ( name, num ) VALUES ( ?, ? )</span><br><span class="line">==&gt; Parameters: 测试物品(String), 100(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25be445f]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c134052] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@1112569408 wrapping com.mysql.cj.jdbc.ConnectionImpl@51e3d37e] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name,num,version FROM goods</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, name, num, version</span><br><span class="line">&lt;==        Row: 11, 测试物品, 100, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c134052]</span><br><span class="line">2022-11-03 23:29:12.757  INFO 17156 --- [           main] c.a.learn.mybatisplus.DynamicDsTest      : 物品：GoodsDO(id=11, name=测试物品, num=100, version=1)</span><br><span class="line">2022-11-03 23:29:12.757  INFO 17156 --- [           main] c.a.learn.mybatisplus.DynamicDsTest      : =================================</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c232051] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@366008009 wrapping com.mysql.cj.jdbc.ConnectionImpl@3ab35b9c] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: INSERT INTO user ( name ) VALUES ( ? )</span><br><span class="line">==&gt; Parameters: 测试人员(String)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c232051]</span><br><span class="line">Creating a new SqlSession</span><br><span class="line">SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4130a648] was not registered for synchronization because synchronization is not active</span><br><span class="line">JDBC Connection [HikariProxyConnection@1644128841 wrapping com.mysql.cj.jdbc.ConnectionImpl@3ab35b9c] will not be managed by Spring</span><br><span class="line">==&gt;  Preparing: SELECT id,name FROM user</span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, name</span><br><span class="line">&lt;==        Row: 1, 测试人员</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4130a648]</span><br><span class="line">2022-11-03 23:29:12.769  INFO 17156 --- [           main] c.a.learn.mybatisplus.DynamicDsTest      : 人员：UserDO(id=1, name=测试人员)</span><br><span class="line">2022-11-03 23:29:12.785  INFO 17156 --- [ionShutdownHook] c.b.d.d.DynamicRoutingDataSource         : dynamic-datasource start closing ....</span><br><span class="line">2022-11-03 23:29:12.785  INFO 17156 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : aacopy1 - Shutdown initiated...</span><br><span class="line">2022-11-03 23:29:12.791  INFO 17156 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : aacopy1 - Shutdown completed.</span><br><span class="line">2022-11-03 23:29:12.791  INFO 17156 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : aacopy - Shutdown initiated...</span><br><span class="line">2022-11-03 23:29:12.792  INFO 17156 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : aacopy - Shutdown completed.</span><br><span class="line">2022-11-03 23:29:12.792  INFO 17156 --- [ionShutdownHook] c.b.d.d.DynamicRoutingDataSource         : dynamic-datasource all closed success,bye</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-SQL表名的动态替换（多租户场景）"><a href="#4-SQL表名的动态替换（多租户场景）" class="headerlink" title="4. SQL表名的动态替换（多租户场景）"></a>4. SQL表名的动态替换（多租户场景）</h2><p>在多租户场景中，如果使用物理隔离，将不同的租户的数据放在不同的表里，在查询SQL是，需要通过动态变更表名来路由到对应的租户表中</p><ul><li>代码逻辑实现</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class MybatisPlusConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public MybatisPlusInterceptor mybatisPlusInterceptor() &#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();</span><br><span class="line">        // 添加乐观锁插件</span><br><span class="line">        interceptor.addInnerInterceptor(new OptimisticLockerInnerInterceptor());</span><br><span class="line"></span><br><span class="line">        //设置动态更新表名插件</span><br><span class="line">        DynamicTableNameInnerInterceptor dynamicTableNameInnerInterceptor</span><br><span class="line">                = new DynamicTableNameInnerInterceptor();</span><br><span class="line">        //设置表名替换规则</span><br><span class="line">        dynamicTableNameInnerInterceptor.setTableNameHandler((sql, tableName) -&gt; &#123;</span><br><span class="line">            // 模拟从当前线程变量中获取当前用户的租户id</span><br><span class="line">            Long tenantId = 1L;</span><br><span class="line">            // 将表面后面加上 _tenantId</span><br><span class="line">            return tableName + &quot;_&quot; + tenantId;</span><br><span class="line">        &#125;);</span><br><span class="line">        interceptor.addInnerInterceptor(dynamicTableNameInnerInterceptor);</span><br><span class="line">        return interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后的sql：<code>INSERT INTO goods_1 ( name, num ) VALUES ( ?, ? )</code></p><ul><li>官方代码示例：<a href="https://gitee.com/baomidou/mybatis-plus-samples/blob/master/mybatis-plus-sample-dynamic-tablename/src/main/java/com/baomidou/mybatisplus/samples/dytablename/config/MybatisPlusConfig.java">https://gitee.com/baomidou/mybatis-plus-samples/blob/master/mybatis-plus-sample-dynamic-tablename/src/main/java/com/baomidou/mybatisplus/samples/dytablename/config/MybatisPlusConfig.java</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> Mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-自定义属性</title>
      <link href="/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/"/>
      <url>/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>​    flowable已经存在一些通用的流程属性，在业务中常有自定义的属性，本节内容主要记录，如何创建自定义标签，获取标签中的内容，在流程事件中获取自定义属性，并做相应的处理</p><h2 id="设置自定义属性"><a href="#设置自定义属性" class="headerlink" title="设置自定义属性"></a>设置自定义属性</h2><p>​    首先我们自定义的属性要使用flowable的api获取并解析，需要贵自定义属性标签做如下规范</p><ul><li>自定义标签必须放在<code>&lt;extensionElements&gt;</code>标签内</li><li>标签名必须以flowable:开头</li><li>标签的属性值最好使用<code>&lt;![CDATA[]]&gt;</code>包裹起来，防止有特殊字符导致flowable解析出错</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">extensionElements</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">flowable:selfDefAttr_startCondition</span>&gt;</span>&lt;![CDATA[formValue.f1&gt;3&amp;&amp;bizObj.a==&quot;xxx&quot;]]&gt;<span class="tag">&lt;/<span class="name">flowable:selfDefAttr_startCondition</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">extensionElements</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="获取自定义属性"><a href="#获取自定义属性" class="headerlink" title="获取自定义属性"></a>获取自定义属性</h2><ol><li> 获取流程定义id（processDefinitionId）和节点id（activityId），可以通过以下方式获取</li></ol><ul><li>TaskEntity的方法<code>taskEntity.getProcessDefinitionId()</code>和<code>taskEntity.getTaskDefinitionKey()</code></li><li>DelegateExecution的方法<code>delegateExecution.getProcessDefinitionId()</code>和<code>delegateExecution.getCurrentActivityId()</code></li></ul><ol start="2"><li>获取BpmnModel，<code>BpmnModel bpmnModel = repositoryService.getBpmnModel(processDefinitionId);</code></li><li>通过bpmnModel可以获取流程定义里的标签和属性值</li></ol><p>完整示例（场景：从事件监听中获取自定义属性）：</p><p>监听器代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelfDefAttrListener</span> <span class="keyword">implements</span> <span class="title">FlowableEventListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(FlowableEvent event)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;自定义任务属性监听...&#123;&#125;&quot;</span>, event.getType().name());</span><br><span class="line">        <span class="keyword">if</span>(FlowableEngineEventType.TASK_CREATED.equals(event.getType())) &#123;</span><br><span class="line">            TaskEntity taskEntity = (TaskEntity) ((org.flowable.common.engine.impl.event.FlowableEntityEventImpl) event).getEntity();</span><br><span class="line">            String attribute = getSelfDefineTaskAttribute(taskEntity.getProcessDefinitionId(), taskEntity.getTaskDefinitionKey());</span><br><span class="line">            <span class="comment">//TODO 下面编写页面代码处理自定义属性</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(FlowableEngineEventType.TASK_COMPLETED.equals(event.getType())) &#123; <span class="comment">//任务完成</span></span><br><span class="line">            TaskEntity taskEntity = (TaskEntity) ((org.flowable.engine.delegate.event.impl.FlowableEntityEventImpl) event).getEntity();</span><br><span class="line">            String attribute = getSelfDefineTaskAttribute(taskEntity.getProcessDefinitionId(), taskEntity.getTaskDefinitionKey());</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(FlowableEngineEventType.ACTIVITY_CANCELLED.equals(event.getType())) &#123; <span class="comment">//处理节点取消事件（驳回，撤回）</span></span><br><span class="line">            DelegateExecution delegateExecution = ((FlowableActivityCancelledEventImpl) event).getExecution();</span><br><span class="line">            String attribute = getSelfDefineTaskAttribute(delegateExecution.getProcessDefinitionId(), delegateExecution.getCurrentActivityId());</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getSelfDefineTaskAttribute</span><span class="params">(String processDefinitionId, String activityId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取自定义用户任务节点属性</span></span><br><span class="line">        BpmnModel bpmnModel = repositoryService.getBpmnModel(processDefinitionId);</span><br><span class="line">        Map&lt;String, String&gt; selfDefineAttribute = FlowableUtils.getSelfDefineAttribute(bpmnModel, activityId);</span><br><span class="line">        <span class="keyword">if</span>(CollUtil.isNotEmpty(selfDefineAttribute)) &#123;</span><br><span class="line">            <span class="comment">//直接放在一个大json中，解析json中的各个字段，这里get的参数，就是自定义的key，不包括flowable:</span></span><br><span class="line">            <span class="keyword">return</span> selfDefineAttribute.get(<span class="string">&quot;selfDefAttr_taskAll&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FlowableUtils类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">getSelfDefineAttribute</span><span class="params">(BpmnModel bpmnModel, String activityId)</span> </span>&#123;</span><br><span class="line">    List&lt;Process&gt; processes = bpmnModel.getProcesses();</span><br><span class="line">    <span class="keyword">for</span>(Process p: processes) &#123;</span><br><span class="line">        FlowElement flowElement = p.getFlowElement(activityId);</span><br><span class="line">        <span class="keyword">if</span>(flowElement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Map&lt;String, List&lt;ExtensionElement&gt;&gt; extensionElements = flowElement.getExtensionElements();</span><br><span class="line">            Map&lt;String, String&gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            extensionElements.forEach((k, v) -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span>(k.startsWith(<span class="string">&quot;selfDefAttr_&quot;</span>) &amp;&amp; v.size()&gt;<span class="number">0</span> &amp;&amp; StringUtils.isNotBlank(v.get(<span class="number">0</span>).getElementText())) &#123;</span><br><span class="line">                    result.put(k, StringUtils.trim(v.get(<span class="number">0</span>).getElementText()));<span class="comment">//这里默认一个属性对应一个值，如果业务有一对多的情况再改为&lt;String, Object&gt;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            log.info(<span class="string">&quot;获取任务节点中自定义的属性-&gt;&#123;&#125;&quot;</span>, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果自定义属性设置在主流程里可以直接从主流程获取，不用遍历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BpmnModel bpmnModel = repositoryService.getBpmnModel(processDefId);</span><br><span class="line">Process mainProcess = bpmnModel.getMainProcess();</span><br><span class="line">Map&lt;String, List&lt;ExtensionElement&gt;&gt; extensionElements = mainProcess.getExtensionElements();</span><br><span class="line">List&lt;ExtensionElement&gt; elements = extensionElements.get(<span class="string">&quot;selfDefAttr_startCondition&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-事件处理</title>
      <link href="/Flowable/Flowable-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/"/>
      <url>/Flowable/Flowable-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>事件处理器主要用于工作流引擎处理相应的操作时，通知到程序，程序中可以根据业务需求编写处理逻辑</p><p>实现事件监听器需要实现<code>org.flowable.common.engine.api.delegate.event.FlowableEventListener</code>接口</p><h2 id="可以被监听的对象"><a href="#可以被监听的对象" class="headerlink" title="可以被监听的对象"></a>可以被监听的对象</h2><p>entityType可用的值有：attachment（附件）, comment（备注）, execution（执行）, identity-link（身份关联）, job（作业）, process-instance（流程实例）, process-definition（流程定义）, task（任务）。</p><h2 id="支持的事件类型"><a href="#支持的事件类型" class="headerlink" title="支持的事件类型"></a>支持的事件类型</h2><p>每种类型对应<code>org.flowable.engine.common.api.delegate.event.FlowableEventType</code>中的一个枚举值</p><table><thead><tr><th>事件名称</th><th>说明</th></tr></thead><tbody><tr><td>ENGINE_CREATED</td><td>本监听器所属的流程引擎已经创建，并可以响应API调用。</td></tr><tr><td>ENGINE_CLOSED</td><td>本监听器所属的流程引擎已经关闭，不能再对该引擎进行API调用。</td></tr><tr><td>ENTITY_CREATED</td><td>新的实体已经创建。该实体包含在本事件里。</td></tr><tr><td>ENTITY_INITIALIZED</td><td>新的实体已经创建并完全初始化。如果任何子实体作为该实体的一部分被创建，本事件会在子实体创建/初始化后触发，与  ENTITY_CREATE 事件相反。</td></tr><tr><td>ENTITY_UPDATED</td><td>实体已经更新。该实体包含在本事件里。</td></tr><tr><td>ENTITY_DELETED</td><td>实体已经删除。该实体包含在本事件里。</td></tr><tr><td>ENTITY_SUSPENDED</td><td>实体已经暂停。该实体包含在本事件里。ProcessDefinitions（流程定义）,  ProcessInstances（流程实例）与Tasks（任务）会分发本事件。</td></tr><tr><td>ENTITY_ACTIVATED</td><td>实体已经激活。该实体包含在本事件里。ProcessDefinitions,  ProcessInstances与Tasks会分发本事件。</td></tr><tr><td>JOB_EXECUTION_SUCCESS</td><td>作业已经成功执行。该作业包含在本事件里。</td></tr><tr><td>JOB_EXECUTION_FAILURE</td><td>作业执行失败。该作业与异常包含在本事件里。</td></tr><tr><td>JOB_RETRIES_DECREMENTED</td><td>作业重试次数已经由于执行失败而减少。该作业包含在本事件里。</td></tr><tr><td>TIMER_SCHEDULED</td><td>已创建一个定时作业，并预计在未来时间点执行。</td></tr><tr><td>TIMER_FIRED</td><td>定时器已经触发。</td></tr><tr><td>JOB_CANCELED</td><td>作业已经取消。该作业包含在本事件里。作业会由于API调用取消，任务完成导致关联的边界定时器取消，也会由于新流程定义的部署而取消。</td></tr><tr><td>ACTIVITY_STARTED</td><td>节点开始执行</td></tr><tr><td>ACTIVITY_COMPLETED</td><td>节点成功完成</td></tr><tr><td>ACTIVITY_CANCELLED</td><td>节点将要取消。节点的取消有三个原因（MessageEventSubscriptionEntity,  SignalEventSubscriptionEntity, TimerEntity）。</td></tr><tr><td>ACTIVITY_SIGNALED</td><td>节点收到了一个信号</td></tr><tr><td>ACTIVITY_MESSAGE_RECEIVED</td><td>节点收到了一个消息。事件在节点接收消息前分发。节点接收消息后，会为该节点分发  ACTIVITY_SIGNAL 或 ACTIVITY_STARTED  事件，取决于其类型（边界事件，或子流程启动事件）。</td></tr><tr><td>ACTIVITY_MESSAGE_WAITING</td><td>一个节点已经创建了一个消息事件订阅，并正在等待接收消息。</td></tr><tr><td>ACTIVITY_MESSAGE_CANCELLED</td><td>一个节点已经取消了一个消息事件订阅，因此接收这个消息不会再触发该节点。</td></tr><tr><td>ACTIVITY_ERROR_RECEIVED</td><td>节点收到了错误事件。在节点实际处理错误前分发。该事件的activityId为处理错误的节点。如果错误成功传递，后续会为节点发送  ACTIVITY_SIGNALLED 或 ACTIVITY_COMPLETE 消息。</td></tr><tr><td>UNCAUGHT_BPMN_ERROR</td><td>抛出了未捕获的BPMN错误。流程没有该错误的处理器。该事件的activityId为空。</td></tr><tr><td>ACTIVITY_COMPENSATE</td><td>节点将要被补偿(compensate)。该事件包含将要执行补偿的节点id。</td></tr><tr><td>MULTI_INSTANCE_ACTIVITY_STARTED</td><td>多实例节点开始执行</td></tr><tr><td>MULTI_INSTANCE_ACTIVITY_COMPLETED</td><td>多实例节点成功完成</td></tr><tr><td>MULTI_INSTANCE_ACTIVITY_CANCELLED</td><td>多实例节点将要取消。多实例节点的取消有三个原因（MessageEventSubscriptionEntity,  SignalEventSubscriptionEntity, TimerEntity）。</td></tr><tr><td>VARIABLE_CREATED</td><td>流程变量已经创建。本事件包含变量名、取值，及关联的执行和任务（若有）。</td></tr><tr><td>VARIABLE_UPDATED</td><td>变量已经更新。本事件包含变量名、取值，及关联的执行和任务（若有）。</td></tr><tr><td>VARIABLE_DELETED</td><td>变量已经删除。本事件包含变量名、最后取值，及关联的执行和任务（若有）。</td></tr><tr><td>TASK_ASSIGNED</td><td>任务已经分派给了用户。该任务包含在本事件里。</td></tr><tr><td>TASK_CREATED</td><td>任务已经创建。本事件在  ENTITY_CREATE  事件之后分发。若该任务是流程的一部分，本事件会在任务监听器执行前触发。</td></tr><tr><td>TASK_COMPLETED</td><td>任务已经完成。本事件在  ENTITY_DELETE  事件前分发。若该任务是流程的一部分，本事件会在流程前进之前触发，并且会跟随一个 ACTIVITY_COMPLETE 事件，指向代表该任务的节点。</td></tr><tr><td>PROCESS_CREATED</td><td>流程实例已经创建。已经设置所有的基础参数，但还未设置变量。</td></tr><tr><td>PROCESS_STARTED</td><td>流程实例已经启动。在启动之前创建的流程时分发。PROCESS_STARTED事件在相关的ENTITY_INITIALIZED事件，以及设置变量之后分发。</td></tr><tr><td>PROCESS_COMPLETED</td><td>流程实例已经完成。在最后一个节点的  ACTIVITY_COMPLETED 事件后分发。当流程实例没有任何路径可以继续时，流程结束。</td></tr><tr><td>PROCESS_COMPLETED_WITH_TERMINATE_END_EVENT</td><td>流程已经到达终止结束事件(terminate  end event)并结束。</td></tr><tr><td>PROCESS_CANCELLED</td><td>流程已经被取消。在流程实例从运行时中删除前分发。流程实例由API调用RuntimeService.deleteProcessInstance取消。</td></tr><tr><td>MEMBERSHIP_CREATED</td><td>用户已经加入组。本事件包含了相关的用户和组的id。</td></tr><tr><td>MEMBERSHIP_DELETED</td><td>用户已经从组中移出。本事件包含了相关的用户和组的id。</td></tr><tr><td>MEMBERSHIPS_DELETED</td><td>组的所有用户将被移出。本事件在用户移出前抛出，因此关联关系仍然可以访问。因为性能原因，不会再为每个被移出的用户抛出  MEMBERSHIP_DELETED 事件。</td></tr></tbody></table><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>在bpmn20.xml的process节点下面添加全局监听</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">process</span> <span class="attr">id</span>=<span class="string">&quot;aacopy&quot;</span> <span class="attr">name</span>=<span class="string">&quot;aacopy&quot;</span> <span class="attr">isExecutable</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">extensionElements</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">flowable:eventListener</span> <span class="attr">delegateExpression</span>=<span class="string">&quot;$&#123;myEventListener&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">extensionElements</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">startEvent</span> <span class="attr">id</span>=<span class="string">&quot;startEvent1&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">process</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写java代码，这里监听了任务的创建，任务审批完成，任务回退事件，用于常见工作流业务需求中的，审批，驳回等操作，可以在此操作中修改流程变量，调用业务系统接口，或者给消息队列发送消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyEventListener</span> <span class="keyword">implements</span> <span class="title">FlowableEventListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEvent</span><span class="params">(FlowableEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(FlowableEngineEventType.TASK_CREATED.equals(event.getType())) &#123; <span class="comment">//任务创建</span></span><br><span class="line">            TaskEntity taskEntity = (TaskEntity) ((org.flowable.common.engine.impl.event.FlowableEntityEventImpl) event).getEntity();</span><br><span class="line">            <span class="comment">// TODO 通过taskEntity获取任务相关数据，执行业务逻辑</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(FlowableEngineEventType.TASK_COMPLETED.equals(event.getType())) &#123; <span class="comment">//任务完成</span></span><br><span class="line">            TaskEntity taskEntity = (TaskEntity) ((org.flowable.engine.delegate.event.impl.FlowableEntityEventImpl) event).getEntity();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(FlowableEngineEventType.ACTIVITY_CANCELLED.equals(event.getType())) &#123; <span class="comment">//处理节点取消事件（驳回，撤回）</span></span><br><span class="line">            DelegateExecution delegateExecution = ((FlowableActivityCancelledEventImpl) event).getExecution();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redisson-HelloWorld</title>
      <link href="/Redis/Redisson-HelloWorld/"/>
      <url>/Redis/Redisson-HelloWorld/</url>
      
        <content type="html"><![CDATA[<p>Redisson是架设在Redis基础上的一个Java驻内存数据网格</p><p>中文文档：<a href="https://github.com/redisson/redisson/wiki/%E7%9B%AE%E5%BD%95">https://github.com/redisson/redisson/wiki/%E7%9B%AE%E5%BD%95</a></p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>pom添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.16.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本地启动一个默认配置的redis客户端</p><p>编写一个controller测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedissonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedissonClient redissonClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/redisson&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">redissonTest</span><span class="params">(String xx)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        System.out.println(xx);</span><br><span class="line">        RLock rLock = redissonClient.getLock(<span class="string">&quot;aacopy&quot;</span>);</span><br><span class="line">        rLock.lock();</span><br><span class="line">        System.out.println(xx);</span><br><span class="line">        Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">        rLock.unlock();</span><br><span class="line">        System.out.println(xx);</span><br><span class="line">        <span class="keyword">return</span> xx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用浏览器访问地址，10秒内传入不同的参数，查看后台打印的顺序</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> Redisson </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Groovy-规则引擎</title>
      <link href="/Groovy/Groovy-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/"/>
      <url>/Groovy/Groovy-%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在java代码中通过groovy脚本语言实现简单的规则，用于结合flowable使用，这里规则引擎简单返回true或者false，表达式是通过参数传过来的，如需从数据库查询规则表达式，可以传个id，从数据库查出来，加载到表达式中，通过id作为缓存key，分布式缓存的问题，可以简单通过变更规则表达式后，同时变更规则版本，重写加载</p><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ben-manes.caffeine<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>caffeine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.crypto.SecureUtil;</span><br><span class="line"><span class="keyword">import</span> com.github.benmanes.caffeine.cache.Cache;</span><br><span class="line"><span class="keyword">import</span> com.github.benmanes.caffeine.cache.Caffeine;</span><br><span class="line"><span class="keyword">import</span> groovy.text.SimpleTemplateEngine;</span><br><span class="line"><span class="keyword">import</span> groovy.text.Template;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.StringWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * groovy脚本实现规则引擎</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/10/17 18:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component(&quot;groovyRuleEngineService&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GroovyRuleEngineServiceImpl</span> <span class="keyword">implements</span> <span class="title">RuleEngineService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleTemplateEngine ENGINE = <span class="keyword">new</span> SimpleTemplateEngine();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//由于创建Template性能消耗大,且会重复生成class，导致OOM,所以将ruleId对于的对象放在本地缓存中</span></span><br><span class="line">    <span class="keyword">private</span> Cache&lt;String, Template&gt; scriptTemplateCache = Caffeine.newBuilder()</span><br><span class="line">            <span class="comment">// 设置最后一次写入或访问后经过固定时间过期</span></span><br><span class="line">            .expireAfterAccess(<span class="number">365</span>, TimeUnit.DAYS)</span><br><span class="line">            <span class="comment">// 初始的缓存空间大小</span></span><br><span class="line">            .initialCapacity(<span class="number">100</span>)</span><br><span class="line">            <span class="comment">// 缓存的最大条数</span></span><br><span class="line">            .maximumSize(<span class="number">5000</span>)</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">executeRule</span><span class="params">(String ruleExpression, Map&lt;String, Object&gt; param)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;执行规则：ruleExpression=&#123;&#125;, param=&#123;&#125;&quot;</span>, ruleExpression, param);</span><br><span class="line">        Template template = getTemplate(ruleExpression);</span><br><span class="line">        <span class="keyword">try</span>(Writer writer = <span class="keyword">new</span> StringWriter()) &#123;</span><br><span class="line">            <span class="comment">//执行完这句后，groovy会在map中塞一个out的key，flowable在设置变量的时候无法解析out，导致报错，所有要么换个map（更保险），要么执行后，把out删掉</span></span><br><span class="line">            template.make(param).writeTo(writer);</span><br><span class="line">            Boolean result = Boolean.valueOf(writer.toString());</span><br><span class="line">            log.info(<span class="string">&quot;规则执行结果：ruleId=&#123;&#125;, result=&#123;&#125;&quot;</span>, ruleExpression, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据规则id获取规则引擎中的执行库对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ruleExpression</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> groovy.text.Template</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Iseven.yang</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/10/17 19:24</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Template <span class="title">getTemplate</span><span class="params">(String ruleExpression)</span> </span>&#123;</span><br><span class="line">        String key = SecureUtil.md5(ruleExpression);</span><br><span class="line">        <span class="comment">//查看缓存是否存在Template</span></span><br><span class="line">        Template template = scriptTemplateCache.getIfPresent(key);</span><br><span class="line">        <span class="keyword">if</span>(template == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                template = ENGINE.createTemplate(<span class="string">&quot;$&#123;&quot;</span> + ruleExpression + <span class="string">&quot; ? true : false&#125;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">&quot;创建新规则缓存模板成功，key=&#123;&#125;, expression=&#123;&#125;&quot;</span>, key, ruleExpression);</span><br><span class="line">            scriptTemplateCache.put(key, template);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Groovy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Groovy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-DDL</title>
      <link href="/Mysql/Mysql-DDL/"/>
      <url>/Mysql/Mysql-DDL/</url>
      
        <content type="html"><![CDATA[<p>DDL(Data Definition Language) 数据定义语言,eg:建库，建表</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><ul><li>创建数据库 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database dbName;</span><br></pre></td></tr></table></figure><ul><li>查看当前所在库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> database();</span><br></pre></td></tr></table></figure><ul><li>使用具体库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use dbName; </span><br></pre></td></tr></table></figure><ul><li>判断是否存在，如果不存在则创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> dbName;</span><br></pre></td></tr></table></figure><ul><li>创建数据库并指定字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database dbName <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8; </span><br></pre></td></tr></table></figure><ul><li>查看字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database dbName;</span><br></pre></td></tr></table></figure><ul><li>查看当前mysql使用的字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;character%&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="mysql常见数据类型"><a href="#mysql常见数据类型" class="headerlink" title="mysql常见数据类型"></a>mysql常见数据类型</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span><span class="number">1</span><span class="operator">&gt;</span>整数型</span><br><span class="line">     类型      大小      范围（有符号）               范围（无符号unsigned）    用途</span><br><span class="line">     TINYINT   <span class="number">1</span> 字节    (<span class="number">-128</span>，<span class="number">127</span>)                (<span class="number">0</span>，<span class="number">255</span>)                 小整数值</span><br><span class="line">     <span class="type">SMALLINT</span>  <span class="number">2</span> 字节    (<span class="number">-32768</span>，<span class="number">32767</span>)            (<span class="number">0</span>，<span class="number">65535</span>)               大整数值</span><br><span class="line">     MEDIUMINT <span class="number">3</span> 字节    (<span class="number">-8388608</span>，<span class="number">8388607</span>)        (<span class="number">0</span>，<span class="number">16777215</span>)            大整数值</span><br><span class="line">     <span class="type">INT</span>       <span class="number">4</span> 字节    (<span class="number">-2147483648</span>，<span class="number">2147483647</span>)  (<span class="number">0</span>，<span class="number">4294967295</span>)          大整数值</span><br><span class="line">     <span class="type">BIGINT</span>    <span class="number">8</span> 字节     （）                       (<span class="number">0</span>，<span class="number">2</span>的<span class="number">64</span>次方减<span class="number">1</span>)        极大整数值</span><br><span class="line"><span class="operator">&lt;</span><span class="number">2</span><span class="operator">&gt;</span>浮点型</span><br><span class="line"> <span class="type">FLOAT</span>(m,d）  <span class="number">4</span> 字节    单精度浮点型  备注：m代表总个数，d代表小数位个数</span><br><span class="line"> <span class="keyword">DOUBLE</span>(m,d） <span class="number">8</span> 字节    双精度浮点型  备注：m代表总个数，d代表小数位个数</span><br><span class="line"> </span><br><span class="line"><span class="operator">&lt;</span><span class="number">3</span><span class="operator">&gt;</span>定点型</span><br><span class="line"> <span class="type">DECIMAL</span>(m,d）    依赖于M和D的值    备注：m代表总个数，d代表小数位个数</span><br><span class="line"> </span><br><span class="line"><span class="operator">&lt;</span><span class="number">4</span><span class="operator">&gt;</span>字符串类型 </span><br><span class="line"> 类型          大小              用途</span><br><span class="line"> <span class="type">CHAR</span>          <span class="number">0</span><span class="number">-255</span>字节         定长字符串</span><br><span class="line"> <span class="type">VARCHAR</span>       <span class="number">0</span><span class="number">-65535</span>字节       变长字符串</span><br><span class="line"> TINYTEXT      <span class="number">0</span><span class="number">-255</span>字节         短文本字符串</span><br><span class="line"> TEXT          <span class="number">0</span><span class="number">-65535</span>字节       长文本数据</span><br><span class="line"> MEDIUMTEXT    <span class="number">0</span><span class="number">-16777215</span>字节    中等长度文本数据</span><br><span class="line"> LONGTEXT      <span class="number">0</span><span class="number">-4294967295</span>字节  极大文本数据</span><br><span class="line"> </span><br><span class="line"> <span class="type">char</span>的优缺点：存取速度比<span class="type">varchar</span>更快，但是比<span class="type">varchar</span>更占用空间</span><br><span class="line"> <span class="type">varchar</span>的优缺点：比<span class="type">char</span>省空间。但是存取速度没有<span class="type">char</span>快</span><br><span class="line"> </span><br><span class="line"><span class="operator">&lt;</span><span class="number">5</span><span class="operator">&gt;</span>时间型</span><br><span class="line"> 数据类型    字节数            格式                    备注</span><br><span class="line"> <span class="type">date</span>        <span class="number">3</span>                yyyy<span class="operator">-</span>MM<span class="operator">-</span>dd              存储日期值</span><br><span class="line"> <span class="type">time</span>        <span class="number">3</span>                HH:mm:ss                存储时分秒</span><br><span class="line"> <span class="keyword">year</span>        <span class="number">1</span>                yyyy                    存储年</span><br><span class="line"> datetime    <span class="number">8</span>                yyyy<span class="operator">-</span>MM<span class="operator">-</span>dd HH:mm:ss     存储日期<span class="operator">+</span>时间</span><br><span class="line"> <span class="type">timestamp</span>   <span class="number">4</span>                yyyy<span class="operator">-</span>MM<span class="operator">-</span>dd HH:mm:ss     存储日期<span class="operator">+</span>时间</span><br></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (</span><br><span class="line">                  字段名<span class="number">1</span> 字段类型<span class="number">1</span> 约束条件<span class="number">1</span> 说明<span class="number">1</span>,</span><br><span class="line">                  字段名<span class="number">2</span> 字段类型<span class="number">2</span> 约束条件<span class="number">2</span> 说明<span class="number">2</span>,</span><br><span class="line">                  字段名<span class="number">3</span> 字段类型<span class="number">3</span> 约束条件<span class="number">3</span> 说明<span class="number">3</span></span><br><span class="line">                  );</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表名 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 旧表名 <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>;(注意：建议这种创建表的方式用于日常测试，索引复制不过来)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表名 <span class="keyword">like</span> 旧表名;</span><br></pre></td></tr></table></figure><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">comment         <span class="comment">----说明解释</span></span><br><span class="line"><span class="keyword">not</span> <span class="keyword">null</span>        <span class="comment">----不为空</span></span><br><span class="line"><span class="keyword">default</span>         <span class="comment">----默认值</span></span><br><span class="line">unsigned        <span class="comment">----无符号（即正数）</span></span><br><span class="line">auto_increment  <span class="comment">----自增</span></span><br><span class="line">zerofill        <span class="comment">----自动填充</span></span><br><span class="line"><span class="keyword">unique</span> key      <span class="comment">----唯一值</span></span><br></pre></td></tr></table></figure><h3 id="查看表的基本结构信息"><a href="#查看表的基本结构信息" class="headerlink" title="查看表的基本结构信息"></a>查看表的基本结构信息</h3><ul><li>查看数据库中的所有表：show tables；</li><li>查看表结构：desc 表名;</li><li>查看创建表的sql语句：show create table 表名;</li><li>\G :有结束sql语句的作用，还有把显示的数据纵向旋转90度</li><li>\g :有结束sql语句的作用</li></ul><h3 id="表结构维护与删除"><a href="#表结构维护与删除" class="headerlink" title="表结构维护与删除"></a>表结构维护与删除</h3><ul><li>修改表名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名;</span><br></pre></td></tr></table></figure><ul><li>添加列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">给表添加一列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 类型;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> addr <span class="type">varchar</span>(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">add</span> 列名 类型 comment <span class="string">&#x27;说明&#x27;</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> famliy <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;家庭&#x27;</span>;</span><br><span class="line"></span><br><span class="line">给表最前面添加一列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 类型 <span class="keyword">first</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> job <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line">给表某个字段后添加一列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 类型 after 字段名;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> servnumber <span class="type">int</span>(<span class="number">11</span>) after id;</span><br><span class="line"></span><br><span class="line">注意：没有给表某个字段前添加一列的说法。</span><br></pre></td></tr></table></figure><ul><li>修改列类型</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 列名 新类型;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> modify servnumber <span class="type">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>修改列名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 旧列名 新列名 类型;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> change servnumber telephone <span class="type">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>删除列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">drop</span> famliy;</span><br></pre></td></tr></table></figure><ul><li>修改字符集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="type">character</span> <span class="keyword">set</span> 字符集;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="type">character</span>  <span class="keyword">set</span> GBK;</span><br></pre></td></tr></table></figure><ul><li>mysql表的删除</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名；</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line">看表是否存在，若存在则删除表：<span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> 表名;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span>  if <span class="keyword">exists</span> teacher;</span><br></pre></td></tr></table></figure><ul><li>查看所有的表信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-DCL</title>
      <link href="/Mysql/Mysql-DCL/"/>
      <url>/Mysql/Mysql-DCL/</url>
      
        <content type="html"><![CDATA[<p>设置或者更改数据库用户或角色权限的语句</p><h2 id="限制root用户指定ip登录"><a href="#限制root用户指定ip登录" class="headerlink" title="限制root用户指定ip登录"></a>限制root用户指定ip登录</h2><ul><li>查看root用户可以在哪台机器登录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改mysql库里边的user表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="keyword">set</span> host<span class="operator">=</span><span class="string">&#x27;localhost&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>刷新权限</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h2><ul><li>修改用户密码分三种方法：</li></ul><ol><li><p>第一种：set password for 用户@ip = password(‘密码’);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> root<span class="variable">@localhost</span> <span class="operator">=</span> password(<span class="string">&#x27;root&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>第二种：mysqladmin -u用户 -p旧密码 password 新密码;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin <span class="operator">-</span>urootmysqladmin <span class="operator">-</span>uroot <span class="operator">-</span>proot password;</span><br></pre></td></tr></table></figure></li><li><p>第三种：update mysql.user set authentication_string=password(‘密码’) where user=’用户’ and host=’ip’;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="keyword">set</span> authentication_string<span class="operator">=</span>password(<span class="string">&#x27;root&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> host<span class="operator">=</span><span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ol><ul><li>忘记密码:</li></ul><ol><li>第一步：修改配置文件my.cnf (默认在/etc/my.cnf)，在[mysqld]下面加上 skip-grant-tables （跳过权限的意思）</li><li>第二步：重启mysql服务</li><li>第三步：mysql -uroot -p 无需密码登录进入</li><li>第四步：修改密码</li></ol><h2 id="新建删除用户并限制IP登录"><a href="#新建删除用户并限制IP登录" class="headerlink" title="新建删除用户并限制IP登录"></a>新建删除用户并限制IP登录</h2><ul><li>创建用户的语法：create user ‘username‘@’host’ identified by ‘password’;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">username：你将创建的用户名</span><br><span class="line"></span><br><span class="line">host：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以从任意远程主机    登陆，可以使用通配符<span class="operator">%</span></span><br><span class="line"></span><br><span class="line">password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器</span><br></pre></td></tr></table></figure><ul><li>创建用户语法：</li></ul><p>创建一个pig用户，并指定登录密码：123456，可以在任何一台远程主机都可以登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><p>创建一个pig用户，并指定登录密码：为空，指定在120网段的机器登录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;120.%.%.%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>查看权限：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;pig&#x27;</span>\G</span><br><span class="line"> mysql<span class="operator">&gt;</span> <span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"> <span class="operator">|</span> Grants <span class="keyword">for</span> pig@<span class="operator">%</span>                <span class="operator">|</span></span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"> <span class="operator">|</span> <span class="keyword">GRANT</span> USAGE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">|</span></span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------+</span></span><br><span class="line"> USAGE：无权限的意思</span><br><span class="line"> mysql<span class="operator">&gt;</span> <span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"> <span class="operator">|</span> Grants <span class="keyword">for</span> root<span class="variable">@localhost</span>                                           <span class="operator">|</span></span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"> <span class="operator">|</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION <span class="operator">|</span></span><br><span class="line"> <span class="operator">+</span><span class="comment">---------------------------------------------------------------------+</span></span><br><span class="line"> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION:表示这个用户拥有<span class="keyword">grant</span>权限，即可以对其他用户授权</span><br></pre></td></tr></table></figure><ul><li>删除用户语法：drop user ‘username‘@’host’;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;pig&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="限制用户对库表的增删改查权限"><a href="#限制用户对库表的增删改查权限" class="headerlink" title="限制用户对库表的增删改查权限"></a>限制用户对库表的增删改查权限</h2><ul><li>授权语法：grant 权限1,权限2….. on 数据库对象 to ‘用户’</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限<span class="number">1</span>,权限<span class="number">2.</span>.... <span class="keyword">on</span> 数据库对象 <span class="keyword">to</span> <span class="string">&#x27;用户&#x27;</span>@<span class="string">&#x27;host&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>all privileges:代表所有权限</li><li><em>.</em> :代表所有库所有表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">对现有用户进行授权：对现有用户pig授予所有库所有表所有权限。</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span>  <span class="keyword">to</span> <span class="string">&#x27;pig&#x27;</span>;</span><br><span class="line">对没有的用户进行授权：创建一个新用户dog授予XD库的所有权限，登录密码<span class="number">123456</span>，任何一台主机登录</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> XD.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;dog&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">对没有的用户进行授权：创建一个新用户cat授予XD库的employee表 查与修改权限，登录密码<span class="number">123456</span>，任何一台主机登录</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,update <span class="keyword">on</span> XD.employee <span class="keyword">to</span> <span class="string">&#x27;cat&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">对没有的用户进行授权：对用户cat授予XD库的employee表<span class="keyword">insert</span> 权限，登录密码<span class="number">123456</span>，任何一台主机登录</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">insert</span> <span class="keyword">on</span> XD.employee <span class="keyword">to</span> <span class="string">&#x27;cat&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>回收语法：revoke 权限1,权限2….. on 数据库对象 from ‘用户‘@’host’;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">回收pig用户的所有权限（注意：并没有回收它的登录权限）</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span>  <span class="keyword">from</span> <span class="string">&#x27;pig&#x27;</span> @ <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">回收pig用户的所有权限（并回收它的登录权限）</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;pig&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">回收cat用户对XD库的employee的查与修改权限</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span>,update <span class="keyword">on</span> XD.employee <span class="keyword">from</span> <span class="string">&#x27;cat&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-自定义权限</title>
      <link href="/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90/"/>
      <url>/Flowable/Flowable-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在实际项目使用flowable时，一般公司都有自己的人员权限系统，并不会直接使用flowable的idm模块，本节内容记录，如何让flowable调用自己的权限系统</p><h2 id="idm基本操作"><a href="#idm基本操作" class="headerlink" title="idm基本操作"></a>idm基本操作</h2><h3 id="核心类：IdentityService"><a href="#核心类：IdentityService" class="headerlink" title="核心类：IdentityService"></a>核心类：IdentityService</h3><p>通过该类可以获取，在流程的整个生命周期中的相关人，和组信息</p><p>例如：</p><p>获取可提交流程的人：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; authorizedUsers = identityService.getPotentialStarterUsers(processDefId);</span><br></pre></td></tr></table></figure><p>获取组内的人：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = identityService.createUserQuery().memberOfGroups(groupIds).list();</span><br></pre></td></tr></table></figure><p>两个核心的方法，createUserQuery()和createUserQuery()，用来构建获取人和组的方法</p><h3 id="实现类IdmIdentityServiceImpl"><a href="#实现类IdmIdentityServiceImpl" class="headerlink" title="实现类IdmIdentityServiceImpl"></a>实现类IdmIdentityServiceImpl</h3><p>上面人员权限认证服务的默认实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdmIdentityServiceImpl</span> <span class="keyword">extends</span> <span class="title">CommonEngineServiceImpl</span>&lt;<span class="title">IdmEngineConfiguration</span>&gt; <span class="keyword">implements</span> <span class="title">IdmIdentityService</span></span></span><br></pre></td></tr></table></figure><p>查看两个核心方法createUserQuery()和createUserQuery()</p><p>如果自定义idm，需要实现UserQuery，和 GroupQuery两个接口</p><p>官方默认的实现类是UserQueryImpl，和GroupQueryImpl</p><p>为了实现简单，只需要修改自定义业务用的方法，所以我们可以直接继承这两个类就可以</p><h2 id="代码改造"><a href="#代码改造" class="headerlink" title="代码改造"></a>代码改造</h2><h3 id="实现UserQuery"><a href="#实现UserQuery" class="headerlink" title="实现UserQuery"></a>实现UserQuery</h3><p>主要重写executeList方法。</p><p>该方法是查询数据的核心方法，在这个方法里，写自定义获取用户的代码就可以了</p><p>getId()获取当前查询里的用户id。</p><p>getIds()获取当前查询里的用户id列表。</p><p>getGroupId()获取当前查询里的组id。</p><p>getGroupIds()获取当前查询里的组id列表，</p><p>为什么要用这些数据做判断，是因为在构建查询的时候，代码里编写了创建查询的指令，如果存在指令，对应的get方法里就会有我们传入的值，例如：</p><p>获取组内的人：identityService.createUserQuery().memberOfGroups(groupIds).list();</p><p>.memberOfGroups(groupIds)这个指令就会使getGroupIds()时获取到传入的groupIds。</p><p>具体实例代码实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集成自己的用户实现方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/1 10:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUserQueryImpl</span> <span class="keyword">extends</span> <span class="title">UserQueryImpl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">executeCount</span><span class="params">(CommandContext commandContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> executeList(commandContext).size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">executeList</span><span class="params">(CommandContext commandContext)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始获取人员信息***********************************&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(getId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            users.add(findById(getId()));</span><br><span class="line">            <span class="keyword">return</span> users;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getIds() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> findByIds(getIds());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getGroupId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> findByGroup(getGroupId());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getGroupIds() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> findByGroups(getGroupIds());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, List&lt;Long&gt;&gt; SHIP = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        SHIP.put(<span class="string">&quot;aaa&quot;</span>, Arrays.asList( <span class="number">9L</span>));</span><br><span class="line">        SHIP.put(<span class="string">&quot;bbb&quot;</span>, Arrays.asList(<span class="number">10L</span>, <span class="number">11L</span>, <span class="number">12L</span>));</span><br><span class="line">        SHIP.put(<span class="string">&quot;ccc&quot;</span>, Arrays.asList(<span class="number">11L</span>));</span><br><span class="line">        SHIP.put(<span class="string">&quot;ddd&quot;</span>, Arrays.asList(<span class="number">13L</span>));</span><br><span class="line">        SHIP.put(<span class="string">&quot;eee&quot;</span>, Arrays.asList(<span class="number">14L</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QtUser <span class="title">getQtUser</span><span class="params">(String userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(USERS.containsKey(Long.valueOf(userId))) &#123;</span><br><span class="line">            QtUser user = <span class="keyword">new</span> QtUser();</span><br><span class="line">            user.setId(Long.valueOf(userId));</span><br><span class="line">            user.setName(USERS.get(Long.valueOf(userId)));</span><br><span class="line">            user.setTenantId(<span class="number">1L</span>);</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Long, String&gt; USERS = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        USERS.put(<span class="number">8L</span>, <span class="string">&quot;ie&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">9L</span>, <span class="string">&quot;he&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">10L</span>, <span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">11L</span>, <span class="string">&quot;cat&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">12L</span>, <span class="string">&quot;java&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">13L</span>, <span class="string">&quot;python&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">111L</span>, <span class="string">&quot;li&quot;</span>);</span><br><span class="line">        USERS.put(<span class="number">222L</span>, <span class="string">&quot;qa&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> User <span class="title">findById</span><span class="params">(<span class="keyword">final</span> String userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!USERS.containsKey(Long.valueOf(userId))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        UserEntity userEntity = <span class="keyword">new</span> UserEntityImpl();</span><br><span class="line">        userEntity.setId(userId);</span><br><span class="line">        userEntity.setDisplayName(USERS.get(Long.valueOf(userId)));</span><br><span class="line">        userEntity.setTenantId(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> userEntity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;User&gt; <span class="title">findByIds</span><span class="params">(List&lt;String&gt; userIds)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userIds.stream().map(<span class="keyword">this</span>::findById).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;User&gt; <span class="title">findByGroup</span><span class="params">(<span class="keyword">final</span> String groupId)</span> </span>&#123;</span><br><span class="line">        List&lt;Long&gt; userIds = SHIP.get(groupId);</span><br><span class="line">        <span class="keyword">if</span>(CollUtil.isNotEmpty(userIds)) &#123;</span><br><span class="line">            <span class="keyword">return</span> findByIds(userIds.stream().map(String::valueOf).collect(Collectors.toList()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;User&gt; <span class="title">findByGroups</span><span class="params">(List&lt;String&gt; groupIds)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        groupIds.forEach(g -&gt; users.addAll(findByGroup(g)));</span><br><span class="line">        <span class="keyword">return</span> users;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现GroupQuery"><a href="#实现GroupQuery" class="headerlink" title="实现GroupQuery"></a>实现GroupQuery</h3><p>和上面一样，也是主要实现executeList方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/1 10:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyGroupQueryImpl</span> <span class="keyword">extends</span> <span class="title">GroupQueryImpl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">executeCount</span><span class="params">(CommandContext commandContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> executeList(commandContext).size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Group&gt; <span class="title">executeList</span><span class="params">(CommandContext commandContext)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始获取组信息***********************************&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (getUserId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> findGroupsByUser(getUserId());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            List&lt;Group&gt; groups = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            groups.add(findGroupById(getId()));</span><br><span class="line">            <span class="keyword">return</span> groups;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getIds() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> findGroupsByIds(getIds());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Long, List&lt;String&gt;&gt; SHIP = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        SHIP.put(<span class="number">8L</span>, Arrays.asList(<span class="string">&quot;aaa&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">9L</span>, Arrays.asList(<span class="string">&quot;aaa&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">10L</span>, Arrays.asList(<span class="string">&quot;bbb&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">11L</span>, Arrays.asList(<span class="string">&quot;bbb&quot;</span>,<span class="string">&quot;ccc&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">12L</span>, Arrays.asList(<span class="string">&quot;bbb&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">13L</span>, Arrays.asList(<span class="string">&quot;ddd&quot;</span>));</span><br><span class="line">        SHIP.put(<span class="number">14L</span>, Arrays.asList(<span class="string">&quot;eee&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, String&gt; GROUPS = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        GROUPS.put(<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;权限1&quot;</span>);</span><br><span class="line">        GROUPS.put(<span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;权限2&quot;</span>);</span><br><span class="line">        GROUPS.put(<span class="string">&quot;ccc&quot;</span>, <span class="string">&quot;权限3&quot;</span>);</span><br><span class="line">        GROUPS.put(<span class="string">&quot;ddd&quot;</span>, <span class="string">&quot;权限4&quot;</span>);</span><br><span class="line">        GROUPS.put(<span class="string">&quot;eee&quot;</span>, <span class="string">&quot;权限5&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Group&gt; <span class="title">findGroupsByUser</span><span class="params">(String userId)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; strings = SHIP.get(Long.valueOf(userId));</span><br><span class="line">        <span class="keyword">return</span> strings.stream().map(g -&gt; &#123;</span><br><span class="line">            Group group = <span class="keyword">new</span> GroupEntityImpl();</span><br><span class="line">            group.setId(g);</span><br><span class="line">            group.setName(GROUPS.get(g));</span><br><span class="line">            <span class="keyword">return</span> group;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Group <span class="title">findGroupById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!GROUPS.containsKey(id)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Group group = <span class="keyword">new</span> GroupEntityImpl();</span><br><span class="line">        group.setId(id);</span><br><span class="line">        group.setName(GROUPS.get(id));</span><br><span class="line">        <span class="keyword">return</span> group;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;Group&gt; <span class="title">findGroupsByIds</span><span class="params">(List&lt;String&gt; ids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ids.stream().map(<span class="keyword">this</span>::findGroupById).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重写IdmIdentityServiceImpl"><a href="#重写IdmIdentityServiceImpl" class="headerlink" title="重写IdmIdentityServiceImpl"></a>重写IdmIdentityServiceImpl</h3><p>IdmIdentityServiceImpl为构建查询的默认实现类，需要重写一个类，使idm调用自定义的MyUserQueryImpl和MyGroupQueryImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyIdmIdentityServiceImpl</span> <span class="keyword">extends</span> <span class="title">IdmIdentityServiceImpl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserQuery <span class="title">createUserQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyUserQueryImpl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GroupQuery <span class="title">createGroupQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyGroupQueryImpl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使flowable加载自定义实现的Idm"><a href="#使flowable加载自定义实现的Idm" class="headerlink" title="使flowable加载自定义实现的Idm"></a>使flowable加载自定义实现的Idm</h3><p>在配置类里加入bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> EngineConfigurationConfigurer&lt;SpringIdmEngineConfiguration&gt; <span class="title">idmEngineConfigurationConfigurer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> idmEngineConfiguration -&gt; idmEngineConfiguration.setIdmIdentityService(<span class="keyword">new</span> MyIdmIdentityServiceImpl());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>至此，自定义idm模块改造完成，重启服务，测试一下</p>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flowable-HelloWorld</title>
      <link href="/Flowable/Flowable-HelloWorld/"/>
      <url>/Flowable/Flowable-HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>轻量级工作流引擎，使用Java编写，Flowable是Activiti的fork</p><p>github地址：<a href="https://github.com/flowable/flowable-engine">https://github.com/flowable/flowable-engine</a></p><p>开源文档：<a href="https://wwv.flowable.com/open-source/docs/bpmn/ch02-GettingStarted/">https://wwv.flowable.com/open-source/docs/bpmn/ch02-GettingStarted/</a></p><p>6.5.0版本中文文档：<a href="https://jeesite.gitee.io/front/flowable/6.5.0/bpmn/index.html">https://jeesite.gitee.io/front/flowable/6.5.0/bpmn/index.html</a></p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>Gitee地址：<a href="https://gitee.com/aacopy/flowable-learn.git">https://gitee.com/aacopy/flowable-learn.git</a></p><h3 id="创建一个spring-boot项目"><a href="#创建一个spring-boot项目" class="headerlink" title="创建一个spring boot项目"></a>创建一个spring boot项目</h3><p>需要加入 spring web，</p><p>本示例，spring boot 2.6.1，flowable 6.7.1， mysql 5.7</p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>新建一个mysql数据库，名称为flowable_learn</p><h3 id="编写示例"><a href="#编写示例" class="headerlink" title="编写示例"></a>编写示例</h3><ol><li>加入maven依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.flowable<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flowable-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在application.properties新增配置项</li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/flowable-learn</span></span><br><span class="line"></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/flowable_learn?characterEncoding=UTF-8</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p><strong>此处有坑：</strong></p><p>如果启动服务，报错找不到flowable的表</p><p>​    原因：使用root用户登录，程序检测到该用户下的其他数据库中有flowable相关的表，就不再创建表了，但是在使用的时候又找不到表。</p><p>​    解决：在url后面追加<code>&amp;nullCatalogMeansCurrent=true</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/flowable_learn?characterEncoding=UTF-8&amp;nullCatalogMeansCurrent=true</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在resources文件夹下新建文件夹<em>processes</em></li><li>创建一个流程文件<em>hello-world.bpmn20.xml</em>，复制以下内容到文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">definitions</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.omg.org/spec/BPMN/20100524/MODEL&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:flowable</span>=<span class="string">&quot;http://flowable.org/bpmn&quot;</span> <span class="attr">xmlns:bpmndi</span>=<span class="string">&quot;http://www.omg.org/spec/BPMN/20100524/DI&quot;</span> <span class="attr">xmlns:omgdc</span>=<span class="string">&quot;http://www.omg.org/spec/DD/20100524/DC&quot;</span> <span class="attr">xmlns:omgdi</span>=<span class="string">&quot;http://www.omg.org/spec/DD/20100524/DI&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">targetNamespace</span>=<span class="string">&quot;http://flowable.org/test&quot;</span> <span class="attr">exporter</span>=<span class="string">&quot;Flowable Open Source Modeler&quot;</span> <span class="attr">exporterVersion</span>=<span class="string">&quot;1.1.0-SNAPSHOT&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">process</span> <span class="attr">id</span>=<span class="string">&quot;helloWorldProcess&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Hello World Process&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">startEvent</span> <span class="attr">id</span>=<span class="string">&quot;theStart&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sequenceFlow</span> <span class="attr">id</span>=<span class="string">&quot;flow1&quot;</span> <span class="attr">sourceRef</span>=<span class="string">&quot;theStart&quot;</span> <span class="attr">targetRef</span>=<span class="string">&quot;theTask&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">userTask</span> <span class="attr">id</span>=<span class="string">&quot;theTask&quot;</span> <span class="attr">name</span>=<span class="string">&quot;my task&quot;</span> <span class="attr">flowable:assignee</span>=<span class="string">&quot;aacopy&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sequenceFlow</span> <span class="attr">id</span>=<span class="string">&quot;flow2&quot;</span> <span class="attr">sourceRef</span>=<span class="string">&quot;theTask&quot;</span> <span class="attr">targetRef</span>=<span class="string">&quot;theEnd&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">endEvent</span> <span class="attr">id</span>=<span class="string">&quot;theEnd&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">process</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bpmndi:BPMNDiagram</span> <span class="attr">id</span>=<span class="string">&quot;BPMNDiagram_helloWorldProcess&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bpmndi:BPMNPlane</span> <span class="attr">id</span>=<span class="string">&quot;BPMNPlane_helloWorldProcess&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;helloWorldProcess&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bpmndi:BPMNEdge</span> <span class="attr">id</span>=<span class="string">&quot;flow1_di&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;flow1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdi:waypoint</span> <span class="attr">x</span>=<span class="string">&quot;130&quot;</span> <span class="attr">y</span>=<span class="string">&quot;178&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdi:waypoint</span> <span class="attr">x</span>=<span class="string">&quot;180&quot;</span> <span class="attr">y</span>=<span class="string">&quot;178&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bpmndi:BPMNEdge</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bpmndi:BPMNEdge</span> <span class="attr">id</span>=<span class="string">&quot;flow2_di&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;flow2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdi:waypoint</span> <span class="attr">x</span>=<span class="string">&quot;280&quot;</span> <span class="attr">y</span>=<span class="string">&quot;178&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdi:waypoint</span> <span class="attr">x</span>=<span class="string">&quot;332&quot;</span> <span class="attr">y</span>=<span class="string">&quot;178&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bpmndi:BPMNEdge</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bpmndi:BPMNShape</span> <span class="attr">id</span>=<span class="string">&quot;BPMNShape_theStart&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;theStart&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdc:Bounds</span> <span class="attr">x</span>=<span class="string">&quot;100&quot;</span> <span class="attr">y</span>=<span class="string">&quot;163&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bpmndi:BPMNShape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bpmndi:BPMNShape</span> <span class="attr">id</span>=<span class="string">&quot;theTask_di&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;theTask&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdc:Bounds</span> <span class="attr">x</span>=<span class="string">&quot;180&quot;</span> <span class="attr">y</span>=<span class="string">&quot;138&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;80&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bpmndi:BPMNShape</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bpmndi:BPMNShape</span> <span class="attr">id</span>=<span class="string">&quot;theEnd_di&quot;</span> <span class="attr">bpmnElement</span>=<span class="string">&quot;theEnd&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">omgdc:Bounds</span> <span class="attr">x</span>=<span class="string">&quot;332&quot;</span> <span class="attr">y</span>=<span class="string">&quot;160&quot;</span> <span class="attr">width</span>=<span class="string">&quot;36&quot;</span> <span class="attr">height</span>=<span class="string">&quot;36&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bpmndi:BPMNShape</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bpmndi:BPMNPlane</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bpmndi:BPMNDiagram</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">definitions</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>编写HelloWorldController类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.aacopy.learn.flowable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.flowable.common.engine.impl.util.IoUtil;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.RepositoryService;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.RuntimeService;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.TaskService;</span><br><span class="line"><span class="keyword">import</span> org.flowable.engine.repository.ProcessDefinition;</span><br><span class="line"><span class="keyword">import</span> org.flowable.task.api.Task;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> iseven.yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/12/2 15:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/helloWorld&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RuntimeService runtimeService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TaskService taskService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RepositoryService repositoryService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看流程图</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/image&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">image</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ProcessDefinition processDefinition = repositoryService.createProcessDefinitionQuery()</span><br><span class="line">                .processDefinitionKey(<span class="string">&quot;helloWorldProcess&quot;</span>).latestVersion().singleResult();</span><br><span class="line">        InputStream imageStream = repositoryService.getProcessDiagram(processDefinition.getId());</span><br><span class="line">        <span class="keyword">byte</span>[] data = IoUtil.readInputStream(imageStream, <span class="string">&quot;image inputStream name&quot;</span>);</span><br><span class="line">        response.setContentType(MediaType.IMAGE_PNG_VALUE);</span><br><span class="line">        response.getOutputStream().write(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动流程</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/start&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        runtimeService.startProcessInstanceByKey(<span class="string">&quot;helloWorldProcess&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取待办列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> assignee</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/todo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; todo(String assignee) &#123;</span><br><span class="line">        List&lt;Task&gt; list = taskService.createTaskQuery()</span><br><span class="line">                .taskAssignee(assignee).orderByTaskCreateTime().desc().list();</span><br><span class="line">        <span class="keyword">return</span> list.stream().map(task -&gt; &#123;</span><br><span class="line">            Map&lt;String, Object&gt; taskMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            taskMap.put(<span class="string">&quot;id&quot;</span>, task.getId());</span><br><span class="line">            taskMap.put(<span class="string">&quot;name&quot;</span>, task.getName());</span><br><span class="line">            taskMap.put(<span class="string">&quot;createTime&quot;</span>, task.getCreateTime());</span><br><span class="line">            <span class="keyword">return</span> taskMap;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提交任务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> taskId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/complete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">complete</span><span class="params">(String taskId)</span> </span>&#123;</span><br><span class="line">        taskService.complete(taskId);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="运行示例"><a href="#运行示例" class="headerlink" title="运行示例"></a>运行示例</h3><p>第一次启动，程序会自动创建flowable相关表，启动需要的时间较长</p><p>打开浏览器测试</p><ol><li>查看流程图</li></ol><p><a href="http://127.0.0.1:8080/flowable-learn/helloWorld/image">http://127.0.0.1:8080/flowable-learn/helloWorld/image</a></p><p><img src="/images/Flowable-HelloWorld/image-20211202211702240.png" alt="image-20211202211702240"></p><ol start="2"><li>启动流程</li></ol><p><a href="http://127.0.0.1:8080/flowable-learn/helloWorld/start">http://127.0.0.1:8080/flowable-learn/helloWorld/start</a></p><ol start="3"><li>查看待办任务</li></ol><p><a href="http://127.0.0.1:8080/flowable-learn/helloWorld/todo?assignee=aacopy">http://127.0.0.1:8080/flowable-learn/helloWorld/todo?assignee=aacopy</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">&quot;createTime&quot;</span>:<span class="string">&quot;2021-12-02T08:57:27.886+00:00&quot;</span>,<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;my task&quot;</span>,<span class="attr">&quot;id&quot;</span>:<span class="string">&quot;e0193bb3-534d-11ec-ac8c-d08e7902fe33&quot;</span>&#125;]</span><br></pre></td></tr></table></figure><ol start="4"><li>提交任务</li></ol><p>taskId入参填写“查看待办任务”接口返回列表中的id值</p><p><a href="http://127.0.0.1:8080/flowable-learn/helloWorld/complete?taskId=e0193bb3-534d-11ec-ac8c-d08e7902fe33">http://127.0.0.1:8080/flowable-learn/helloWorld/complete?taskId=e0193bb3-534d-11ec-ac8c-d08e7902fe33</a></p>]]></content>
      
      
      <categories>
          
          <category> Flowable </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flowable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis安装-Docker版</title>
      <link href="/Redis/Redis%E5%AE%89%E8%A3%85-Docker/"/>
      <url>/Redis/Redis%E5%AE%89%E8%A3%85-Docker/</url>
      
        <content type="html"><![CDATA[<h2 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis -p 6379:6379 -v /home/dockerdata/redis/data:/data redis:6.2.6 --requirepass aacopy.cn</span><br></pre></td></tr></table></figure><p>使用redis可视化工具查看链接:</p><p>mac版本：<a href="https://pan.baidu.com/s/1PlD6U-D-hgWnNAWMnZS0NA">https://pan.baidu.com/s/1PlD6U-D-hgWnNAWMnZS0NA</a>  密码: 3iqa</p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql安装-docker版</title>
      <link href="/Mysql/Mysql%E5%AE%89%E8%A3%85-Docker%E7%89%88/"/>
      <url>/Mysql/Mysql%E5%AE%89%E8%A3%85-Docker%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="5-7版本安装指令"><a href="#5-7版本安装指令" class="headerlink" title="5.7版本安装指令"></a>5.7版本安装指令</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> -p 3306:3306 --name mysql5.7 --privileged=<span class="literal">true</span> \</span></span><br><span class="line"><span class="bash">-v /home/dockerdata/mysql5.7/conf:/etc/mysql \</span></span><br><span class="line"><span class="bash">-v /home/dockerdata/mysql5.7/logs:/var/<span class="built_in">log</span>/mysql \</span></span><br><span class="line"><span class="bash">-v /home/dockerdata/mysql5.7/data:/var/lib/mysql \</span></span><br><span class="line"><span class="bash">-e MYSQL_ROOT_PASSWORD=aacopy.cn \</span></span><br><span class="line"><span class="bash">-d mysql:5.7 \</span></span><br><span class="line"><span class="bash">--character-set-server=utf8mb4 \</span></span><br><span class="line"><span class="bash">--collation-server=utf8mb4_unicode_ci \</span></span><br><span class="line"><span class="bash">--lower_case_table_names=1 \</span></span><br><span class="line"><span class="bash">--sql_mode=<span class="string">&quot;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&quot;</span></span></span><br></pre></td></tr></table></figure><p>docker ps 查看是否启动成功</p><p>lower_case_table_names标识忽略表大小写</p><p>sql_mode取消ONLY_FULL_GROUP_BY</p><p>问题：</p><ol><li><p>docker ps 中没mysql的信息，服务没有启动成功</p><ul><li><p>docker ps -a 查看全部内容</p></li><li><p>找到mysql，查看状态Exited (1) 16 seconds ago</p></li><li><p>docker logs -f containerid 查看日志</p></li><li><p>日志信息：Entrypoint script for MySQL Server 5.7.36-1debian10 started.</p><p>chown: changing ownership of ‘/var/lib/mysql/‘: Permission denied</p></li></ul></li></ol><p>​    解决：权限不足的问题，在启动命令里加上 –privileged=true，现把原来容器中的mysql删掉。docker rm ,再执行下面的命令</p><h2 id="8-0版本安装"><a href="#8-0版本安装" class="headerlink" title="8.0版本安装"></a>8.0版本安装</h2><p>安装命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -p 3306:3306 \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=aacopy.cn \</span><br><span class="line">    -v /home/dockerdata/mysql8.0/data:/var/lib/mysql:rw \</span><br><span class="line">    -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">    --name mysql8.0 \</span><br><span class="line">    --restart=always \</span><br><span class="line">    -d mysql:8.0</span><br></pre></td></tr></table></figure><p>修改最大连接数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看当前最大连接数</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%max_connections%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置最大连接数</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">GLOBAL</span> max_connections<span class="operator">=</span><span class="number">5000</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">GLOBAL</span> mysqlx_max_connections<span class="operator">=</span><span class="number">5000</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux环境安装Docker</title>
      <link href="/Docker/Linux%E5%AE%89%E8%A3%85Docker/"/>
      <url>/Docker/Linux%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>应用容器引擎，可以快速部署启动应用，实现虚拟化，完整资源隔离</p><p>官方地址：<a href="https://www.docker.com/">https://www.docker.com/</a></p><p>仓库地址：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install epel-release -y</span><br></pre></td></tr></table></figure><h2 id="安装并运行"><a href="#安装并运行" class="headerlink" title="安装并运行"></a>安装并运行</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-io -y</span><br><span class="line">systemctl start docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure><h2 id="运行常用指令"><a href="#运行常用指令" class="headerlink" title="运行常用指令"></a>运行常用指令</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker     <span class="comment">#运行Docker守护进程</span></span><br><span class="line">systemctl stop docker      <span class="comment">#停止Docker守护进程</span></span><br><span class="line">systemctl restart docker   <span class="comment">#重启Docker守护进程</span></span><br><span class="line">docker ps <span class="comment">#查看容器，后面加上-a，显示全部</span></span><br><span class="line">docker start 容器id <span class="comment">#启动容器</span></span><br><span class="line">docker stop 容器id <span class="comment">#停止容器</span></span><br><span class="line">docker rm 容器id <span class="comment">#移除容器</span></span><br><span class="line">docker images <span class="comment">#查看容器中的镜像</span></span><br><span class="line">docker search xxx <span class="comment">#搜索镜像</span></span><br><span class="line">docker pull xxx <span class="comment">#拉取镜像，xxx(格式 REPOSITORY:TAG)</span></span><br><span class="line">docker inspect 容器名称 <span class="comment">#检查容器内部信息</span></span><br><span class="line">docker rmi IMAGE_NAME <span class="comment">#删除镜像</span></span><br><span class="line">docker logs -f containerid <span class="comment">#查看日志</span></span><br><span class="line">docker exec -it 容器id /bin/bash  <span class="comment">#进入容器内部,退出exit</span></span><br></pre></td></tr></table></figure><h2 id="修改镜像仓库"><a href="#修改镜像仓库" class="headerlink" title="修改镜像仓库"></a>修改镜像仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在花括号内加入json格式的配置，全量信息如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;debug&quot;</span>:<span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;experimental&quot;</span>:<span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://mle62as6.mirror.aliyuncs.com&quot;</span>,<span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br></pre></td></tr></table></figure><p>重启systemctl restart docker</p><p>再次查看验证docker info</p><h2 id="部署一个nginx"><a href="#部署一个nginx" class="headerlink" title="部署一个nginx"></a>部署一个nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name nginx -p 8080:80 -d nginx</span><br></pre></td></tr></table></figure><p>–name nginx：容器的名字叫做nginx,名字自己定义.<br>-p: 端口进行映射，将本地 8080 端口映射到容器内部的 80 端口<br>-d：容器启动后，在后台运行</p><p>浏览器访问部署的服务器ip加8080端口，显示nginx页面</p><h2 id="部署DockerCompose"><a href="#部署DockerCompose" class="headerlink" title="部署DockerCompose"></a>部署DockerCompose</h2><p>一个用于定义和运行多容器 Docker 的容器编排工具</p><p>官方地址：<a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p><p>下载地址：<a href="https://github.com/docker/compose/tags">https://github.com/docker/compose/tags</a></p><ul><li><p>选择：docker-compose-linux-x86_64</p></li><li><p>上传至/usr/local/bin/</p></li><li><p><code>mv docker-compose-linux-x86_64 docker-compose</code></p></li><li><p><code>chmod 777 docker-compose</code></p></li><li><p>安装完成</p></li></ul><h2 id="集成jenkins的问题"><a href="#集成jenkins的问题" class="headerlink" title="集成jenkins的问题"></a>集成jenkins的问题</h2><p>docker 1.13.1版本，在jenkins使用docker命令时，提示找不到配置文件，通过以下方式重新安装</p><h3 id="卸载docker"><a href="#卸载docker" class="headerlink" title="卸载docker"></a>卸载docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure><h3 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">添加依赖</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta">#</span><span class="bash">配置yum源</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash">查看docker版本</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line"><span class="meta">#</span><span class="bash">安装指定版本的docker</span></span><br><span class="line">yum -y install docker-ce-20.10.10-3.el7</span><br><span class="line"><span class="meta">#</span><span class="bash">安装完成，查看版本</span></span><br><span class="line">docker -v</span><br><span class="line"><span class="meta">#</span><span class="bash">修改镜像仓库</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下镜像配置，并保存</span></span><br><span class="line">&#123;</span><br><span class="line">&quot;debug&quot;:true,</span><br><span class="line">&quot;experimental&quot;:true,</span><br><span class="line">&quot;registry-mirrors&quot;:[&quot;https://mle62as6.mirror.aliyuncs.com&quot;,&quot;https://hub-mirror.c.163.com&quot;,&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta">#</span><span class="bash">查看docker信息</span></span><br><span class="line">docker info</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装JDK</title>
      <link href="/Java/Linux%E5%AE%89%E8%A3%85JDK/"/>
      <url>/Java/Linux%E5%AE%89%E8%A3%85JDK/</url>
      
        <content type="html"><![CDATA[<h2 id="JDK8下载"><a href="#JDK8下载" class="headerlink" title="JDK8下载"></a>JDK8下载</h2><p>官方下载地址：<a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a></p><p>下载jdk-8uxxx-linux-x64.tar.gz</p><h2 id="上传解压"><a href="#上传解压" class="headerlink" title="上传解压"></a>上传解压</h2><ol><li><p>使用Xshell或其它工具连接linux服务器</p></li><li><p>在usr/local目录下新建java文件夹（mkdir java），使用rz将jdk的压缩包上传至该文件夹下</p><p>如果没有rz命令，使用yum -y install lrzsz进行安装</p></li><li><p>tar -zxvf jdk-8uxxx-linux-x64.tar.gz</p></li></ol><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><ol><li> vim /etc/profile，如果没有vim命令，先安装：yum -y install vim*</li><li>在最后加上如下配置，版本号根据具体情况修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_291</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><ol start="3"><li><p> source /etc/profile，让环境变量立即生效</p></li><li><p> java -version 查看是否安装成功</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK8 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seata-HelloWorld</title>
      <link href="/Seata/Seata-HelloWorld/"/>
      <url>/Seata/Seata-HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Seata 是一款开源的分布式事务解决方案</p><p>官方网站：<a href="http://seata.io/">http://seata.io/</a></p><p>github地址：<a href="https://github.com/seata/seata">https://github.com/seata/seata</a></p><p>文档：<a href="http://seata.io/zh-cn/docs/overview/what-is-seata.html">http://seata.io/zh-cn/docs/overview/what-is-seata.html</a></p><p>下载地址：<a href="http://seata.io/zh-cn/blog/download.html">http://seata.io/zh-cn/blog/download.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Seata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seata </tag>
            
            <tag> 分布式事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK8新特性-stream</title>
      <link href="/Java/JDK8%E6%96%B0%E7%89%B9%E6%80%A7-stream/"/>
      <url>/Java/JDK8%E6%96%B0%E7%89%B9%E6%80%A7-stream/</url>
      
        <content type="html"><![CDATA[<h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>作用：将流中的每一个元素转换为另外一类元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">List&lt;UserDTO&gt; result = userList.stream()</span><br><span class="line">        .map(user -&gt; <span class="keyword">new</span> UserDTO(user.getName(), user.getAge()))</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>作用：过滤流中的每一个元素，符合条件的保留下来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; result = userList.stream()</span><br><span class="line">        .filter(user -&gt; user.getAge()&gt;<span class="number">18</span>)</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h2><p>作用：对元素进行排序</p><p>自然排序sorted()：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; result = userList.stream()</span><br><span class="line">        .sorted()</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>自定义排序sorted(Comparator comparator) ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; result = userList.stream()</span><br><span class="line">                .sorted(Comparator.comparingInt(User::getAge))</span><br><span class="line">                .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>反转排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; result = userList.stream()</span><br><span class="line">                .sorted(Comparator.comparingInt(User::getAge).reversed())</span><br><span class="line">                .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><p>作用：返回的集合最多包涵的元素个数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; result = userList.stream()</span><br><span class="line">        .limit(<span class="number">2</span>)</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="allMatch"><a href="#allMatch" class="headerlink" title="allMatch"></a>allMatch</h2><p>作用：所有元素都匹配成功返回true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> result = userList.stream()</span><br><span class="line">        .allMatch(user -&gt; user.getAge()&gt;<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h2 id="anyMatch"><a href="#anyMatch" class="headerlink" title="anyMatch"></a>anyMatch</h2><p>作用：任意一个元素匹配成功返回true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> result = userList.stream()</span><br><span class="line">        .anyMatch(user -&gt; user.getAge()&gt;<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h2 id="max-min"><a href="#max-min" class="headerlink" title="max/min"></a>max/min</h2><p>作用：返回规则中结果最大/最小的一个元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User result = userList.stream()</span><br><span class="line">        .max(Comparator.comparingInt(User::getAge)).get();</span><br></pre></td></tr></table></figure><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>作用：聚合操作，根据规则将流中的元素计算后返回一个唯一的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回年龄最大的User</span></span><br><span class="line">User result = userList.stream()</span><br><span class="line">        .reduce((user1, user2) -&gt; user1.getAge()&gt;user2.getAge()?user1:user2).get();</span><br></pre></td></tr></table></figure><p>带有初始值的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在100基础上，加每一个user的年龄</span></span><br><span class="line"><span class="keyword">int</span> sum = userList.stream()</span><br><span class="line">        .map(User::getAge)</span><br><span class="line">        .reduce(<span class="number">100</span>, ((age1, age2) -&gt; age1 + age2));</span><br></pre></td></tr></table></figure><h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><p>作用：迭代元素，</p><p>注意：不能continue;break;return;不能修改外部变量值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">map.forEach((k, v) -&gt; System.out.println(k+<span class="string">&quot;-&gt;&quot;</span>+v));</span><br></pre></td></tr></table></figure><h2 id="collect"><a href="#collect" class="headerlink" title="collect"></a>collect</h2><p>作用：对流数据进行归集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;R, A&gt; R collect(Collector&lt;? super T, A, R&gt; collector);</span><br></pre></td></tr></table></figure><p>Collectors可以创建多种Collector的实现</p><p>Collectors.toList()收集为一个list</p><p>Collectors.toMap()收集为一个map，用于list转map</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">把用户集合转为key是name，value是age的map</span><br><span class="line">Map&lt;String, Integer&gt; result = userList.stream()</span><br><span class="line">                .collect(Collectors.toMap(User::getName, User::getAge));</span><br></pre></td></tr></table></figure><p>Collectors.toSet()</p><p>Collectors.toCollection() ：⽤⾃定义的实现Collection的数据结构收集</p><ul><li>Collectors.toCollection(LinkedList::new)</li><li>Collectors.toCollection(CopyOnWriteArrayList::new)</li><li>Collectors.toCollection(TreeSet::new)</li></ul><h2 id="joining"><a href="#joining" class="headerlink" title="joining"></a>joining</h2><p>作用：拼接字符串</p><p>直接拼接</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String r = userList.stream().map(User::getName).collect(Collectors.joining());</span><br></pre></td></tr></table></figure><p>以逗号分隔符拼接（可以换其它符号）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String r = userList.stream().map(User::getName).collect(Collectors.joining(<span class="string">&quot;,&quot;</span>));</span><br></pre></td></tr></table></figure><p>以括号开头和结尾逗号分隔拼接（可以换其它符号）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String r = userList.stream().map(User::getName).collect(Collectors.joining(<span class="string">&quot;,&quot;</span>,<span class="string">&quot;(&quot;</span>,<span class="string">&quot;)&quot;</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK8新特性-Lambda表达式</title>
      <link href="/Java/JDK8%E6%96%B0%E7%89%B9%E6%80%A7-Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/Java/JDK8%E6%96%B0%E7%89%B9%E6%80%A7-Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​    lambda表达式就是函数编程，就是将一个函数作为方法的入参，本质上是以匿名内部类的方式实现。</p><p>eg：创建线程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(() -&gt; System.out.println(<span class="string">&quot;Hello AaCopy&quot;</span>)).start();</span><br></pre></td></tr></table></figure><p>eg：集合排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">Collections.sort(list, (a, b) -&gt; b.compareTo(a));</span><br></pre></td></tr></table></figure><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>(params) -&gt; {expression}</p><p>params：</p><ul><li>参数列表数据类型省略</li><li>没有参数列表时，使用()</li><li>只有一个参数时，()可以省略，eg：a -&gt; System.out.println(a)</li><li>有多个参数时，（a, b）-&gt; a+b</li></ul><p> expression:</p><ul><li>只有一行代码时，{}、return、分号都可以省略</li><li>有多行代码时，和正常方法一样写法</li></ul><h2 id="使用自定义函数式接口"><a href="#使用自定义函数式接口" class="headerlink" title="使用自定义函数式接口"></a>使用自定义函数式接口</h2><ol><li> 定义函数（行为）接口，接口需要添加注解@FunctionalInterface，接口内只有一个需要被实现的方法，如果有其他方法，需要设置defalut</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OperFunction</span>&lt;<span class="title">R</span>, <span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">R <span class="title">operator</span><span class="params">(T t1, T t2)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写一个方法，参数为，需要操作的数据和函数接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">operator</span><span class="params">(Integer x, Integer y, OperFunction&lt;Integer, Integer&gt; of)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> of.operator(x, y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li> 调用方法时传入数据和lambda表达式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(operator(<span class="number">2</span>, <span class="number">7</span>, (x, y) -&gt; x + y));</span><br><span class="line">System.out.println(operator(<span class="number">5</span>, <span class="number">3</span>, (x, y) -&gt; x - y));</span><br></pre></td></tr></table></figure><h2 id="Java内置函数式接口"><a href="#Java内置函数式接口" class="headerlink" title="Java内置函数式接口"></a>Java内置函数式接口</h2><p>​    java内置的函数式接口放在java.util.function包下面，四大核心接口</p><ul><li>消费型接⼝：有⼊参，⽆返回值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Consumer</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(T t)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>供给型接⼝：⽆⼊参，有返回值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Supplier</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">T <span class="title">get</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数型接⼝：有⼊参，有返回值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Function</span>&lt;<span class="title">T</span>, <span class="title">R</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">R <span class="title">apply</span><span class="params">(T t)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>断⾔型接⼝：有⼊参，返回值类型是boolean</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Predicate</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">test</span><span class="params">(T t)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="⽅法引⽤与构造函数引⽤"><a href="#⽅法引⽤与构造函数引⽤" class="headerlink" title="⽅法引⽤与构造函数引⽤"></a>⽅法引⽤与构造函数引⽤</h2><ul><li><p>说明    </p><p>​    ⽅法引⽤是⼀种更简洁易懂的lambda表达式，操作符是双冒号::，⽤来直接访问类或者实例已经存在的⽅法或构造⽅法</p></li><li><p>语法</p><p>左边是容器（可以是类名，实例名），中间是” :: “，右边是相应的⽅法名</p><ul><li><p>静态方法</p><p>ClassName::methodName</p></li><li><p>实例方法</p><p>Instance::methodName</p></li><li><p>构造函数</p><p>ClassName::new</p></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BiFunction&lt;String, String, Boolean&gt; biFun = String::contains;</span><br><span class="line"><span class="keyword">boolean</span> r = biFun.apply(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;ab&quot;</span>);</span><br><span class="line">System.out.println(r);</span><br><span class="line">BiFunction&lt;String, String, Boolean&gt; biFun2 =(a, b) -&gt; a.contains(b);</span><br><span class="line">System.out.println(biFun2.apply(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;ab&quot;</span>));</span><br><span class="line">Function&lt;CharSequence, Boolean&gt; fun = <span class="string">&quot;abc&quot;</span>::contains;</span><br><span class="line">System.out.println(fun.apply(<span class="string">&quot;ab&quot;</span>));</span><br><span class="line"></span><br><span class="line">BiFunction&lt;String, Integer, User&gt; biFunction = User::<span class="keyword">new</span>;</span><br><span class="line">User user = biFunction.apply(<span class="string">&quot;aacopy&quot;</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win安装centOS7虚拟机</title>
      <link href="/Linux/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>/Linux/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="安装VMware-Workstation"><a href="#安装VMware-Workstation" class="headerlink" title="安装VMware Workstation"></a>安装VMware Workstation</h2><ul><li>下载地址：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></li><li>安装</li><li>激活：16版本的序列号：ZF3R0-FHED2-M80TY-8QYGC-NPKYF</li></ul><h2 id="下载centOS7镜像"><a href="#下载centOS7镜像" class="headerlink" title="下载centOS7镜像"></a>下载centOS7镜像</h2><ul><li>下载地址：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></li><li>下载标准安装版本DVD.iso，如：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso">CentOS-7-x86_64-DVD-2009.iso</a> </li></ul><h2 id="新建centOS7虚拟机"><a href="#新建centOS7虚拟机" class="headerlink" title="新建centOS7虚拟机"></a>新建centOS7虚拟机</h2><ol><li>打开VMware，选择创建新的虚拟机</li><li>选择稍后安装操作系统</li><li>选择linux 和 centos7 64</li><li>点击完成</li><li>在虚拟机页面点击编辑虚拟机设置</li><li>可以移除USB，声卡，打印机等无用的设备</li><li>选择CD/DVD</li><li>使用ISO映像文件，选择iso文件</li><li>点击确定</li><li>点击启动虚拟机</li><li>语言选择英语的就可以 continue</li><li>date&amp;time选择亚洲，选择down</li><li>选择INSTALLATION DESTINATION，直接点down</li><li>选择NETWORK &amp; HOST NAME 设置为ON</li><li>点击begin installation</li><li>设置ROOT PASSWORD 如123456. 点击down</li><li>等待加载完后点击reboot</li></ol><h2 id="设置虚拟机网络"><a href="#设置虚拟机网络" class="headerlink" title="设置虚拟机网络"></a>设置虚拟机网络</h2><p>三种网络模式</p><h3 id="Bridged桥接模式"><a href="#Bridged桥接模式" class="headerlink" title="Bridged桥接模式"></a>Bridged桥接模式</h3><ul><li>默认使用VMnet0，不提供DHCP服务（DHCP服务是指由服务器控制的一段IP地址范围，当客户机登录服务器时会自动获取服务器分配的IP地址与子网掩码）</li><li>虚拟机与外部主机需要在同一个网段上，与局域网的其它机器没有区别。</li><li>可以与局域网内其它主机通信，可以与外部网络通信</li><li>容易与局域网其他主机引起ip地址冲突</li></ul><h3 id="Host-Only仅主机模式"><a href="#Host-Only仅主机模式" class="headerlink" title="Host-Only仅主机模式"></a>Host-Only仅主机模式</h3><ul><li>默认使用VMnet1，提供DHCP服务</li><li>虚拟机可以和物理主机互相访问，但虚拟机无法访问外部网络</li></ul><h3 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h3><ul><li>默认使用VMnet8，提供DHCP服务</li><li>虚拟机可以和物理主机互相访问，可访问外部网络</li><li>局域网内其它机器访问不了</li></ul><p>​    由于需要将闲置windows电脑作为虚拟机使用，并对其他局域网内的电脑可见，所以选用桥接模式，</p><p>右键服务-&gt;设置-&gt;网络适配器-&gt;选择桥接模式，并勾选上复制物理网络连接状态-&gt;确定</p><p>重启网卡：systemctl restart network.service</p><p>查看ip命令：ip addr</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>问题1、启动报错：此主机支持 Intel VT-x，但 Intel VT-x 处于禁用状态。</p><p>（1）重启系统，进入BIOS（ThinkPad系列按F1）</p><p>（2）进入BIOS，选择Configuration选项，选择Intel Virtual Technology并回车</p><p>（3）若无VT选项或不可更改</p><p>（4）将光标移动至Enabled处，并回车确定</p><p>（5）最后按F10热键保存并退出即可开启VT功能</p><p>ping不通的时候，看下防火墙是不是关了</p><p>如果需要添加过个虚拟机，最简单的方式就是在已经添加好的虚拟机上右键-&gt;管理-&gt;克隆，选择全量</p><p>mac可以使用终端ssh@root:ip登录，传输文件可以下载免费的filezilla(<a href="https://www.filezilla.cn/download/client),%E9%80%89%E6%8B%A9sftp%E7%99%BB%E5%BD%95">https://www.filezilla.cn/download/client),选择sftp登录</a></p><h2 id="设置固定IP和连接互联网"><a href="#设置固定IP和连接互联网" class="headerlink" title="设置固定IP和连接互联网"></a>设置固定IP和连接互联网</h2><ul><li><p>管理员模式启动VMware</p></li><li><p>编辑 -&gt; 虚拟网络编辑器</p><p><img src="/images/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20220208004436174.png" alt="image-20220208004436174"></p></li><li><p>设置网络</p><ul><li>选择VMnet8</li><li>点击还原默认设置</li><li>取消勾选使用本地DHCP</li><li>设置子网ip，改为需要设置的ip段</li><li>点击NAT设置</li></ul><p><img src="/images/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20220208004905283.png" alt="image-20220208004905283"></p><ul><li><p>修改网关IP，最后一个要设置为2</p><p><img src="/images/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20220208005134494.png" alt="image-20220208005134494"></p></li><li><p>点击确定</p></li></ul></li><li><p>设置linux虚拟机</p><ul><li>vim /etc/sysconfig/network-scripts/ifcfg-ens32</li><li>如下几项是需要添加或者修改的</li></ul></li></ul><p><img src="/images/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20220208005519625.png" alt="image-20220208005519625"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line"><span class="attr">PROXY_METHOD</span>=<span class="string">&quot;none&quot;</span></span><br><span class="line"><span class="attr">BROWSER_ONLY</span>=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">&quot;static&quot;</span></span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="string">&quot;yes&quot;</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="string">&quot;192.168.80.128&quot;</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="string">&quot;255.255.255.0&quot;</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="string">&quot;192.168.80.2&quot;</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line"><span class="attr">IPV4_FAILURE_FATAL</span>=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="attr">IPV6INIT</span>=<span class="string">&quot;yes&quot;</span></span><br><span class="line"><span class="attr">IPV6_AUTOCONF</span>=<span class="string">&quot;yes&quot;</span></span><br><span class="line"><span class="attr">IPV6_DEFROUTE</span>=<span class="string">&quot;yes&quot;</span></span><br><span class="line"><span class="attr">IPV6_FAILURE_FATAL</span>=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="attr">IPV6_ADDR_GEN_MODE</span>=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">&quot;ens32&quot;</span></span><br><span class="line"><span class="attr">UUID</span>=<span class="string">&quot;8733bc96-ef4d-4647-871c-846846a7e58f&quot;</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">&quot;ens32&quot;</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="string">&quot;yes&quot;</span></span><br></pre></td></tr></table></figure><ul><li>重启网络服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h2><p>在虚拟机右键 –&gt; 设置 –&gt;  选项 –&gt; VMware Tools –&gt; 勾选将客户机与主机同步</p><p><img src="/images/Win%E5%AE%89%E8%A3%85centOS7%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20220214161445742.png" alt="image-20220214161445742"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AlibabaCloud-Gateway</title>
      <link href="/SpringCloud/AlibabaCloud-Gateway/"/>
      <url>/SpringCloud/AlibabaCloud-Gateway/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是网关"><a href="#什么是网关" class="headerlink" title="什么是网关"></a>什么是网关</h2><p>​    API Gateway，是系统的唯一对外的入口，介于客户端和服务器端之间的中间层，处理非业务功能，提供路由请求、鉴权、监控、缓存、限流等功能</p><p>​    官网：<a href="https://spring.io/projects/spring-cloud-gateway">https://spring.io/projects/spring-cloud-gateway</a></p><p>​    基于Spring5+Reactor技术开发的网关，性能强劲基于Reactor+WebFlux、功能多样。</p><h2 id="Gateway项目创建"><a href="#Gateway项目创建" class="headerlink" title="Gateway项目创建"></a>Gateway项目创建</h2><ul><li>创建module，名称为api-gateway</li><li>修改pom，添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.demo.alibabacloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>api-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>api-gateway<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>api-gateway<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>创建bootstrap.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br></pre></td></tr></table></figure><ul><li>在nacos网关中创建api-gateway.yaml配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">order-service</span>  <span class="comment">#路由唯一标示</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://order-service</span>  <span class="comment">#从nacos获取名称转发,lb是负载均衡轮训策略</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/order-service/**</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul><li>在IDEA中Edit Configurations，勾选OrderService配置中的Allow parallel run</li><li>启动order-service，这时候端口为8080</li><li>在nacos中修改端口为8081，再次启动一个order-service，这时候有两个order-service服务，模拟双节点</li><li>启动api-gateway服务。</li><li>重复请求<a href="http://127.0.0.1:8888/order-service/api/v1/order/demo/sayHello?name=aacopy">http://127.0.0.1:8888/order-service/api/v1/order/demo/sayHello?name=aacopy</a></li><li>在两个order服务的控制台可以看到轮询打印日志</li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AlibabaCloud-Sentinel</title>
      <link href="/SpringCloud/AlibabaCloud-Sentinel/"/>
      <url>/SpringCloud/AlibabaCloud-Sentinel/</url>
      
        <content type="html"><![CDATA[<h2 id="Sentinel简介"><a href="#Sentinel简介" class="headerlink" title="Sentinel简介"></a>Sentinel简介</h2><p>官方地址：<a href="https://github.com/alibaba/Sentinel/">https://github.com/alibaba/Sentinel/</a></p><p>中文文档：<a href="https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D">https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D</a></p><p>Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</p><p>Sentinel 分为两个部分:</p><ul><li>核心库（Java 客户端）不依赖任何框架/库，能够运行于所有 Java 运行时环境，同时对 Dubbo / Spring Cloud 等框架也有较好的支持。</li><li>控制台（Dashboard）基于 Spring Boot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器。</li></ul><h2 id="Sentinel控制台（1-8-1）"><a href="#Sentinel控制台（1-8-1）" class="headerlink" title="Sentinel控制台（1.8.1）"></a>Sentinel控制台（1.8.1）</h2><p>下载地址：<a href="https://github.com/alibaba/Sentinel/releases">https://github.com/alibaba/Sentinel/releases</a></p><p>中文文档：<a href="https://github.com/alibaba/Sentinel/wiki/%E6%8E%A7%E5%88%B6%E5%8F%B0">https://github.com/alibaba/Sentinel/wiki/%E6%8E%A7%E5%88%B6%E5%8F%B0</a></p><p>下载后的文件：sentinel-dashboard-1.8.1.jar</p><p>启动命令：nohup java -Dserver.port=9090 -Dcsp.sentinel.dashboard.server=localhost:9090 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard-1.8.1.jar &amp;</p><p>注：端口号根据具体情况修改，jar包的名称根据版本号修改</p><p>浏览器访问控制台：<a href="http://localhost:9090/">http://localhost:9090</a> 默认账号密码 ：sentinel/sentinel</p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>以order-service为例</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="comment">#控制台地址</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:9090</span></span><br><span class="line">        <span class="comment">#客户端监控 API 的端口（默认是 8719）若被占用,则自动+1</span></span><br><span class="line">        <span class="comment">#port: 9999</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul><li><p>启动控制台jar</p></li><li><p>启动order-service</p></li><li><p>多次访问<a href="http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHello?name=aacopy">http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHello?name=aacopy</a></p></li><li><p>查看控制台order-service的实时监控项</p><p><img src="/images/AlibabaCloud-Sentinel/image-20210925103233812.png" alt="image-20210925103233812"></p></li></ul><h2 id="流控配置"><a href="#流控配置" class="headerlink" title="流控配置"></a>流控配置</h2><h3 id="基于QPS"><a href="#基于QPS" class="headerlink" title="基于QPS"></a>基于QPS</h3><p>根据请求地址配置qps流控规则，当 QPS 超过某个阈值的时候，则采取措施进行流量控制</p><p><img src="/images/AlibabaCloud-Sentinel/image-20210926111843972.png" alt="image-20210926111843972"></p><p><img src="/images/AlibabaCloud-Sentinel/image-20210926112136869.png" alt="image-20210926112136869"></p><p>测试流控规则</p><ul><li>快速刷新<a href="http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHello?name=aacopy">http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHello?name=aacopy</a></li><li>提示“Blocked by Sentinel (flow limiting)”表示流控生效</li></ul><p>查看编辑流控规则，在左侧边栏找到流控规则进行操作</p><h3 id="基于并发线程数"><a href="#基于并发线程数" class="headerlink" title="基于并发线程数"></a>基于并发线程数</h3><p>用于保护业务线程池不被慢调用耗尽，如果超出阈值，新的请求会被立即拒绝，类似于信号量隔离。</p><ul><li>编写测试代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/sayHi&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHi</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hi &quot;</span> + name);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hi &quot;</span> + name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>重启order-service服务</p></li><li><p>打开sentinel控制台，这时候发现之前添加的流控规则没有了，是因为流控规则会下发到微服务，微服务如果重启，则流控规则会消失，可以持久化配置解决，后面会讲到</p></li><li><p>浏览器请求一次<a href="http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHi?name=aacopy">http://127.0.0.1:8080/order-service/api/v1/order/demo/sayHi?name=aacopy</a></p></li><li><p>在<strong>簇点链路</strong>中找到**/api/v1/order/demo/sayHi**，点击流控</p><p><img src="/images/AlibabaCloud-Sentinel/image-20210926174622336.png" alt="image-20210926174622336"></p></li><li><p>再次访问sayHi链接，3秒内访问超过2次，则会看到限流提示<em>Blocked by Sentinel (flow limiting)</em></p></li></ul><h2 id="熔断降级"><a href="#熔断降级" class="headerlink" title="熔断降级"></a>熔断降级</h2><p>​    对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一，熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置</p><p>​    文档：<a href="https://github.com/alibaba/Sentinel/wiki/%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7">https://github.com/alibaba/Sentinel/wiki/熔断降级</a></p><h3 id="熔断策略"><a href="#熔断策略" class="headerlink" title="熔断策略"></a>熔断策略</h3><h4 id="慢调用比例"><a href="#慢调用比例" class="headerlink" title="慢调用比例"></a>慢调用比例</h4><p>TODO</p><h4 id="异常比例"><a href="#异常比例" class="headerlink" title="异常比例"></a>异常比例</h4><ul><li>编写测试代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Random random = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="meta">@RequestMapping(&quot;/exceptionProportion&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">exceptionProportion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (random.nextInt() % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>访问地址：<a href="http://127.0.0.1:8080/order-service/api/v1/order/demo/exceptionProportion">http://127.0.0.1:8080/order-service/api/v1/order/demo/exceptionProportion</a></p></li><li><p>打开控制台，在簇点链路中找到，点击降级</p></li></ul><p><img src="/images/AlibabaCloud-Sentinel/image-20210926211916453.png" alt="image-20210926211916453"></p><ul><li>快速刷新访问地址，触发降级，提示”*Blocked by Sentinel (flow limiting)*“</li></ul><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><p>实现BlockExceptionHandler并且重写handle方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderBlockExceptionHandler</span> <span class="keyword">implements</span> <span class="title">BlockExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, BlockException e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; backMap=<span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> FlowException)&#123;</span><br><span class="line">            backMap.put(<span class="string">&quot;code&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">            backMap.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;限流-异常啦&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> DegradeException)&#123;</span><br><span class="line">            backMap.put(<span class="string">&quot;code&quot;</span>,-<span class="number">2</span>);</span><br><span class="line">            backMap.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;降级-异常啦&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ParamFlowException)&#123;</span><br><span class="line">            backMap.put(<span class="string">&quot;code&quot;</span>,-<span class="number">3</span>);</span><br><span class="line">            backMap.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;热点-异常啦&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> SystemBlockException)&#123;</span><br><span class="line">            backMap.put(<span class="string">&quot;code&quot;</span>,-<span class="number">4</span>);</span><br><span class="line">            backMap.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;系统规则-异常啦&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> AuthorityException)&#123;</span><br><span class="line">            backMap.put(<span class="string">&quot;code&quot;</span>,-<span class="number">5</span>);</span><br><span class="line">            backMap.put(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;认证-异常啦&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        httpServletResponse.setStatus(<span class="number">200</span>);</span><br><span class="line">        httpServletResponse.setHeader(<span class="string">&quot;content-Type&quot;</span>,<span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">        httpServletResponse.getWriter().write(JSON.toJSONString(backMap));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加限流，降级等操作，触发流控测试</p><h2 id="feign和sentinel整合"><a href="#feign和sentinel整合" class="headerlink" title="feign和sentinel整合"></a>feign和sentinel整合</h2><ul><li>添加配置项</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启Feign对Sentinel的支持</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>创建容错类</li></ul><p>创建fallback文件夹编写实现类GoodsServiceFallback</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServiceFallback</span> <span class="keyword">implements</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGoodsById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Fallback服务：&quot;</span> + id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ID为&quot;</span>+ id + <span class="string">&quot;的默认商品&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置feign容错类</li></ul><p>在feignClient接口上的注解@FeignClient增加fallback参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;goods-service&quot;, fallback = GoodsServiceFallback.class)</span></span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><p>当前最新springCloud版本2020.0.4，无法兼容此功能，会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Requested bean is currently in creation: Is there an unresolvable circular reference?</span><br></pre></td></tr></table></figure><p>如果要用到此功能需要将springCloud版本降到Hoxton.SR9及以下</p><p><a href="https://github.com/alibaba/spring-cloud-alibaba/issues/1974">https://github.com/alibaba/spring-cloud-alibaba/issues/1974</a><br><a href="https://github.com/alibaba/Sentinel/issues/2065">https://github.com/alibaba/Sentinel/issues/2065</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AlibabaCloud-Nacos</title>
      <link href="/SpringCloud/AlibabaCloud-Nacos/"/>
      <url>/SpringCloud/AlibabaCloud-Nacos/</url>
      
        <content type="html"><![CDATA[<h2 id="1-什么是nacos"><a href="#1-什么是nacos" class="headerlink" title="1. 什么是nacos"></a>1. 什么是nacos</h2><p>官方地址：<a href="https://nacos.io/zh-cn/index.html">https://nacos.io/zh-cn/index.html</a></p><p><img src="https://nacos.io/img/nacosMap.jpg" alt="nacos_map"></p><h2 id="2-nacos服务端-v1-4-2"><a href="#2-nacos服务端-v1-4-2" class="headerlink" title="2. nacos服务端(v1.4.2)"></a>2. nacos服务端(v1.4.2)</h2><h3 id="2-1-下载路径"><a href="#2-1-下载路径" class="headerlink" title="2.1 下载路径"></a>2.1 下载路径</h3><p>在官网的首页中点对应的版本进入github，在最下面有下载入口</p><h3 id="2-2-单机模式启动"><a href="#2-2-单机模式启动" class="headerlink" title="2.2 单机模式启动"></a>2.2 单机模式启动</h3><ol><li>cd到nacos的bin目录下</li><li>sh startup.sh -m standalone</li><li>查看进程是否已启动 ps -ef|grep nacos</li><li>查看启动日志 tail -300f ../logs/start.out</li><li>浏览器访问地址：<a href="http://127.0.0.1:8848/nacos/">http://127.0.0.1:8848/nacos/</a></li><li>登录账号密码，默认 nacos/nacos</li></ol><h2 id="3-配置中心-demo"><a href="#3-配置中心-demo" class="headerlink" title="3. 配置中心(demo)"></a>3. 配置中心(demo)</h2><h3 id="3-1-添加依赖"><a href="#3-1-添加依赖" class="headerlink" title="3.1 添加依赖"></a>3.1 添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-创建配置文件bootstrap-yml"><a href="#3-2-创建配置文件bootstrap-yml" class="headerlink" title="3.2 创建配置文件bootstrap.yml"></a>3.2 创建配置文件bootstrap.yml</h3><p>在子项目中添加配置文件bootstrap.yml，properties也可以</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">order-service</span></span><br></pre></td></tr></table></figure><h3 id="3-3-在nacos中添加配置项"><a href="#3-3-在nacos中添加配置项" class="headerlink" title="3.3 在nacos中添加配置项"></a>3.3 在nacos中添加配置项</h3><p>打开nacos地址，选择配置管理，选择配置列表，点击右侧➕</p><p>Data ID命名规则：${prefix}-${spring.profiles.active}.${file-extension}</p><ul><li><p>prefix 默认为 spring.application.name 的值，也可以通过配置项spring.cloud.nacos.config.prefix来配置。</p></li><li><p>spring.profiles.active 即为当前环境对应的 profile，注意：当 spring.profiles.active 为空时，对应的连接符 -</p><p>也将不存在，dataId 的拼接格式变成 ${prefix}.${file-extension}</p></li><li><p>file-exetension 为配置内容的数据格式，可以通过配置项 spring.cloud.nacos.config.file-extension 来配置。目前只支持 properties (默认)和 yaml 类型。</p></li></ul><p>例如创建order-service的配置文件</p><ul><li><p>Data ID: order-service.yaml</p></li><li><p>配置格式：YAML</p></li><li><p>配置内容：</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/order-service</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">demo:</span></span><br><span class="line">  <span class="attr">test1:</span> <span class="string">abc</span></span><br><span class="line">  <span class="attr">test2:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">demo2:</span> <span class="number">123</span></span><br></pre></td></tr></table></figure><ul><li><p>发布配置</p></li><li><p>编写测试代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1/order/config&quot;)</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;demo.test1:hello&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String demoTest1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;demo.test2:false&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> demoTest2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;demo2:-1&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer demo2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;demoTest1: &quot;</span> + demoTest1 + <span class="string">&quot;, demoTest2: &quot;</span> + demoTest2 + <span class="string">&quot;, demo2: &quot;</span> + demo2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>访问地址：<a href="http://127.0.0.1:8080/order-service/api/v1/order/config/get">http://127.0.0.1:8080/order-service/api/v1/order/config/get</a></li></ul><p>@RefreshScope注解可以在修改配置文件后不用重启，动态刷新配置</p><h2 id="4-注册中心-demo"><a href="#4-注册中心-demo" class="headerlink" title="4. 注册中心(demo)"></a>4. 注册中心(demo)</h2><h3 id="4-1-配置服务提供者-goods-service"><a href="#4-1-配置服务提供者-goods-service" class="headerlink" title="4.1 配置服务提供者(goods-service)"></a>4.1 配置服务提供者(goods-service)</h3><ul><li>添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同时需要添加配置中心的依赖</p><ul><li>新增配置文件bootstrap.yml</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yaml</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">goods-service</span></span><br></pre></td></tr></table></figure><ul><li>在nacos中新增goods-service.yaml配置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/goods-service</span></span><br></pre></td></tr></table></figure><ul><li>编写服务接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1/goods/&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getGoodsById&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGoodsById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;商品id：&quot;</span> + id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ID为&quot;</span>+ id + <span class="string">&quot;的商品&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试接口地址：<a href="http://127.0.0.1:8081/goods-service/api/v1/goods//getGoodsById?id=1">http://127.0.0.1:8081/goods-service/api/v1/goods//getGoodsById?id=1</a></li></ul><h3 id="4-2-配置客户端（order-service）"><a href="#4-2-配置客户端（order-service）" class="headerlink" title="4.2 配置客户端（order-service）"></a>4.2 配置客户端（order-service）</h3><ul><li>添加依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在启动类上添加注解@EnableDiscoveryClient 开启服务注册发现功能</li><li>编写feignClient服务接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;goods-service&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/goods-service&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/api/v1/goods/getGoodsById&quot;)</span></span><br><span class="line">    <span class="function">String <span class="title">getGoodsById</span><span class="params">(<span class="meta">@RequestParam(&quot;id&quot;)</span> String id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写调用代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsService goodsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/saveOrder&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">saveOrder</span><span class="params">(String goodsId)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;商品id: &quot;</span> + goodsId);</span><br><span class="line">        String goodsInfo = goodsService.getGoodsById(goodsId);</span><br><span class="line">        <span class="keyword">return</span> goodsInfo + <span class="string">&quot;下单成功！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试：<a href="http://127.0.0.1:8080/order-service/api/v1/order/saveOrder?goodsId=1">http://127.0.0.1:8080/order-service/api/v1/order/saveOrder?goodsId=1</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AlibabaCloud-聚合项目</title>
      <link href="/SpringCloud/AlibabaCloud-%E8%81%9A%E5%90%88%E9%A1%B9%E7%9B%AE/"/>
      <url>/SpringCloud/AlibabaCloud-%E8%81%9A%E5%90%88%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Demo简介"><a href="#Demo简介" class="headerlink" title="Demo简介"></a>Demo简介</h2><p>本笔记以三个微服务作为例子：订单服务（order-service），商品服务（goods-service），用户服务（user-service）</p><h2 id="创建聚合工程"><a href="#创建聚合工程" class="headerlink" title="创建聚合工程"></a>创建聚合工程</h2><p>首先创建一个空的maven项目，只保留pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.demo.alibabacloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>order-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>goods-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>user-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2020.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在该工程中创建子项目"><a href="#在该工程中创建子项目" class="headerlink" title="在该工程中创建子项目"></a>在该工程中创建子项目</h2><p>以order-service为例，user-service，goods-service和order类似</p><p>创建spring-boot项目，添加Spring Web依赖，修改pom.xml的parent依赖，删除groupId</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.aacopy.demo.alibabacloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>order-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>order-service<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>order-service<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sayHello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello &quot;</span> + name);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello &quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器访问<a href="http://127.0.0.1:8080/api/v1/order/sayHello?name=aacopy">http://127.0.0.1:8080/api/v1/order/sayHello?name=aacopy</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloudAlibaba</title>
      <link href="/SpringCloud/SpringCloudAlibaba/"/>
      <url>/SpringCloud/SpringCloudAlibaba/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SpringCloudAlibaba"><a href="#1-SpringCloudAlibaba" class="headerlink" title="1. SpringCloudAlibaba"></a>1. SpringCloudAlibaba</h2><p>SpringCloudAlibaba提供了微服务开发的一站式解决方案</p><h2 id="2-架构演进"><a href="#2-架构演进" class="headerlink" title="2. 架构演进"></a>2. 架构演进</h2><h3 id="2-1-单体架构"><a href="#2-1-单体架构" class="headerlink" title="2.1 单体架构"></a>2.1 单体架构</h3><p>优点：便于集成，易于测试，部署，对小型项目友好</p><p>缺点：启动慢，依赖庞大，CI/CD复杂度高，升级重构成本大</p><h3 id="2-2-分布式架构"><a href="#2-2-分布式架构" class="headerlink" title="2.2 分布式架构"></a>2.2 分布式架构</h3><ul><li><p>SOA： 面向服务的架构，服务间通过相互依赖提供功能，服务之前通过网络调用</p></li><li><p>微服务： 将一个大的单体应用进行细粒度的服务化拆分，每个服务各自打包部署，服务间通过网络调用</p></li></ul><p>优点：易开发，理解和维护，独立部署和启动，微服务间是松耦合的，可以通过不同的语言开发，一个组件故障不会导致整个系统宕机</p><p>缺点：存在分布式事务问题，服务治理</p><h3 id="2-3-分布式架构考虑的因素"><a href="#2-3-分布式架构考虑的因素" class="headerlink" title="2.3 分布式架构考虑的因素"></a>2.3 分布式架构考虑的因素</h3><ul><li>服务编排调度<ul><li>应对不对增长的服务实例和容器规模，Kubernetes</li></ul></li><li>服务注册发现<ul><li>解决众多微服务之间复杂的调用关系，Consul，Zookeeper，Nacos，Eureka</li></ul></li><li>服务状态，集群管理<ul><li>解决庞大规模集群的服务和机器运行状态，Kubernetes</li><li>Skywalking可以解决复杂的分布式链路追踪，监控各个服务的状态</li></ul></li><li>容器数据存储<ul><li>解决容器存储是临时的问题，Kubernetes Persistent volume</li></ul></li><li>网络<ul><li>服务间的通讯通过RPC的方式，依赖网络，需要确认网络的可用性及带宽，优化网络IO的开销</li></ul></li><li>容器隔离技术<ul><li>多容器在同一个主机上运行，管理进程与进程之间的访问权限，Flannel，Weaveworks，Calico</li></ul></li><li>监控，审核，日志<ul><li>Loggly，Fluentd，日志条目，Datadog，ELK</li></ul></li></ul><h3 id="2-4-构建微服务的目标"><a href="#2-4-构建微服务的目标" class="headerlink" title="2.4 构建微服务的目标"></a>2.4 构建微服务的目标</h3><ul><li>降低维护成本</li><li>提高部署效率</li><li>提高系统弹性</li><li>监测服务状态</li></ul><h3 id="2-5-构建微服务的关键的"><a href="#2-5-构建微服务的关键的" class="headerlink" title="2.5 构建微服务的关键的"></a>2.5 构建微服务的关键的</h3><ul><li>可伸缩性<ul><li>在系统扩展过程中，通过较少的改动就能实现整体系统处理能力的提升</li><li>侧重系统的水平扩展，通过加机器实现分布式计算</li></ul></li><li>可用性<ul><li>通常使用多少个9来衡量系统可用性，比如99.99%即4个9表示1年中系统有一个小时不可用</li><li>服务可用性 = （服务周期总分钟数 - 服务不可用分钟数）/ 服务周期总分钟数 * 100%</li><li>一个服务周期为一个自然月</li><li>通过故障服务自动隔离，调用降级实现高可用</li></ul></li><li>弹性能力<ul><li>即从某些类型的故障中恢复并保持功能的能力</li><li>很大程度上取决于微服务的通讯弹性</li></ul></li><li>可扩展性<ul><li>水平扩展：添加现有节点相同功能的新节点，在重新分配负载</li><li>垂直扩展：增加CPU，内存，磁盘，网络接口等提高机器的性能</li></ul></li><li>高内聚，低耦合<ul><li>需要以面向对象思想设计系统</li></ul></li><li>服务治理能力<ul><li>管理众多应用服务</li></ul></li><li>故障隔离<ul><li>调用方要确保自己具有隔离故障的能力，避免被调服务不可用</li></ul></li><li>DevOps持续交付<ul><li>DEV（开发人员），OPS（运维人员）</li><li>DevOps强调的是团队间可以通过自动化工具来进行协作沟通贸易完成软件生命周期管理，从而更快，更频繁的交付更稳定的版本</li></ul></li></ul><h2 id="微服务架构核心组件"><a href="#微服务架构核心组件" class="headerlink" title="微服务架构核心组件"></a>微服务架构核心组件</h2><ul><li>网关：路由转发及过滤器，将Restful API以统一域名的方式暴露给app或者浏览器</li><li>服务发现与注册：调用方和被调用方的信息维护</li><li>配置中心：管理配置</li><li>链路追踪：分析调用链路耗时</li><li>负载均衡：分发流量到多个节点</li><li>熔断：保护自己和被调用方</li></ul><h2 id="常见微服务的解决方案"><a href="#常见微服务的解决方案" class="headerlink" title="常见微服务的解决方案"></a>常见微服务的解决方案</h2><ul><li>SpringCloudAlibaba<ul><li><a href="https://spring.io/projects/spring-cloud-alibaba">https://spring.io/projects/spring-cloud-alibaba</a></li><li>组件：<ul><li>通信方式：http restful (open-feign)，Dubbo</li><li>注册中心：nacos</li><li>配置中心：nacos</li><li>断路器：sentinal</li><li>网关：gateway</li><li>链路追踪：sleuth+zipkin</li><li>分布式事务：Seata</li><li>消息中间件：RocketMQ</li></ul></li></ul></li><li>SpringCloud<ul><li><a href="https://spring.io/projects/spring-cloud">https://spring.io/projects/spring-cloud</a></li><li>组件：<ul><li>通信方式：http restful</li><li>注册中心：eruka</li><li>配置中心：config</li><li>断路器：hystrix</li><li>网关：zuul/gateway</li><li>链路追踪：sleuth+zipkin</li></ul></li></ul></li><li>dubbo<ul><li><a href="https://dubbo.apache.org/zh/">https://dubbo.apache.org/zh/</a></li><li>组件：<ul><li>通信方式：rpc</li><li>注册中心：zookeper/redis/nacos</li><li>配置中心：diamond，nacos</li></ul></li></ul></li></ul><h2 id="SpringCloudAlibaba与SpringCloud的区别和选择"><a href="#SpringCloudAlibaba与SpringCloud的区别和选择" class="headerlink" title="SpringCloudAlibaba与SpringCloud的区别和选择"></a>SpringCloudAlibaba与SpringCloud的区别和选择</h2><ul><li>SpringCloud很多组件是基于第三方整合的，目前很多已经不更新或者闭源了，比如zuul，eureka，hystrix</li><li>SpringCloudAlibaba提供一站式微服务解决方案，已经和SpringCloud进行了整合，组件相互支持</li></ul><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>SpringCloud需要严格按照官方文档上表明的SpringBoot版本使用</p><p><strong>Table 1. Release train Spring Boot compatibility</strong></p><table><thead><tr><th align="left">Release Train</th><th align="left">Boot Version</th></tr></thead><tbody><tr><td align="left"><a href="https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2020.0-Release-Notes">2020.0.x</a> aka Ilford</td><td align="left">2.4.x, 2.5.x (Starting with 2020.0.3)</td></tr><tr><td align="left"><a href="https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-Hoxton-Release-Notes">Hoxton</a></td><td align="left">2.2.x, 2.3.x (Starting with SR5)</td></tr><tr><td align="left"><a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Greenwich-Release-Notes">Greenwich</a></td><td align="left">2.1.x</td></tr><tr><td align="left"><a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Finchley-Release-Notes">Finchley</a></td><td align="left">2.0.x</td></tr><tr><td align="left"><a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Edgware-Release-Notes">Edgware</a></td><td align="left">1.5.x</td></tr><tr><td align="left"><a href="https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Dalston-Release-Notes">Dalston</a></td><td align="left">1.5.x</td></tr></tbody></table><p>当前笔记使用的环境和版本，（后续大版本变动再更新）</p><p>MAC，IDEA，JDK1.8，MySql5.7</p><p>spring-boot: 2.5.4</p><p>spring-cloud: 2020.0.3</p><p>spring-cloud-alibaba: 2.2.1.RELEASE</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
